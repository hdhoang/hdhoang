#+STARTUP: showall
#+PROPERTY: header-args+ :cache yes
#+PROPERTY: header-args+ :comments org
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :noweb yes
#+PROPERTY: header-args+ :results silent
#+PROPERTY: header-args+ :tangle-mode 384
#+PROPERTY: header-args:text+ :eval no
* Hoàng Đức Hiếu
  :PROPERTIES:
  :EXPORT_OPTIONS: toc:nil date:nil arch:nil num:nil author:nil email:t tags:nil
  :END:
#+EMAIL: 1988 / +84-166-241-9526 / cv@hdhoang.space
#+SELECT_TAGS: vi
#+LATEX_CLASS_OPTIONS: [twocolumn]
#+LATEX_HEADER: \usepackage{libertine}
#+LATEX_HEADER: \usepackage{xcolor-solarized, sectsty}
#+LATEX_HEADER: \usepackage[pagecolor={solarized-base3}]{pagecolor}
#+LATEX: \sectionfont{\color{solarized-blue}}
#+LATEX: \subsectionfont{\color{solarized-cyan}}
#+LATEX: \vspace*{-197pt}\includegraphics{Pictures/mug/img078}
#+LATEX_HEADER: \usepackage{titling}
#+LATEX_HEADER: \pretitle{\begin{flushright}\LARGE}
#+LATEX_HEADER: \posttitle{\par\end{flushright}}
#+LATEX_HEADER: \preauthor{\begin{flushright}}
#+LATEX_HEADER: \postauthor{\end{flushright}}
#+LATEX_HEADER: \pagenumbering{gobble}
** Education								 :en:
   - 2014 - now :: Studying System Administration and software testing
                   at Bachkhoa-Aptech (graduating 2016H2)
   - 2013 - 2014 :: Finished K12 and completed accounting course at
                    Quang Trung private school
   - 2007 - 2012 :: Self-learned various topics
     - Programming languages (Python, shells, HTML5, Emacs Lisp, Rust)
     - History of free software
     - Hanoi GNU/Linux user community
     - Wing-chun martial art
     - The constructed logical language Lojban
   - 2006 - 2007 :: Freshman in computer programming at Monash
                    College, Australia (earned Distinction and High
                    Distinction in most subjects)
   - 2003 - 2006 :: Chu Van An Highschool, majoring in English
#+LATEX: \newpage
** Tiểu sử								 :vi:
   - 2014 - nay :: học quản trị mạng và kiểm thử phần mềm tại
                   Bachkhoa-APTECH (dự kiến tốt nghiệp năm 2016)
#+LATEX: \newpage
** Qualifications and skills						 :en:
*** IT skills
   - In-depth GNU/Linux usage and administration, experienced in
     self-hosting web sites (ownCloud on Debian Apache, ArchLinux nginx)
   - Comprehensive network understanding (routing, firewall, encryption)
   - Using version control systems, especially git
   - Contributing to free software projects ([[https://www.openhub.net/accounts/hdhoang/positions][hdhoang on OpenHub]])
   - Office equipment troubleshooting
*** Language skills
   - Fluency in English (990 in TOEIC, 2015)
   - Elementary Japanese (N4 equivalent)
*** Others
   - Self-teaching discipline
   - Strong interest in learning new topics
** Kĩ năng								 :vi:
*** Kĩ năng IT
     - Sử dụng và quản trị các hệ thống GNU/Linux chuyên sâu, tự quản
       trị dịch vụ web (owncloud, Debian Apache, ArchLinux nginx)
     - Hiểu biết rõ hệ thống mạng (định tuyến, tường lửa)
     - Sử dụng hệ thống quản lí phiên bản, đặc biệt là git
     - Đóng góp vào các dự án phần mềm tự do ([[https://www.openhub.net/accounts/hdhoang][hdhoang trên OpenHub]])
     - Xử lý vấn đề các thiết bị văn phòng
*** Kĩ năng ngôn ngữ
     - Tiếng Anh thuần thục (TOEIC 990, 2015)
     - Tiếng Nhật cơ bản (tương đương N4)
** Interests								 :en:
   - Exploring science, history, and natural subjects
   - Science-fiction novels, rational fanfictions
   - Electric guitar riffs
   - Frequent blood donor until no longer eligible
** Sở thích								 :vi:
    - Khám phá các chủ đề khoa học, lịch sử, tự nhiên
    - Tiểu thuyết khoa học viễn tưởng, ???
    - Nghe solo guitar điện
    - Thường xuyên hiến máu cho đến khi hết khả năng

* Places and names
  #+BEGIN_SRC html :tangle ~/Public/index.html :tangle-mode 388
    <!doctype html>
    <meta charset=utf-8>

    <link rel="openid2.provider"
          href="https://www.google.com/accounts/o8/ud?source=profiles" >
    <link rel="openid2.local_id"
          href="https://www.google.com/profiles/110711359835920217300" >

    <!-- <title>OpenID endpoint (myopenid)</title> -->
    <!-- <link rel="openid.server" href="http://www.myopenid.com/server" /> -->
    <!-- <link rel="openid.delegate" href="http://lazni.myopenid.com/" /> -->

    <!-- <title>OpenID endpoint (ownopenidserver)</title> -->
    <!-- <link rel="openid.server" -->
    <!--       href="https://id.<<domain>>/server.py/endpoint"> -->

    <!-- <title>OpenID endpoint (poit)</title> -->
    <!-- <link rel="openid2.provider" -->
    <!--       href="https://id.<<domain>>/poit.py"> -->

    <!-- <title>OpenID endpoint (startssl)</title> -->
    <!-- <link rel="openid2.provider openid.server" -->
    <!--      href="https://www.startssl.com/id.ssl" /> -->
    <!-- <link rel="openid2.local_id openid.delegate" -->
    <!--      href="https://<<username>>.startssl.com/" /> -->

    <p>Elsewhere on the net:
      <dl>
        <dt><<username>><dd><ul>
                <li><a rel=me href=https://telegram.me/<<username>>>Telegram</a></li>
                <li><a rel=me href=https://www.openhub.net/accounts/<<username>>>OpenHub</a></li>
                <li><a rel=me href=https://gitlab.com/u/<<username>>>Gitlab</a></li>
                <li><a rel=me href=https://github.com/<<username>>?tab=activity>Github</a></li>
                <li><a rel=me href=http://www.last.fm/user/<<username>>>Last.fm</a></li>
                <li><a rel=me href=https://facebook.com/hdh000/about>Facebook</a></li>
            </ul></dd>
        <dt>lasigmaz<dd><ul>
              <li><a rel=me href=https://twitter.com/lasigmaz>Twitter</a></li>
              <li><a rel=me href=https://steamcommunity.com/id/lasigmaz>Steam</a></li>
            </ul></dd>
    </p>

    <p xmlns:dct="http://purl.org/dc/terms/" xmlns:vcard="http://www.w3.org/2001/vcard-rdf/3.0#">
      <a rel="license"
         href="https://creativecommons.org/publicdomain/zero/1.0/">
        <img src="https://i.creativecommons.org/p/zero/1.0/88x31.png" style="border-style: none;" alt="CC0" />
      </a>
      <br />
      To the extent possible under law,
      <a rel="dct:publisher"
         href="https://<<domain>>">
        <span property="dct:title">Hoàng Đức Hiếu</span></a>
      has waived all copyright and related or neighboring rights to
      this work.
    This work is published from:
    <span property="vcard:Country" datatype="dct:ISO3166"
          content="VN" about="https://<<domain>>">
      Vietnam</span>.
    </p>

    <p>I have a maybe-blog:<ul>
    <li><a href=vanity-irc.html>Showing a custom hostname to Freenode</a>.
    <li><a href=borrow-die.html>Borrow checker analogy</a>.
  #+END_SRC

  #+NAME: username
  #+BEGIN_SRC text
    hdhoang
  #+END_SRC

  #+NAME: domain
  #+BEGIN_SRC text
    <<username>>.space
  #+END_SRC

  #+BEGIN_SRC emacs-lisp :tangle ~/.emacs
    (setq user-mail-address "<<username>>@<<domain>>")
  #+END_SRC

  #+NAME: storage
  #+BEGIN_SRC text
    /home/<<username>>/sync
  #+END_SRC

  #+NAME: videos
  #+BEGIN_SRC text
    /h/Public/Videos
  #+END_SRC

  #+NAME: prefix
  #+BEGIN_SRC text
    10.117.14.
  #+END_SRC

  #+NAME: prefix6
  #+BEGIN_SRC text
    2001:470:36:62a::
  #+END_SRC

  #+NAME: system_ctl
  #+BEGIN_SRC text
    systemctl --system --no-pager
  #+END_SRC

  #+NAME: user_ctl
  #+BEGIN_SRC text
    systemctl --user --no-pager
  #+END_SRC

  #+NAME: pacman
  #+BEGIN_SRC text
    yaourt --noconfirm --needed
  #+END_SRC

  #+NAME: ytdl
  #+BEGIN_SRC text
    youtube-dl --no-mtime --format "[height <=? 480]" --output <<videos>>/"%(uploader)s %(upload_date)s %(title)s@%(id)s.%(ext)s"
  #+END_SRC

* Blog
  #+BEGIN_SRC css :tangle ~/Public/blog.css
    body {
        background: #fdf6e3; color: #657b83;
        margin: 0 25%;
        line-height: 1.5;
    }
  #+END_SRC
** Consumption
*** <2016-01-18 Mon> Rạng Đông A55N2/5W (42,200đ)
** Borrow-checking with friends
   :PROPERTIES:
   :EXPORT_FILE_NAME: ~/Public/borrow-die
   :END:
   #+BEGIN_SRC rust :tangle ~/Public/die.rs
     #[derive(Debug)]
     enum D3 { One, Two, Three }
     impl D3 {
         fn peek(self: &D3, name: &str) {
             println!("{} sees that it's {:?}.", name, self);
         }
     }
   #+END_SRC
   Our main character, named Max, has a d3.
   #+BEGIN_SRC rust :tangle ~/Public/die.rs
     fn main() {
         print!("Hi, I'm Max. ");
         let mut die = D3::Two;
         die.peek("Max");
   #+END_SRC
   Max can rolls his die:
   #+BEGIN_SRC rust :tangle ~/Public/die.rs
         die = D3::One;
         die.peek("Max");
   #+END_SRC
   Max invites Alice and Bob over for a game of dice. The die is on the table and everyone can see what it's showing.
   #+BEGIN_SRC rust :tangle ~/Public/die.rs
         'table: loop {
             let bob = &die;
             bob.peek("Bob");
             die.peek("Everyone"); // same thing
             break 'table; // that's enough peeking for now
         }
    #+END_SRC
    It's Alice's turn, she picks up the die and rolls.
    #+BEGIN_SRC rust :tangle ~/Public/die.rs
         'alices_turn: loop {
             let alice = &mut die;
             *alice = D3::Three;
             alice.peek("Alice");
             break 'alices_turn;
         }
    #+END_SRC
    It lands on the table and now everyone sees what Alice rolled.
    #+BEGIN_SRC rust :tangle ~/Public/die.rs
         die.peek("Max");
     }
   #+END_SRC
   [[file:borrow-die.rs][Full code.]]
** Vanity plate on IRC
   :PROPERTIES:
   :EXPORT_FILE_NAME: ~/Public/vanity-irc
   :END:
*** Ingredients:
    - An IPv6 block whose PTR you can delegate (I use Hurricane Electric's [[https://tunnelbroker.net][tunnelbroker service]])
    - A hostname whose AAAA you can change (I'm using a full domain, hosted on [[https://cloudflare.com][CloudFlare]], but it should works [[https://freedns.afraid.org][with subdomains]])
    - I'm using a Debian machine to connect to Freenode
*** Recipes:
    1. Request an IPv6 tunnel with HE
    2. Delegate its rDNS to [[https://dns.he.net][dns.he.net]]
    3. Match forward and reverse DNS between an address and your hostname:
       #+BEGIN_SRC sh :results replace
         bash -c 'diff <(nslookup test-plate.hdhoang.space.) <(nslookup 2001:470:36:62a::cccc)'
       #+END_SRC

       #+RESULTS[b43b6d2d898df8156aa60d0405a8b2f68660f12d]:

       - Choose an address, point it to your hostname
       - Add the address to the hostname's AAAA records
    6. Connect to Freenode with that address as the source, for example:
       #+BEGIN_SRC sh
         for fn in $(dig +short -t aaaa chat.freenode.net); do
             ip -6 route add $fn src $address dev $tunnel_interface;
         done;
       #+END_SRC
       or
       #+BEGIN_SRC sh
         ip -6 route add default src $address dev $tunnel_interface
       #+END_SRC

* OpenVPN
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S openvpn
  #+END_SRC
  #+NAME: openvpn_common
  #+BEGIN_SRC conf
    dev tun
    topology subnet
    persist-key
    persist-tun
    keepalive 10 30
    tls-version-min 1.2
    tls-cipher TLS-DHE-RSA-WITH-AES-128-CBC-SHA
    <tls-auth>
    <<ta_key>>
    </tls-auth>
    <ca>
    -----BEGIN CERTIFICATE-----
    MIIEYTCCA0mgAwIBAgIJAPxrcItU3yz8MA0GCSqGSIb3DQEBCwUAMH0xCzAJBgNV
    BAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFOb2kxDTALBgNVBAoTBHph
    aGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3phaGUubWUxHjAcBgkqhkiG
    9w0BCQEWD2hkaG9hbmdAemFoZS5tZTAeFw0xNTA5MjYxMTM0NTRaFw0yNTA5MjMx
    MTM0NTRaMH0xCzAJBgNVBAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFO
    b2kxDTALBgNVBAoTBHphaGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3ph
    aGUubWUxHjAcBgkqhkiG9w0BCQEWD2hkaG9hbmdAemFoZS5tZTCCASIwDQYJKoZI
    hvcNAQEBBQADggEPADCCAQoCggEBANXOfdISWeotIr3neKpj6IGBlCLMEBNtMB1r
    bTIgkxe9tnNd4jBufq6duLK91ioqcJiAxMLRovYtaRTOpQit5/PnAm2Iwu3u2mGX
    EftWEBSVt437NMVA6L2Jemv1lp81vmzJIODgPQ9elrNteQ3ccAMCpuj/l6PhGeFq
    JvK+dNIJcm2+xM15S6ESwjsZxwijiT3TMJAjXJPC5R3gpULoTHrphPGrS/0RIq9c
    Bd/+4Q7k1MguPK2XSKHiJnUIkQJ/m/XGT2iXVEzhOsHZ8vlaNq1xBzTko10nEb7I
    sOQjuH4GCZMeoYnF3egg534fg+BYPAecuKglqdIpnm4+syJsrR0CAwEAAaOB4zCB
    4DAdBgNVHQ4EFgQUsDCM7/aJ6AjPVQPEbdDTiTa9WIswgbAGA1UdIwSBqDCBpYAU
    sDCM7/aJ6AjPVQPEbdDTiTa9WIuhgYGkfzB9MQswCQYDVQQGEwJWTjELMAkGA1UE
    CBMCSE4xDjAMBgNVBAcTBUhhTm9pMQ0wCwYDVQQKEwR6YWhlMRAwDgYDVQQDEwd6
    YWhlIENBMRAwDgYDVQQpEwd6YWhlLm1lMR4wHAYJKoZIhvcNAQkBFg9oZGhvYW5n
    QHphaGUubWWCCQD8a3CLVN8s/DAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUA
    A4IBAQAKkiDOWmwu1D+qbCSYaSxiMfJ70FyA/o+AuCDeaGxKdFLZ2JQgYK/az3y8
    tGQKBc6AdUY7BoN1Ab/6TOz+hWvmyNOOvq2AMgt2bHHA+JquRZMdgw59OtbB2BjC
    vBs2cxRJWdmv8aSltcqVpm2HNHy3mzcq8i0CdFluxDV+zQmvhGVypAipYTlhdi0l
    KLJlB+3fqS5GQB0wPmkV2N6WJdm0NfoTbBOCXwVb4ChyrgryQaOQi5nu8wO9tzeO
    kK/jQJRFKpdwBYqAe0Q/JP95pVjctyiVFg97ppvQ557QFcY1pHapAwhyBmxYiLak
    W4pz42IduC2pnZ3ut4C7UzpeDMRr
    -----END CERTIFICATE-----
    </ca>
  #+END_SRC

* SSH
  :PROPERTIES:
  :header-args+: :tangle ~/.ssh/config
  :END:

  SSH encryption settings by https://stribika.github.io/2015/01/04/secure-secure-shell.html

  #+BEGIN_SRC conf
    Host *
    KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
    Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com,hmac-sha1
  #+END_SRC

  Machines
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    <<prefix>>1 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBL5T08oNKjMm7yWA0zqqqSwl6Vn0nlpoAlpP9USh0NewyfVO/xOGgkUWIlUU8p85Z3zK9YY3pl0zfQQrQHvp88Y=
    <<prefix>>185 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBMCCrxVyoz4ekNh2zAbr2JzvJdojMMoHYnbo20Qjn3sW+P7FUuuiknzbX0aX81BZWdKFwspNLJAXHLoiS8zy8Wc=
  #+END_SRC
  #+BEGIN_SRC conf
    Host <<prefix>>1
    User root
    IdentityFile ~/.ssh/kub
  #+END_SRC
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'tramp
      '(add-to-list 'tramp-default-method-alist '("vorme" nil "scp")))
  #+END_SRC

  #+BEGIN_SRC conf
    Host <<prefix>>185
    User <<username>>
    IdentityFile ~/.ssh/kub
  #+END_SRC
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'tramp
      '(add-to-list 'tramp-default-proxies-alist '("<<prefix>>185" "root" "/ssh:<<prefix>>185:")))
  #+END_SRC

* KDE
** kwin
   :PROPERTIES:
   :header-args+: :tangle ~/.config/kwinrulesrc
   :END:

   #+BEGIN_SRC conf
     [1]
     Description=Window settings for firefox
     shortcut=F5
     shortcutrule=2
     windowrole=browser
     windowrolematch=1
     wmclass=navigator firefox
     wmclasscomplete=true
     wmclassmatch=1
   #+END_SRC

   Put emacs on F4
   #+BEGIN_SRC conf
     [2]
     Description=Application settings for emacs
     shortcut=F4
     shortcutrule=2
     wmclass=emacs
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   Put konsole on F6
   #+BEGIN_SRC conf
     [3]
     Description=Application settings for konsole
     shortcut=F6
     shortcutrule=2
     wmclass=konsole
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   #+BEGIN_SRC conf
     [4]
     Description=No border on anything
     noborder=true
     noborderrule=2
   #+END_SRC

   #+BEGIN_SRC conf
     [General]
     count=4
   #+END_SRC

* Git
  #+BEGIN_SRC conf :tangle .git/config
    [core]
            repositoryformatversion = 0
            filemode = true
            bare = false
            logallrefupdates = true
    [remote "origin"]
            url = https://gitlab.com/<<username>>/<<username>>
            pushUrl = gitlab.com:<<username>>/<<username>>
            pushUrl = github.com:<<username>>/<<username>>
            pushUrl = bitbucket.org:<<username>>/<<username>>
            fetch = +refs/heads/*:refs/remotes/origin/*
    [branch "master"]
            remote = origin
            merge = refs/heads/master
  #+END_SRC

  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S git
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [user]
    name = Hoàng Đức Hiếu
    email = <<username>>@<<domain>>
    [color]
    ui = auto
    [core]
    eol = lf
    whitespace = trailing-space,space-before-tab
    [alias]
    ml = log --reverse --topo-order ORIG_HEAD..
    [merge]
    conflictstyle = diff3
    [push]
    default = simple
    [pull]
    rebase = true
    [rebase]
    stat = true
  #+END_SRC

  Code hosting sites:
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
    gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
  #+END_SRC
  #+BEGIN_SRC conf :tangle ~/.ssh/config
    Host gitlab.com github.com bitbucket.org
    User git
    IdentityFile ~/.ssh/git
    Host git.kde.org
    User git
    IdentityFile ~/.ssh/kde
    Host heroku.com
    IdentityFile ~/.ssh/heroku
  #+END_SRC

  Magit is awesome.
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package magit
           :bind ("C-x g" . magit-status)
           :config
           (setq magit-save-repository-buffers 'dontask
                 magit-push-always-verify nil))))
  #+END_SRC

* Crawl
  #+BEGIN_SRC conf :tangle ~/.crawlrc
    tile_full_screen = false
    autopickup_exceptions += <tomahawk, <throwing net, <javelin, <rock, <immol
    autopickup_exceptions += <misc, <ego, <artefact, <mutagenic
  #+END_SRC

* ArchLinux
  Pacman config
  #+NAME: pacman_common
  #+BEGIN_SRC conf
    [options]
    VerbosePkgLists
    UseSyslog
    CheckSpace
    HoldPkg = pacman glibc
    SigLevel = Required DatabaseOptional
    LocalFileSigLevel = Optional

    [core]
    Include = /etc/pacman.d/mirrorlist
    [extra]
    Include = /etc/pacman.d/mirrorlist
    [community]
    Include = /etc/pacman.d/mirrorlist
    [blackarch]
    Server = http://f.archlinuxvn.org/$repo/$repo/os/$arch
  #+END_SRC

  Refresh database
  #+BEGIN_SRC sh :dir /sudo::
    dirmngr --daemon
    pacman-key -r 7533BAFE69A25079
    pacman-key --lsign 7533BAFE69A25079
    <<pacman>> -S -y
  #+END_SRC

  AUR helper
  #+BEGIN_SRC yaml :tangle ~/Copy/bin/aur :shebang #!/bin/ansible-playbook
    - hosts: arch
      gather_facts: no
      vars:
        store: /tmp/aur
      vars_prompt:
        - name: package
          private: no
      tasks:
        - file: state=directory path={{store}}
        - get_url: url=https://aur4.archlinux.org/cgit/aur.git/snapshot/{{package}}.tar.gz dest={{store}}/
        - unarchive: copy=no src={{store}}/{{package}}.tar.gz dest={{store}}
        - command: nice makepkg --noconfirm --install --force --syncdeps chdir={{store}}/{{package}}
  #+END_SRC

  Yaourt config
  #+BEGIN_SRC conf :tangle ~/.yaourtrc
    AURUPGRADE=1
    EXPORT=1
    EXPORTDIR=~
    BUILD_NOCONFIRM=1
    EDITFILES=0
  #+END_SRC

  Base utils
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S haveged p7zip parallel pkgfile yaourt
    <<system_ctl>> enable --now haveged
  #+END_SRC

  #+BEGIN_SRC sh
    pkgfile -u
  #+END_SRC

  Dev-env:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S base-devel rust android-tools
  #+END_SRC

  Monitoring:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ethtool lm_sensors net-tools psmisc \
        procps-ng inetutils ltrace sysdig atop iotop
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/Copy/bin/strace :shebang #!/bin/sh :no-expand
    exec /usr/bin/ltrace -CSn2 $@
  #+END_SRC

  Of course emacs is installed, now run it
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S emacs-pkgbuild-mode
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.config/systemd/user/emacs.service
    [Unit]
    Description=Emacs

    [Service]
    ExecStart=/bin/emacs
    Restart=always
    RestartSec=1sec

    [Install]
    WantedBy=default.target
  #+END_SRC

  #+BEGIN_SRC sh :dir ~
    <<user_ctl>> enable --now emacs syncthing pulseaudio
  #+END_SRC

** kub
   :PROPERTIES:
   :header-args+: :dir /sudo:10.117.14.185:
   :END:
*** Mounts
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/fstab
      LABEL=<<username>> /home/<<username>> auto
      LABEL=var /var auto
    #+END_SRC

*** Network
    :PROPERTIES:
    :header-args+: :tangle-mode 260
    :END:
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/network/eth0.network
      [Match]
      Name = eth0

      [Network]
      Address = <<prefix>>185/24
      Gateway = <<prefix>>1
      DNS = <<prefix>>1
      IPForward = yes

      Tunnel=he-ipv6
      Address=<<prefix6>>1/64
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/network/he-ipv6.netdev
      [NetDev]
      Name=he-ipv6
      Kind=sit
      MTUBytes=1472

      [Tunnel]
      Local=<<prefix>>185
      Remote=216.218.221.42
      TTL=255
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/network/he-ipv6.network
      [Match]
      Name=he-ipv6
      [Network]
      Address=2001:470:35:62a::2/64
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/system/he-ipv6-route.service
      [Unit]
      After=network.target

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      ExecStart=/bin/ip -6 route add default src <<prefix6>>1 dev he-ipv6
      ExecStop=/bin/ip -6 route del default

      [Install]
      WantedBy=multi-user.target
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/radvd.conf
      interface eth0 {
      AdvSendAdvert on;
      MinRtrAdvInterval 3;
      MaxRtrAdvInterval 10;
      AdvLinkMTU 1472;
      prefix <<prefix6>>/64 {
      AdvOnLink on;
      AdvRouterAddr on;
      };
      };
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/resolv.conf
      nameserver <<prefix>>1
    #+END_SRC

*** Pacman
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/pacman.conf :tangle-mode 260
      <<pacman_common>>

      [options]
      Architecture = armv7h

      [alarm]
      Include = /etc/pacman.d/mirrorlist
      [aur]
      Include = /etc/pacman.d/mirrorlist
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/pacman.d/mirrorlist
      Server = http://vn.mirror.archlinuxarm.org/$arch/$repo
    #+END_SRC

*** LED blinking
    #+BEGIN_SRC sh :tangle /sudo:10.117.14.185:/usr/local/bin/leds :shebang #!/bin/sh
      echo none > /sys/class/leds/cubieboard:green:usr/trigger
      echo mmc0 > /sys/class/leds/cubieboard:blue:usr/trigger
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/system/leds.service
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/leds
      RemainAfterExit=true

      [Install]
      WantedBy=basic.target
    #+END_SRC

*** Tor
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S tor
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/tor/torrc
      ContactInfo tor at <<domain>>
      Nickname kub
      DirPort 4660
      ORPort 5880
      SOCKSPort <<prefix>>54:9050
      MaxAdvertisedBandwidth 40 KBytes
      ExitPolicy reject *:*

      DataDirectory /var/lib/tor
      Log notice syslog
    #+END_SRC

*** HTTP
    #+BEGIN_SRC sh
      <<pacman>> -S nginx
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/nginx/nginx.conf
      events {}
      http {
      include       mime.types;
      default_type  text/plain;
      charset utf-8;
      gzip off;

      access_log  off;
      log_not_found off;

      server {
      return 301 https://$host$request_uri;
      }

      ssl_protocols TLSv1.2;
      ssl_ciphers EECDH+CHACHA20:EECDH+AES128;
      ssl_prefer_server_ciphers on;
      add_header Strict-Transport-Security max-age=31536000;

      map $request_uri $dest {
      /c /mirror/caps2ctrl.exe;
      /d http://5digits.org/nightly/pentadactyl-latest.xpi;
      /pe http://live.sysinternals.com/;
      /s https://puttytray.goeswhere.com/download/putty.exe;

      default "";
      }

      server {
      listen 443 ssl spdy default_server;
      ssl_certificate <<domain>>.crt;
      ssl_certificate_key <<domain>>.key;
      server_name kub.<<domain>> <<domain>>;
      root /home/<<username>>/Public/;
      autoindex on;
      if ($dest) {
      return 301 $dest;
      }
      location /ipfs/ {
      proxy_pass http://127.0.0.1:4005;
      }
      location ~ /mirror/(?:.*)\.part {
      return 403 incomplete;
      }
      }

      server {
      listen 443 ssl spdy;
      server_name id.<<domain>>;
      root /home/<<username>>/Public/;
      index <<username>>;
      default_type text/html;
      }
      }
    #+END_SRC

*** DLNA
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S minidlna
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/minidlna.conf
      friendly_name=kub
      port=8200

      media_dir=<<storage>>
      media_dir=A,<<fav_music>>
      media_dir=V,/home/<<username>>/Public/mirror
    #+END_SRC
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<system_ctl>> enable --now minidlna
    #+END_SRC

*** IPsec
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/ipsec.conf
      ca <<username>>
          auto=add
          cacert=ca.crt

      conn kub
          auto=add
          left=<<prefix>>54
          leftid=k.<<domain>>
          leftcert=kub.crt
          leftsubnet=<<prefix>>0/24
          leftfirewall=yes
          leftdns=<<prefix>>1

          rightauth=eap-mschapv2
          eap_identity=%any
          rightsourceip=%dhcp
    #+END_SRC

*** OpenVPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo:kub:/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 0
      tls-server
      <pkcs12>
      <<kub_pfx>>
      </pkcs12>
      <dh>
      -----BEGIN DH PARAMETERS-----
      MIIBCAKCAQEAoioJw6aUXmgBDSw6SzbSZww6i7eH0MC+Eba5qGmYJnKn2zI8dBH6
      JZKnAyz9MbD21loI6KjAnOzZkBp7DKle1cACLS229Olycr22rXWPFuhMV15TohDJ
      ArazVXSJGDL9OXhdHei96K3qXofz/3AzXEVxD0unQd5sRlgNGmunofvgWBechdmn
      YQl44SZ0asC8uUY1uiKjVyQzqeNDi3rjJtTobcPdR6Pb8CnS3cfwoWzXMwUexmfJ
      VQSNaDZIeQcwV5MEHs1XViOTiEvT8IHbJojJri0geUSJ+HkX1JTxGIUj4xxKHQ0j
      AFEjqDYFh3q7U6QgFLRWZffVLgxIZVopIwIBAg==
      -----END DH PARAMETERS-----
      </dh>
      user nobody
      group nobody

      mode server

      server 10.255.0.0 255.255.255.0
      push "route <<prefix>>54"
    #+END_SRC

*** SSH
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/ssh/sshd_config
      Protocol 2
      HostKey /etc/ssh/ssh_host_ed25519_key
      HostKey /etc/ssh/ssh_host_rsa_key

      KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
      MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com

      AllowGroups wheel
      PasswordAuthentication no
      ChallengeResponseAuthentication no
      UsePrivilegeSeparation sandbox

      Subsystem sftp /usr/lib/ssh/sftp-server
    #+END_SRC

** ton
*** Mounts
    #+BEGIN_SRC sh
      fallocate -l 2G /swap
      chmod u=rw,go= /swap
      mkswap /swap
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
      LABEL=home /home/<<username>> ntfs-3g noatime,nofail
      LABEL=ESP /boot vfat
      /swap none swap
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/00-bkap.network
      [Match]
      Name = enp4s0

      [Network]
      DNS = 8.8.8.8
      Address = 192.168.0.252/24
      Gateway = 192.168.0.1
      Address = 192.168.1.252/24
      Gateway = 192.168.1.1
      Address = 192.168.4.252/24
      Gateway = 192.168.4.1
      Address = 192.168.5.252/24
      Gateway = 192.168.5.1

      [Route]
      Destination=192.168.1.1
      Source=192.168.1.252
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/dhcp.network
      [Network]
      DHCP=ipv4
    #+END_SRC

*** Pacman
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.conf :tangle-mode 260
    <<pacman_common>>

    [options]
    Architecture = auto

    [multilib]
    Include = /etc/pacman.d/mirrorlist
  #+END_SRC
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.d/mirrorlist
    Server = http://f.archlinuxvn.org/archlinux/$repo/os/$arch
  #+END_SRC

*** OpenVPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo::/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 1
      tls-client
      <pkcs12>
      <<ton_pfx>>
      </pkcs12>

      nobind
      pull

      remote k.<<domain>> 22
      verify-x509-name kub.<<domain>> name
      remote-cert-tls server
      resolv-retry infinite
    #+END_SRC

*** Fonts
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S adobe-source-{sans,serif,code}-pro-fonts adobe-source-han-sans-otc-fonts
    #+END_SRC

    #+BEGIN_SRC xml :tangle ~/.config/fontconfig/fonts.conf :padline no :comments no
      <?xml version='1.0'?>
      <!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
      <fontconfig>
        <match target="font">
          <edit mode="assign" name="rgba">
            <const>none</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hinting">
            <bool>true</bool>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hintstyle">
            <const>hintslight</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="antialias">
            <bool>true</bool>
          </edit>
        </match>
        <dir>~/.fonts</dir>
        <match target="pattern">
          <test qual="any" name="family"><string>Arial</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <match target="pattern">
          <test qual="any" name="family"><string>DejaVu Sans</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <alias>
          <family>sans-serif</family>
          <prefer>
            <family>Linux Biolinum O</family>
          </prefer>
        </alias>
        <alias>
          <family>serif</family>
          <prefer>
            <family>Linux Libertine O</family>
          </prefer>
        </alias>
        <alias>
          <family>monospace</family>
          <prefer>
            <family>Droid Sans Mono</family>
          </prefer>
        </alias>
        <selectfont>
          <rejectfont>
            <glob>/usr/share/fonts/default/Type1/*</glob>
            <pattern>
              <patelt name="scalable">
                <bool>false</bool>
              </patelt>
            </pattern>
          </rejectfont>
        </selectfont>
      </fontconfig>
     #+END_SRC

*** Desktop
    These DBus services are provided by plasma-workspace-units.
    #+BEGIN_SRC sh :dir /sudo::
      rm /usr/share/dbus-1/services/org.kde.{kded5,kglobalaccel,kuiserver,kwalletd5}.service
    #+END_SRC

**** Inside VM
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now systemd-networkd-wait-online sshd
     #+END_SRC
     #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
       //192.168.208.1/home /home/<<username>> cifs credentials=/etc/cifs,uid=1000,gid=1000,file_mode=0600
     #+END_SRC
     On the host side, open 445/tcp to this VM, and run emacs over X with MobaXterm:
     #+BEGIN_SRC conf :tangle bin/emacs.moba
       emacs =  #109#0%192.168.208.128%22%<<username>>%%-1%0%cp -r ~/.gnupg /run/user/1000 && chmod -R 700 /run/user/1000/.gnupg && export GNUPGHOME__EQUAL__/run/user/1000/.gnupg && setxkbmap dvorak && gpg-agent --enable-ssh-support --daemon emacs%%22%%0%0%Interactive shell%h:\.ssh\kub%%0%0%0%0%%1080%%0#MobaFont%10%0%0%0%15%236,236,236%0,0,0%180,180,192%0%-1%0%%xterm%-1%0%0,0,0%54,54,54%255,96,96%255,128,128%96,255,96%128,255,128%255,255,54%255,255,128%96,96,255%128,128,255%255,54,255%255,128,255%54,255,255%128,255,255%236,236,236%255,255,255%80%24%0#0
     #+END_SRC
     Remember to quit emacs before suspending.
***** Megasync
      #+BEGIN_SRC sh :dir /sudo::
       <<pacman>> -S xorg-server-xvfb megasync
      #+END_SRC
      #+BEGIN_SRC conf :tangle ~/.config/systemd/user/megasync.service
       [Unit]
       Description=Headless megasync

       [Service]
       ExecStart=/usr/bin/xvfb-run megasync

       [Install]
       WantedBy=default.target
      #+END_SRC
      #+BEGIN_SRC sh
       <<user_ctl>> enable --now megasync
      #+END_SRC

**** Keyboard
     Use dvorak, swap caps for ctrl
     #+BEGIN_SRC conf :tangle /sudo::/usr/share/kbd/keymaps/caps2ctrl.map
       include "/usr/share/kbd/keymaps/i386/dvorak/dvorak.map.gz"
       keycode 58 = Control
     #+END_SRC
     #+BEGIN_SRC sh :dir /sudo::
       localectl set-keymap caps2ctrl
     #+END_SRC

     Base Japanese IME on dvorak, swap caps for ctrl
     #+BEGIN_SRC conf :tangle keyboard.reg :comments no
       Windows Registry Editor Version 5.00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]
       "Scancode Map"=hex:00,00,00,00,00,00,00,00,02,00,00,00,1d,00,3a,00,00,00,00,00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layouts\00000411]
       "Layout File"="kbddv.dll"
     #+END_SRC
     Tangle registry files as UTF-16LE with BOM
     #+BEGIN_SRC elisp :tangle ~/.emacs
       (add-to-list 'file-coding-system-alist '("\\.reg\\'" . utf-16le-with-signature-dos))
       (add-hook 'org-babel-post-tangle-hook 'strip-initial-newline)
       (defun strip-initial-newline ()
         (when (string-match "^Windows Registry" (buffer-string))
           (join-line 1)))
     #+END_SRC
     Import into registry
     #+BEGIN_SRC sh
       start regedit $PWD/*reg
     #+END_SRC

**** Pointer
     Use evdev for the touchscreen
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Atmel touchscreen"
               MatchProduct "maXTouch"
               Driver "evdev"
       EndSection
     #+END_SRC

     Use natural scrolling on touchpad
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Natural scrolling"
               MatchProduct "TouchPad"
               MatchDriver "libinput"
               Option "NaturalScrolling" "1"
       EndSection
     #+END_SRC

**** Rotation
     #+BEGIN_SRC sh :dir /sudo::
       <<pacman>> -S acpid
     #+END_SRC
     #+BEGIN_SRC text :tangle /sudo::/etc/acpi/events/rotation-button
       event=ibm/hotkey LEN0068:00 00000080 00006020
       action=sudo -u <<username>> DISPLAY=:0 /usr/local/bin/rotate-screen
     #+END_SRC
     #+BEGIN_SRC sh :tangle /sudo::/usr/local/bin/rotate-screen :shebang #!/bin/sh
       case $(xrandr | grep LVDS1 | cut -f 4 -d ' ' | tr -d '(') in
           normal) new="left";;
           left)   new="normal";;
       esac
       xrandr --output LVDS1 --rotate $new

       case $new in
           normal) matrix="1 0 0 0 1 0 0 0 1";;
           left)   matrix="0 -1 1 1 0 0 0 0 1";;
           right)  matrix="0 1 0 -1 0 1 0 0 1";;
           inverted) matrix="-1 0 1 0 -1 1 0 0 1";;
       esac
       for dev in "SynPS/2 Synaptics TouchPad" "TPPS/2 IBM TrackPoint" "Atmel Atmel maXTouch Digitizer"; do
           xinput set-prop "$dev" "Coordinate Transformation Matrix" $matrix
       done
     #+END_SRC
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now acpid
     #+END_SRC

*** Picard
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S picard chromaprint
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/MusicBrainz/Picard.conf
      [setting]
      server_host=musicbrainz.org
      server_port=80

      fingerprinting_system=acoustid
      acoustid_apikey=<<acoustid_key>>
      acoustid_fpcalc=/usr/bin/fpcalc

      save_images_to_tags=true
      save_only_front_images_to_tags=true
      save_images_to_files=false
      ca_provider_use_amazon=true
      ca_provider_use_caa=true
      ca_provider_use_caa_release_group_fallback=true
      ca_provider_use_whitelist=true
      caa_image_size=1
      caa_approved_only=true
      caa_restrict_image_types=true
      analyze_new_files=false
      ignore_file_mbids=false
      quit_confirmation=true
      va_name=Various Artists
      nat_name=
      standardize_artists=true

      windows_compatibility=true
      ascii_filenames=false
      rename_files=true
      move_files=true
      file_naming_format="$if2(%albumartist%,%artist%)/$if($ne(%albumartist%,),%album%/)$if($gt(%totaldiscs%,1),%discnumber%-,)$if($ne(%albumartist%,),$num(%tracknumber%,2) ,)$if(%_multiartist%,%artist% - ,)%title%"
      move_files_to=<<music>>/_new
      move_additional_files=true
      move_additional_files_pattern=*.jpg *.png *.jpeg
      delete_empty_dirs=true

      browser_integration=true
      browser_integration_port=8000
      browser_integration_localhost_only=true

      dont_write_tags=false
      preserve_timestamps=false
      write_id3v1=true
      write_id3v23=true
      id3v23_join_with=/
      id3v2_encoding=utf-16
      remove_ape_from_mp3=true
      remove_id3_from_flac=true
    #+END_SRC
*** mpd
    :PROPERTIES:
    :header-args+: :dir ~
    :END:

    Create playlist
    #+BEGIN_SRC sh
      mpc listall > <<music>>/pq.m3u
    #+END_SRC

    Shuffle and play
    #+BEGIN_SRC sh :results raw
      mpc -q clear && mpc load pq && mpc -q shuffle && mpc play
    #+END_SRC

    Delete currently playing track
    #+BEGIN_SRC sh :eval query
      rm -v <<music>>/"$(mpc -f %file% | head -1)"
    #+END_SRC

*** mpv
    #+BEGIN_SRC conf :tangle ~/.config/mpv/mpv.conf
      sub-auto=fuzzy
      hwdec=auto
      hwdec-codecs=all
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/mpv/input.conf
      q quit_watch_later
      MOUSE_BTN0 cycle pause
      MOUSE_BTN1 show_progress
      MOUSE_BTN2 cycle fullscreen
      z set window-scale 2
      Z set window-scale 1

      ; show_progress
      f show_text "${filename}"
      d cycle audio
      y add volume 1
      i add volume -1
      g add sub-delay  0.1
      h add sub-delay -0.1
      x cycle mute

      k frame_step
      ' seek +10
      a seek -10
      , seek +60
      o seek -60
      . seek +300
      e seek -300

      u cycle fullscreen
    #+END_SRC
* Emacs
  :PROPERTIES:
  :header-args+: :tangle ~/.emacs
  :END:

  OOBE settings:
  #+BEGIN_SRC elisp
    (server-mode t)
    (global-set-key (kbd "C-x C-r")
                    (lambda () (interactive)
                      (revert-buffer :noconfirm t)))
    (defalias 'yes-or-no-p #'y-or-n-p)
    (defalias 'dabbrev-expand #'hippie-expand)
    (setq auto-save-default nil
          calendar-week-start-day 1
          default-input-method "vietnamese-telex"
          inhibit-startup-screen t
          make-backup-files nil
          scroll-preserve-screen-position t
          tramp-default-method "ssh"
          undo-tree-mode-lighter ""
          visible-bell t
          frame-title-format "%b")
    (set-language-environment "UTF-8")
    (setq-default buffer-file-coding-system 'utf-8-unix)
    (setq-default sentence-end-double-space nil)
    (global-set-key (kbd "C-\\") #'toggle-input-method)
    (blink-cursor-mode -1)
    (show-paren-mode t)
    (winner-mode)
  #+END_SRC

  Package management
  #+BEGIN_SRC elisp
    (package-initialize)
    (setq package-archives
          '(("gnu" . "https://elpa.gnu.org/packages/")
            ("marmalade" . "https://marmalade-repo.org/packages/")
            ("melpa" . "http://melpa.org/packages/")))
    (unless (package-installed-p 'use-package)
      (package-refresh-contents)
      (package-install 'use-package))
    (setq use-package-always-ensure t)
    (require 'use-package)
  #+END_SRC

  Color theme
  #+BEGIN_SRC elisp
    (use-package color-theme-sanityinc-solarized
      :config (load-theme 'sanityinc-solarized-light t))
  #+END_SRC

  Font on Windows
  #+BEGIN_SRC elisp
    (when (eq window-system 'w32)
      (if (> window-system-version 5)
          (set-default-font "Consolas-12" :frames t)
        (set-default-font "Lucida Console-10" :frames t)))
  #+END_SRC

** Discovery
   Learn what's available under prefix keys
   #+BEGIN_SRC elisp
     (use-package which-key :ensure
       :diminish ""
       :config (which-key-mode))
   #+END_SRC

** Editing
   Vim-style
   #+BEGIN_SRC elisp
     (use-package evil
       :config
       (evil-mode t)
       (evil-set-initial-state 'special-mode 'emacs)
       (dolist (state '(normal motion))
         (evil-define-key state global-map
           (kbd "<SPC>") #'evil-scroll-down
           (kbd "S-<SPC>") #'evil-scroll-up))
       (dolist (state '(insert motion normal))
         (evil-define-key state global-map
           (kbd "C-t") #'transpose-chars
           (kbd "C-d") #'delete-char
           (kbd "C-k") #'kill-line
           (kbd "C-y") #'evil-paste-before
           (kbd "C-a") #'beginning-of-line (kbd "C-e") #'end-of-line
           (kbd "C-f") #'forward-char   (kbd "C-b") #'backward-char
           (kbd "C-n") #'next-line      (kbd "C-p") #'previous-line
           (kbd "<down>") #'next-line   (kbd "<up>") #'previous-line
           (kbd "j") #'next-line        (kbd "k") #'previous-line
           (kbd "C-v") #'evil-scroll-down (kbd "M-v") #'evil-scroll-up
           (kbd "C-r") #'isearch-backward))
       (evil-define-key 'insert global-map
         "j" #'self-insert-command "k" #'self-insert-command)
       (evil-define-key 'motion help-mode-map
         (kbd "<tab>") #'forward-button))
   #+END_SRC

   Aggressive indent
   #+BEGIN_SRC elisp
     (use-package aggressive-indent
       :diminish ""
       :config (global-aggressive-indent-mode))
   #+END_SRC

   Switch window with ace
   #+BEGIN_SRC elisp
     (use-package ace-window
       :config (ace-window-display-mode 1)
       :bind ("C-x o" . ace-window))
   #+END_SRC

   Do things with helm:
   #+BEGIN_SRC elisp
     (use-package helm
       :config
       (helm-mode 1)
       (define-key shell-mode-map (kbd "M-r") #'helm-comint-input-ring)
       :diminish helm-mode
       :bind (("C-h SPC" . helm-all-mark-rings)
              ("C-x b" . helm-mini)
              ("C-x C-b" . helm-buffers-list)
              ("C-x C-f" . helm-find-files)
              ("C-c g" . helm-do-grep)
              ("C-s" . helm-occur)
              ("M-x" . helm-M-x)))
     (require 'helm-config)
     (use-package evil
       :config (dolist (state '(insert motion normal))
                 (evil-define-key state global-map
                   (kbd "M-y") #'helm-show-kill-ring)))
   #+END_SRC

** Org
   #+BEGIN_SRC elisp
     (add-hook 'org-mode-hook
               '(lambda ()
                  (add-hook 'before-save-hook 'org-align-all-tags
                            :local t)))
     (org-babel-do-load-languages 'org-babel-load-languages
                                  '((sh . t)))
     (setq org-src-fontify-natively t)
     (setq org-export-initial-scope 'subtree)
     (setq org-latex-pdf-process '("xelatex -interaction nonestopmode -output-directory %o %f"))
     (setq org-html-doctype "html5"
           org-html-html5-fancy t
           org-html-head "<link rel=stylesheet type=text/css href=blog.css>"
           org-html-use-unicode-chars t
           org-html-head-include-default-style nil
           org-html-head-include-scripts nil
           org-html-postamble nil)
   #+END_SRC

*** Crypt
    #+BEGIN_SRC elisp
      (require 'org-crypt)
      (add-hook 'org-mode-hook
                '(lambda ()
                   (add-hook 'before-save-hook 'org-encrypt-entries
                             :local t)))
      (setq org-tags-exclude-from-inheritance '("crypt")
            org-crypt-key user-mail-address)
    #+END_SRC

    Make it possible to tangle encrypted block
    #+BEGIN_SRC elisp
      (remove-hook 'org-babel-pre-tangle-hook #'save-buffer)
    #+END_SRC

** Doc-View
   #+BEGIN_SRC elisp
     (eval-after-load 'doc-view
       '(bind-key (kbd "<mouse-1>") #'doc-view-scroll-up-or-next-page doc-view-mode-map))
     (setq doc-view-resolution 300
           doc-view-cache-directory (expand-file-name "~/.emacs.d/doc-view"))
     (use-package evil
       :config (add-hook 'view-mode-hook #'evil-emacs-state))
   #+END_SRC

** Dired
   #+BEGIN_SRC elisp
     (use-package dired+
       :config
       (require 'dired+)
       (global-dired-hide-details-mode -1)
       (defun dired-open ()
         (interactive)
         (dired-do-shell-command "xdg-open &" :file-list (dired-get-marked-files)))
       (define-key dired-mode-map (kbd "RET") #'dired-open)
       (define-key dired-mode-map (kbd "<mouse-2>") #'dired-open)
       (setq dired-recursive-copies 'always
             dired-recursive-deletes 'always
             dired-listing-switches "-alh"
             dired-guess-shell-alist-user
             '(("\\.cb.\\'" "okular")
               ("." "xdg-open;"))))
   #+END_SRC

** Eshell
   Put eshell on a convenient binding
   #+BEGIN_SRC elisp
     (global-set-key (kbd "C-x M-m") #'eshell)
   #+END_SRC

   I like the prompt to be on a separate line.
   #+BEGIN_SRC elisp
     (setq eshell-prompt-function
           '(lambda ()
              (concat (eshell/pwd) "\n"
                      (int-to-string eshell-last-command-status) " % "))
           eshell-prompt-regexp "^[[:digit:]]\\{1,3\\} % ")
   #+END_SRC

   These are terminal-manipulating commands
   #+BEGIN_SRC elisp
     (eval-after-load 'em-term
       '(progn
          (dolist (prog '("atop" "systemd-cgls" "journalctl"))
            (add-to-list 'eshell-visual-commands prog))
          (add-to-list 'eshell-visual-options '("ssh" "-t"))))
   #+END_SRC

   Profile:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/profile :no-expand
     addpath ~/Copy/bin
   #+END_SRC

   Aliases:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias vim find-file $1
     alias j journalctl -afb $*
     alias sc <<system_ctl>> $*
     alias uc <<user_ctl>> $*
     alias ytdl <<ytdl>> -a /home/<<username>>/q.txt
     alias fr free -h
   #+END_SRC

* Ansible
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ansible
  #+END_SRC

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package yaml-mode)
         (use-package ansible-doc
           :config (add-hook 'yaml-mode-hook #'ansible-doc-mode))))
  #+END_SRC

** Inventory
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible_inventory
   :END:

   Here are the hosts and their variables
   #+BEGIN_SRC conf
     [arch]
     kub ansible_python_interpreter=/usr/bin/python2
     ton ansible_python_interpreter=/usr/bin/python2 ansible_connection=local

     [all:vars]
     user=<<username>>
     home=/home/<<username>>
     h=<<storage>>
     conf="{{h}}/config/{{ansible_hostname}}"
     locale=en_US
     prefix=<<prefix>>
   #+END_SRC

** Config
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible.cfg
   :END:

   Keep the inventory here
   #+BEGIN_SRC conf
     [defaults]
     inventory = ~/.ansible_inventory
   #+END_SRC

   For some reason ControlMaster isn't working
   #+BEGIN_SRC conf
     [ssh_connection]
     ssh_args=-o ControlMaster=no
   #+END_SRC

* Firefox
  :PROPERTIES:
  :header-args+: :tangle ~/.pentadactylrc
  :END:
  This file is in vimrc syntax

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(use-package vimrc-mode))
  #+END_SRC

  Use DuckDuckGo:

  #+BEGIN_SRC vimrc
    silent bmark -keyword ddg -t DDG https://duckduckgo.com/?kn=1&kp=-1&kae=c&q=%s
    set defsearch=ddg
  #+END_SRC

  Use backspace to go back:
  #+BEGIN_SRC vimrc
    set! browser.backspace_action=0
  #+END_SRC

  Don't let middle mouse paste:
  #+BEGIN_SRC vimrc
    set! middlemouse.contentLoadURL=false
  #+END_SRC

  Restore C-j for Downloads:
  #+BEGIN_SRC vimrc
    map <C-j> -ex dialog downloads
  #+END_SRC

  Bind stop to an easy binding:
  #+BEGIN_SRC vimrc
    map s <C-c>
  #+END_SRC

  Make scrolling easier:
  #+BEGIN_SRC vimrc
    map <space> <C-d>
    map <S-space> <C-u>
  #+END_SRC

  Pin tab:
  #+BEGIN_SRC vimrc
    map <A-p> -ex pintab!
  #+END_SRC

  Move to first or last:
  #+BEGIN_SRC vimrc
    map <A-!> -ex tabm 1
    map <A-$> -ex tabm $
  #+END_SRC

  Fast switching:
  #+BEGIN_SRC vimrc
    map -m normal,insert <F1> <C-^>
  #+END_SRC

  Don't raise these openings:
  #+BEGIN_SRC vimrc
    set activate-=diverted,links,tabopen,paste
  #+END_SRC

  Open help in a new tab
  #+BEGIN_SRC vimrc
    set newtab=help
  #+END_SRC

  Keep hint keys under left fingers:
  #+BEGIN_SRC vimrc
    set hintkeys=12345
  #+END_SRC

  Make hint text readable
  #+BEGIN_SRC vimrc
    highlight Hint -append font-size: 14px !important
  #+END_SRC

  Unzoom image:
  #+BEGIN_SRC vimrc
    map <A-t> -js content.document.toggleImageSize()
  #+END_SRC

  Replace the status line with navigation bar, and show link in the commandline:
  #+BEGIN_SRC vimrc
    set guioptions=bTrc
    set showstatuslinks=command
  #+END_SRC

  Scroll by one line:
  #+BEGIN_SRC vimrc
    set scrollsteps=1
  #+END_SRC

  Show feeds first in pageinfo:
  #+BEGIN_SRC vimrc
    set pageinfo=fgmse
  #+END_SRC

  Use visual bell:
  #+BEGIN_SRC vimrc
    set visualbell
  #+END_SRC

  Bookmarks and preferences:
  #+BEGIN_SRC vimrc
    map <C-S-s> -ex bmark -keyword ac -t config about:config
    \ bmark -keyword bgp -t BGP http://bgp.he.net/search?search[search]=%s
    \ bmark -keyword v -t valsi http://vlasisku.lojban.org/?query=%s
    \ bmark -keyword c -t camxes http://camxes.lojban.org/?text=%s
    \ bmark -keyword yb -t youtube https://youtube.com/watch?v=%s
    \ bmark -keyword cw -t 'CrawlWiki' http://crawl.chaosforge.org/index.php?title=Special%3ASearch&search=%s
    \ bmark -keyword bb -t burnbit http://burnbit.com/burn?file=%s
    \ bmark -keyword b -t btdigg https://btdigg.org/search?q=%s&order=0&p=0
    \ bmark -keyword ba -t btdigg https://btdigg.org/search?q=%s&order=2&p=0
    \ bmark -keyword m -t zing http://mp3.zing.vn/tim-kiem/bai-hat.html?q=%s
    \ bmark -keyword ma -t artist http://musicbrainz.org/search?advanced=1&type=artist&tport=8000&query=%s
    \ bmark -keyword mg -t group http://musicbrainz.org/search?advanced=1&type=release_group&tport=8000&query=%s
    \ bmark -keyword mr -t recording http://musicbrainz.org/search?advanced=1&type=recording&tport=8000&query=%s
    \ bmark -keyword gm -t gmail https://mail.google.com/mail/#spam
    \ set! accessibility.browsewithcaret_shortcut.enabled=false
    \ set! browser.newtabpage.enabled=false
    \ set! browser.privatebrowsing.dont_prompt_on_enter=true
    \ set! browser.sessionstore.restore_pinned_tabs_on_demand=true
    \ set! browser.shell.checkDefaultBrowser=false
    \ set! browser.startup.homepage=about:blank
    \ set! browser.startup.page=3
    \ set! general.warnOnAboutConfig=false
    \ set! security.OCSP.enabled=0
    \ set! security.warn_viewing_mixed=false
    \ set! layout.spellcheckDefault=0
    \ set! middlemouse.paste=true
    \ set! ui.key.menuAccessKey=0
    \ set! browser.anchor_color="#6c71c4"
    \ set! browser.display.background_color="#fdf6e3"
    \ set! browser.display.foreground_color="#657b83"
    \ set! browser.display.use_system_colors=false
    \ set! font.default.x-western="sans-serif"
    \ if /NT 6/.test(window.navigator.oscpu)
    \     set! font.name.monospace.x-western=Consolas
    \ fi
    \ set! extensions.checkCompatibility.nightly=false
    \ set! extensions.https_everywhere._observatory.alt_roots=true
    \ set! extensions.https_everywhere._observatory.enabled=true
    \ set! extensions.https_everywhere._observatory.priv_dns=true
    \ set! plugins.hide_infobar_for_missing_plugin=true
    \ set! browser.download.manager.alertOnEXEOpen=false
    \ set! browser.download.manager.scanWhenDone=false
    \ set! browser.search.context.loadInBackground=true
    \ set! intl.charset.default=UTF-8
    \ set! network.http.pipelining=true
    \ set! network.http.pipelining.aggressive=true
    \ set! network.http.pipelining.ssl=true
    \ set! network.protocol-handler.expose.magnet=false
    \ set! network.proxy.socks=kub.<<domain>>
    \ set! network.proxy.socks_port=9050
    \ set! network.proxy.socks_remote_dns=true
    \ set! toolkit.telemetry.enabled=true
    \ js services.permissions.add(services.io.newURI("http:depositfiles.com",null,null), 'image', services.permissions.DENY_ACTION)
    \ js services.loginManager.setLoginSavingEnabled("accounts.google.com", false)
  #+END_SRC

  Strip tracker from location, thanks to [[https://userscripts.org/scripts/show/93825][Bruno Barão]] and [[https://github.com/5digits/dactyl/commit/7a1ffa5b555399c5d0925ad599e2640070bd128d][Kris Maglione]].
  #+BEGIN_SRC vimrc
    autocmd DOMLoad (utm|wa)_ -js win.history.replaceState("Remove trackers", '', doc.location.href.replace(/&?(utm|wa)_[^&]+/g,'').replace(/\?$/,''))
  #+END_SRC

  Facebook
  #+BEGIN_SRC vimrc
    bmark -keyword fb -t facebook https://fb.me/%s
    map <A-s> -js dactyl.open("https://www.facebook.com/sharer/sharer.php?u=" + content.location)
  #+END_SRC

  Inoreader
  #+BEGIN_SRC vimrc
    map <A-f> -js dactyl.open("https://www.inoreader.com/?add_feed=" + content.location)
    map <A-w> -js dactyl.open("https://www.inoreader.com/bookmarklet/save_web_page/" + encodeURIComponent(content.location))
    js services.permissions.add(services.io.newURI("http:inoreader.com",null,null), 'popup', services.permissions.ALLOW_ACTION)
    set passkeys+=inoreader.com:jkgafswhq
  #+END_SRC
  Get videos from starred items
  #+BEGIN_SRC sh :tangle ~/.bash_login
    function videos() {
        <<ytdl>> --ignore-errors $(wget 'https://www.inoreader.com/reader/api/0/stream/contents/user%2F-%2Fstate%2Fcom.google%2Fstarred?n=1000&r=o' \
                                        --header 'AppId: 1000001238' --header 'AppKey: <<inoreader_key>>' \
                                        --header 'Authorization: GoogleLogin auth=<<inoreader_auth>>' \
                                          | grep -o 'href":"[^"]*' | uniq | sed 's/href":"//' | tr -d '\\' | grep -vE 'reader/api|rapidgator|escapistmag|muspy' )
    }
  #+END_SRC

  ownCloud News
  #+BEGIN_SRC vimrc
    set passkeys+=<<domain>>/owncloud/index.php/apps/news/:jkrol
    js services.permissions.add(services.io.newURI("https:<<domain>>",null,null), 'popup', services.permissions.ALLOW_ACTION)
  #+END_SRC

  Site keyboard shortcuts:
  #+BEGIN_SRC vimrc
    set passkeys+=tumblr.com:jk
    set passkeys+=mail.google.com/mail/:'#!ms+-/? jknpux'
    set passkeys+=google.com/contacts/:'#jkoux,.'
  #+END_SRC

  Switch to reader mode:
  #+BEGIN_SRC vimrc
    map <A-r> -js dactyl.open("about:reader?url=" + content.location)
  #+END_SRC

* Windows
** Portables
   #+BEGIN_SRC bat :tangle bin/pe.cmd
     cd /d %~dp0\Tools
     start /b procexp /e /accepteula
   #+END_SRC
   #+BEGIN_SRC bat :tangle bin/pi.cmd
     cd /d %~dp0\picard
     start /b picard
   #+END_SRC
   #+BEGIN_SRC bat :tangle bin/fx.cmd
     cd /d %~dp0\fx
     start /b firefox
   #+END_SRC
   #+BEGIN_SRC bat :tangle bin/tv.cmd
     cd /d %~dp0\teamviewer
     start /b teamviewer
   #+END_SRC
   #+BEGIN_SRC bat :tangle bin/kp.cmd
     cd /d %~dp0\keepass
     start /b keepass
   #+END_SRC
   #+BEGIN_SRC bat :tangle bin/ovpn.cmd
     cd /d %~dp0
     elevate openvpn --config hdhoang.ovpn
   #+END_SRC

* Secrets							      :crypt:
-----BEGIN PGP MESSAGE-----
Version: GnuPG v2

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
S81fEWwJDRjSL1DVCIO4/lePM0OGPXuM3g==
=BFYF
-----END PGP MESSAGE-----
