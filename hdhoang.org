#+STARTUP: showall
#+PROPERTY: header-args+ :cache yes
#+PROPERTY: header-args+ :comments org
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :noweb yes
#+PROPERTY: header-args+ :results silent
#+PROPERTY: header-args+ :tangle-mode 384
#+PROPERTY: header-args:text+ :eval no
* Hoàng Đức Hiếu
#+EMAIL: 1988 / +84-166-241-9526 / cv@hdhoang.space
#+SELECT_TAGS: vi
#+OPTIONS: toc:nil date:nil arch:nil num:nil author:nil email:t tags:nil
#+LATEX_CLASS_OPTIONS: [twocolumn]
#+LATEX_HEADER: \usepackage{libertine}
#+LATEX_HEADER: \usepackage{xcolor-solarized, sectsty}
#+LATEX_HEADER: \usepackage[pagecolor={solarized-base3}]{pagecolor}
#+LATEX: \sectionfont{\color{solarized-blue}}
#+LATEX: \subsectionfont{\color{solarized-cyan}}
#+LATEX: \vspace*{-197pt}\includegraphics{Pictures/mug/img078}
#+LATEX_HEADER: \usepackage{titling}
#+LATEX_HEADER: \pretitle{\begin{flushright}\LARGE}
#+LATEX_HEADER: \posttitle{\par\end{flushright}}
#+LATEX_HEADER: \preauthor{\begin{flushright}}
#+LATEX_HEADER: \postauthor{\end{flushright}}
#+LATEX_HEADER: \pagenumbering{gobble}
** Education								 :en:
   - 2014 - now :: Studying System Administration and software testing
                   at Bachkhoa-Aptech (graduating 2016H2)
   - 2013 - 2014 :: Finished K12 and completed accounting course at
                    Quang Trung private school
   - 2007 - 2012 :: Self-learned various topics
     - Programming languages (Python, shells, HTML5, Emacs Lisp, Rust)
     - History of free software
     - Hanoi GNU/Linux user community
     - Wing-chun martial art
     - The constructed logical language Lojban
   - 2006 - 2007 :: Freshman in computer programming at Monash
                    College, Australia (earned Distinction and High
                    Distinction in most subjects)
   - 2003 - 2006 :: Chu Van An Highschool, majoring in English
#+LATEX: \newpage
** Tiểu sử								 :vi:
   - 2014 - nay :: học quản trị mạng và kiểm thử phần mềm tại
                   Bachkhoa-APTECH (dự kiến tốt nghiệp năm 2016)
#+LATEX: \newpage
** Qualifications and skills						 :en:
*** IT skills
   - In-depth GNU/Linux usage and administration, experienced in
     self-hosting web sites (ownCloud on Debian Apache, ArchLinux nginx)
   - Comprehensive network understanding (routing, firewall, encryption)
   - Using version control systems, especially git
   - Contributing to free software projects ([[https://www.openhub.net/accounts/hdhoang/positions][hdhoang on OpenHub]])
   - Office equipment troubleshooting
*** Language skills
   - Fluency in English (990 in TOEIC, 2015)
   - Elementary Japanese (N4 equivalent)
*** Others
   - Self-teaching discipline
   - Strong interest in learning new topics
** Kĩ năng								 :vi:
*** Kĩ năng IT
     - Sử dụng và quản trị các hệ thống GNU/Linux chuyên sâu, tự quản
       trị dịch vụ web (owncloud, Debian Apache, ArchLinux nginx)
     - Hiểu biết rõ hệ thống mạng (định tuyến, tường lửa)
     - Sử dụng hệ thống quản lí phiên bản, đặc biệt là git
     - Đóng góp vào các dự án phần mềm tự do ([[https://www.openhub.net/accounts/hdhoang][hdhoang trên OpenHub]])
     - Xử lý vấn đề các thiết bị văn phòng
*** Kĩ năng ngôn ngữ
     - Tiếng Anh thuần thục (TOEIC 990, 2015)
     - Tiếng Nhật cơ bản (tương đương N4)
** Interests								 :en:
   - Exploring science, history, and natural subjects
   - Science-fiction novels, rational fanfictions
   - Electric guitar riffs
   - Frequent blood donor until no longer eligible
** Sở thích								 :vi:
    - Khám phá các chủ đề khoa học, lịch sử, tự nhiên
    - Tiểu thuyết khoa học viễn tưởng, ???
    - Nghe solo guitar điện
    - Thường xuyên hiến máu cho đến khi hết khả năng

* Places and names
  #+BEGIN_SRC html :tangle ~/Public/index.html :tangle-mode 388
    <!doctype html>
    <meta charset=utf-8>

    <link rel="openid2.provider"
          href="https://www.google.com/accounts/o8/ud?source=profiles" >
    <link rel="openid2.local_id"
          href="https://www.google.com/profiles/110711359835920217300" >

    <!-- <title>OpenID endpoint (myopenid)</title> -->
    <!-- <link rel="openid.server" href="http://www.myopenid.com/server" /> -->
    <!-- <link rel="openid.delegate" href="http://lazni.myopenid.com/" /> -->

    <!-- <title>OpenID endpoint (ownopenidserver)</title> -->
    <!-- <link rel="openid.server" -->
    <!--       href="https://id.<<domain>>/server.py/endpoint"> -->

    <!-- <title>OpenID endpoint (poit)</title> -->
    <!-- <link rel="openid2.provider" -->
    <!--       href="https://id.<<domain>>/poit.py"> -->

    <!-- <title>OpenID endpoint (startssl)</title> -->
    <!-- <link rel="openid2.provider openid.server" -->
    <!--      href="https://www.startssl.com/id.ssl" /> -->
    <!-- <link rel="openid2.local_id openid.delegate" -->
    <!--      href="https://<<username>>.startssl.com/" /> -->

    <p>Elsewhere on the net:
      <dl>
        <dt><<username>><dd><ul>
                <li><a rel=me href=https://telegram.me/<<username>>>Telegram</a></li>
                <li><a rel=me href=https://www.openhub.net/accounts/<<username>>>OpenHub</a></li>
                <li><a rel=me href=https://gitlab.com/u/<<username>>>Gitlab</a></li>
                <li><a rel=me href=https://github.com/<<username>>?tab=activity>Github</a></li>
                <li><a rel=me href=http://www.last.fm/user/<<username>>>Last.fm</a></li>
                <li><a rel=me href=https://facebook.com/hdh000/about>Facebook</a></li>
            </ul></dd>
        <dt>lasigmaz<dd><ul>
              <li><a rel=me href=https://twitter.com/lasigmaz>Twitter</a></li>
              <li><a rel=me href=https://steamcommunity.com/id/lasigmaz>Steam</a></li>
            </ul></dd>
    </p>

    <p xmlns:dct="http://purl.org/dc/terms/" xmlns:vcard="http://www.w3.org/2001/vcard-rdf/3.0#">
      <a rel="license"
         href="https://creativecommons.org/publicdomain/zero/1.0/">
        <img src="https://i.creativecommons.org/p/zero/1.0/88x31.png" style="border-style: none;" alt="CC0" />
      </a>
      <br />
      To the extent possible under law,
      <a rel="dct:publisher"
         href="https://<<domain>>">
        <span property="dct:title">Hoàng Đức Hiếu</span></a>
      has waived all copyright and related or neighboring rights to
      this work.
    This work is published from:
    <span property="vcard:Country" datatype="dct:ISO3166"
          content="VN" about="https://<<domain>>">
      Vietnam</span>.
    </p>

    <p>
    <a href=vanity-irc.html>Showing a custom hostname to Freenode</a>
  #+END_SRC

  #+NAME: username
  #+BEGIN_SRC text
    hdhoang
  #+END_SRC

  #+NAME: domain
  #+BEGIN_SRC text
    <<username>>.space
  #+END_SRC

  #+BEGIN_SRC emacs-lisp :tangle ~/.emacs
    (setq user-mail-address "<<username>>@<<domain>>")
  #+END_SRC

  #+NAME: storage
  #+BEGIN_SRC text
    /home/<<username>>/Copy
  #+END_SRC

  #+NAME: fav_music
  #+BEGIN_SRC text
    /home/<<username>>/Music
  #+END_SRC

  #+NAME: prefix
  #+BEGIN_SRC text
    10.117.14.
  #+END_SRC

  #+NAME: prefix6
  #+BEGIN_SRC text
    2001:470:36:62a::
  #+END_SRC

  #+NAME: system_ctl
  #+BEGIN_SRC text
    systemctl --system --no-pager
  #+END_SRC

  #+NAME: user_ctl
  #+BEGIN_SRC text
    systemctl --user --no-pager
  #+END_SRC

  #+NAME: pacman
  #+BEGIN_SRC text
    yaourt --noconfirm --needed
  #+END_SRC

  #+NAME: ytdl
  #+BEGIN_SRC text
    youtube-dl --format "[height <=? 480]" --output ~/Videos/"%(uploader)s %(upload_date)s %(title)s@%(id)s.%(ext)s"
  #+END_SRC

* Blog
** Vanity plate on IRC
   :PROPERTIES:
   :EXPORT_FILE_NAME: ~/Public/vanity-irc
   :END:
*** Ingredients:
    - An IPv6 block whose PTR you can delegate (I use Hurricane Electric's [[https://tunnelbroker.net][tunnelbroker service]])
    - A hostname whose AAAA you can change (I'm using a full domain, hosted on [[https://cloudflare.com][CloudFlare]], but it should works [[https://freedns.afraid.org][with subdomains]])
    - I'm using a Debian machine to connect to Freenode
*** Recipes:
    1. Request an IPv6 tunnel with HE
    2. Delegate its rDNS to [[https://dns.he.net][dns.he.net]]
    3. Match forward and reverse DNS between an address and your hostname:
       #+BEGIN_SRC sh :results replace
         bash -c 'diff <(nslookup test-plate.hdhoang.space.) <(nslookup 2001:470:36:62a::cccc)'
       #+END_SRC

       #+RESULTS[b43b6d2d898df8156aa60d0405a8b2f68660f12d]:

       - Choose an address, point it to your hostname
       - Add the address to the hostname's AAAA records
    6. Connect to Freenode with that address as the source, for example:
       #+BEGIN_SRC sh
         for fn in $(dig +short -t aaaa chat.freenode.net); do
             ip -6 route add $fn src $address dev $tunnel_interface;
         done;
       #+END_SRC
       or
       #+BEGIN_SRC sh
         ip -6 route add default src $address dev $tunnel_interface
       #+END_SRC

* OpenVPN
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S openvpn
  #+END_SRC
  #+NAME: openvpn_common
  #+BEGIN_SRC conf
    dev tun
    topology subnet
    persist-key
    persist-tun
    keepalive 10 30
    tls-version-min 1.2
    tls-cipher TLS-DHE-RSA-WITH-AES-128-CBC-SHA
    <tls-auth>
    <<ta_key>>
    </tls-auth>
    <ca>
    -----BEGIN CERTIFICATE-----
    MIIEYTCCA0mgAwIBAgIJAPxrcItU3yz8MA0GCSqGSIb3DQEBCwUAMH0xCzAJBgNV
    BAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFOb2kxDTALBgNVBAoTBHph
    aGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3phaGUubWUxHjAcBgkqhkiG
    9w0BCQEWD2hkaG9hbmdAemFoZS5tZTAeFw0xNTA5MjYxMTM0NTRaFw0yNTA5MjMx
    MTM0NTRaMH0xCzAJBgNVBAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFO
    b2kxDTALBgNVBAoTBHphaGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3ph
    aGUubWUxHjAcBgkqhkiG9w0BCQEWD2hkaG9hbmdAemFoZS5tZTCCASIwDQYJKoZI
    hvcNAQEBBQADggEPADCCAQoCggEBANXOfdISWeotIr3neKpj6IGBlCLMEBNtMB1r
    bTIgkxe9tnNd4jBufq6duLK91ioqcJiAxMLRovYtaRTOpQit5/PnAm2Iwu3u2mGX
    EftWEBSVt437NMVA6L2Jemv1lp81vmzJIODgPQ9elrNteQ3ccAMCpuj/l6PhGeFq
    JvK+dNIJcm2+xM15S6ESwjsZxwijiT3TMJAjXJPC5R3gpULoTHrphPGrS/0RIq9c
    Bd/+4Q7k1MguPK2XSKHiJnUIkQJ/m/XGT2iXVEzhOsHZ8vlaNq1xBzTko10nEb7I
    sOQjuH4GCZMeoYnF3egg534fg+BYPAecuKglqdIpnm4+syJsrR0CAwEAAaOB4zCB
    4DAdBgNVHQ4EFgQUsDCM7/aJ6AjPVQPEbdDTiTa9WIswgbAGA1UdIwSBqDCBpYAU
    sDCM7/aJ6AjPVQPEbdDTiTa9WIuhgYGkfzB9MQswCQYDVQQGEwJWTjELMAkGA1UE
    CBMCSE4xDjAMBgNVBAcTBUhhTm9pMQ0wCwYDVQQKEwR6YWhlMRAwDgYDVQQDEwd6
    YWhlIENBMRAwDgYDVQQpEwd6YWhlLm1lMR4wHAYJKoZIhvcNAQkBFg9oZGhvYW5n
    QHphaGUubWWCCQD8a3CLVN8s/DAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUA
    A4IBAQAKkiDOWmwu1D+qbCSYaSxiMfJ70FyA/o+AuCDeaGxKdFLZ2JQgYK/az3y8
    tGQKBc6AdUY7BoN1Ab/6TOz+hWvmyNOOvq2AMgt2bHHA+JquRZMdgw59OtbB2BjC
    vBs2cxRJWdmv8aSltcqVpm2HNHy3mzcq8i0CdFluxDV+zQmvhGVypAipYTlhdi0l
    KLJlB+3fqS5GQB0wPmkV2N6WJdm0NfoTbBOCXwVb4ChyrgryQaOQi5nu8wO9tzeO
    kK/jQJRFKpdwBYqAe0Q/JP95pVjctyiVFg97ppvQ557QFcY1pHapAwhyBmxYiLak
    W4pz42IduC2pnZ3ut4C7UzpeDMRr
    -----END CERTIFICATE-----
    </ca>
  #+END_SRC

* SSH
  :PROPERTIES:
  :header-args+: :tangle ~/.ssh/config
  :END:

  SSH encryption settings by https://stribika.github.io/2015/01/04/secure-secure-shell.html

  #+BEGIN_SRC conf
    Host *
    KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
    Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com,hmac-sha1
  #+END_SRC

  Machines
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    <<prefix>>1 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBL5T08oNKjMm7yWA0zqqqSwl6Vn0nlpoAlpP9USh0NewyfVO/xOGgkUWIlUU8p85Z3zK9YY3pl0zfQQrQHvp88Y=
    <<prefix>>185 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBMCCrxVyoz4ekNh2zAbr2JzvJdojMMoHYnbo20Qjn3sW+P7FUuuiknzbX0aX81BZWdKFwspNLJAXHLoiS8zy8Wc=
  #+END_SRC
  #+BEGIN_SRC conf
    Host <<prefix>>1
    User root
    IdentityFile ~/.ssh/kub
  #+END_SRC
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'tramp
      '(add-to-list 'tramp-default-method-alist '("vorme" nil "scp")))
  #+END_SRC

  #+BEGIN_SRC conf
    Host <<prefix>>185
    User <<username>>
    IdentityFile ~/.ssh/kub
  #+END_SRC
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'tramp
      '(add-to-list 'tramp-default-proxies-alist '("<<prefix>>185" "root" "/ssh:<<prefix>>185:")))
  #+END_SRC

* KDE
** kwin
   :PROPERTIES:
   :header-args+: :tangle ~/.config/kwinrulesrc
   :END:

   #+BEGIN_SRC conf
     [1]
     Description=Window settings for firefox
     shortcut=F5
     shortcutrule=2
     windowrole=browser
     windowrolematch=1
     wmclass=navigator firefox
     wmclasscomplete=true
     wmclassmatch=1
   #+END_SRC

   Put emacs on F4
   #+BEGIN_SRC conf
     [2]
     Description=Application settings for emacs
     shortcut=F4
     shortcutrule=2
     wmclass=emacs
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   Put konsole on F6
   #+BEGIN_SRC conf
     [3]
     Description=Application settings for konsole
     shortcut=F6
     shortcutrule=2
     wmclass=konsole
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   #+BEGIN_SRC conf
     [4]
     Description=No border on anything
     noborder=true
     noborderrule=2
   #+END_SRC

   #+BEGIN_SRC conf
     [General]
     count=4
   #+END_SRC

* Git
  #+BEGIN_SRC conf :tangle .git/config
    [core]
            repositoryformatversion = 0
            filemode = true
            bare = false
            logallrefupdates = true
    [remote "origin"]
            url = https://gitlab.com/<<username>>/<<username>>
            pushUrl = gitlab.com:<<username>>/<<username>>
            pushUrl = github.com:<<username>>/<<username>>
            pushUrl = bitbucket.org:<<username>>/<<username>>
            fetch = +refs/heads/*:refs/remotes/origin/*
    [branch "master"]
            remote = origin
            merge = refs/heads/master
  #+END_SRC

  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S git
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [user]
    name = Hoàng Đức Hiếu
    email = <<username>>@<<domain>>
    [color]
    ui = auto
    [core]
    eol = lf
    whitespace = trailing-space,space-before-tab
    [alias]
    ml = log --reverse --topo-order ORIG_HEAD..
    [merge]
    conflictstyle = diff3
    [push]
    default = simple
    [pull]
    rebase = true
    [rebase]
    stat = true
  #+END_SRC

  Code hosting sites:
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
    gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
  #+END_SRC
  #+BEGIN_SRC conf :tangle ~/.ssh/config
    Host gitlab.com github.com bitbucket.org
    User git
    IdentityFile ~/.ssh/git
    Host git.kde.org
    User git
    IdentityFile ~/.ssh/kde
    Host heroku.com
    IdentityFile ~/.ssh/heroku
  #+END_SRC

  Magit is awesome.
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package magit
           :bind ("C-x g" . magit-status)
           :config
           (setq magit-save-repository-buffers 'dontask
                 magit-push-always-verify nil))))
  #+END_SRC

* Crawl
  #+BEGIN_SRC conf :tangle ~/.crawlrc
    tile_full_screen = false
    autopickup_exceptions += <tomahawk, <throwing net, <javelin, <rock, <immol
    autopickup_exceptions += <misc, <ego, <artefact, <mutagenic
  #+END_SRC

* ArchLinux
  Pacman config
  #+NAME: pacman_common
  #+BEGIN_SRC conf
    [options]
    VerbosePkgLists
    UseSyslog
    CheckSpace
    HoldPkg = pacman glibc
    SigLevel = Required DatabaseOptional
    LocalFileSigLevel = Optional

    [core]
    Include = /etc/pacman.d/mirrorlist
    [extra]
    Include = /etc/pacman.d/mirrorlist
    [community]
    Include = /etc/pacman.d/mirrorlist
    [blackarch]
    Server = http://f.archlinuxvn.org/$repo/$repo/os/$arch
  #+END_SRC

  Refresh database
  #+BEGIN_SRC sh :dir /sudo::
    dirmngr --daemon
    pacman-key -r 7533BAFE69A25079
    pacman-key --lsign 7533BAFE69A25079
    <<pacman>> -S -y
  #+END_SRC

  AUR helper
  #+BEGIN_SRC yaml :tangle ~/Copy/bin/aur :shebang #!/bin/ansible-playbook
    - hosts: arch
      gather_facts: no
      vars:
        store: /tmp/aur
      vars_prompt:
        - name: package
          private: no
      tasks:
        - file: state=directory path={{store}}
        - get_url: url=https://aur4.archlinux.org/cgit/aur.git/snapshot/{{package}}.tar.gz dest={{store}}/
        - unarchive: copy=no src={{store}}/{{package}}.tar.gz dest={{store}}
        - command: nice makepkg --noconfirm --install --force --syncdeps chdir={{store}}/{{package}}
  #+END_SRC

  Yaourt config
  #+BEGIN_SRC conf :tangle ~/.yaourtrc
    AURUPGRADE=1
    EXPORT=1
    EXPORTDIR=~
    BUILD_NOCONFIRM=1
    EDITFILES=0
  #+END_SRC

  Base utils
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S haveged p7zip parallel pkgfile yaourt
    <<system_ctl>> enable --now haveged
  #+END_SRC

  #+BEGIN_SRC sh
    pkgfile -u
  #+END_SRC

  Dev-env:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S base-devel rust android-tools
  #+END_SRC

  Monitoring:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ethtool lm_sensors net-tools psmisc \
        procps-ng inetutils ltrace sysdig atop iotop
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/Copy/bin/strace :shebang #!/bin/sh :no-expand
    exec /usr/bin/ltrace -CSn2 $@
  #+END_SRC

  Of course emacs is installed, now run it
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S emacs-pkgbuild-mode
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.config/systemd/user/emacs.service
    [Unit]
    Description=Emacs

    [Service]
    ExecStart=/bin/emacs
    Restart=always
    RestartSec=1sec

    [Install]
    WantedBy=default.target
  #+END_SRC

  #+BEGIN_SRC sh :dir ~
    <<user_ctl>> enable --now emacs syncthing pulseaudio
  #+END_SRC

** kub
   :PROPERTIES:
   :header-args+: :dir /sudo:10.117.14.185:
   :END:
*** Mounts
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/fstab
      LABEL=<<username>> /home/<<username>> auto
      LABEL=var /var auto
    #+END_SRC

*** Network
    :PROPERTIES:
    :header-args+: :tangle-mode 260
    :END:
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/network/eth0.network
      [Match]
      Name = eth0

      [Network]
      Address = <<prefix>>185/24
      Gateway = <<prefix>>1
      DNS = <<prefix>>1
      IPForward = yes

      Tunnel=he-ipv6
      Address=<<prefix6>>1/64
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/network/he-ipv6.netdev
      [NetDev]
      Name=he-ipv6
      Kind=sit
      MTUBytes=1472

      [Tunnel]
      Local=<<prefix>>185
      Remote=216.218.221.42
      TTL=255
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/network/he-ipv6.network
      [Match]
      Name=he-ipv6
      [Network]
      Address=2001:470:35:62a::2/64
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/system/he-ipv6-route.service
      [Unit]
      After=network.target

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      ExecStart=/bin/ip -6 route add default src <<prefix6>>1 dev he-ipv6
      ExecStop=/bin/ip -6 route del default

      [Install]
      WantedBy=multi-user.target
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/radvd.conf
      interface eth0 {
      AdvSendAdvert on;
      MinRtrAdvInterval 3;
      MaxRtrAdvInterval 10;
      AdvLinkMTU 1472;
      prefix <<prefix6>>/64 {
      AdvOnLink on;
      AdvRouterAddr on;
      };
      };
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/resolv.conf
      nameserver <<prefix>>1
    #+END_SRC

*** Pacman
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/pacman.conf :tangle-mode 260
      <<pacman_common>>

      [options]
      Architecture = armv7h

      [alarm]
      Include = /etc/pacman.d/mirrorlist
      [aur]
      Include = /etc/pacman.d/mirrorlist
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/pacman.d/mirrorlist
      Server = http://vn.mirror.archlinuxarm.org/$arch/$repo
    #+END_SRC

*** LED blinking
    #+BEGIN_SRC sh :tangle /sudo:10.117.14.185:/usr/local/bin/leds :shebang #!/bin/sh
      echo none > /sys/class/leds/cubieboard:green:usr/trigger
      echo mmc0 > /sys/class/leds/cubieboard:blue:usr/trigger
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/system/leds.service
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/leds
      RemainAfterExit=true

      [Install]
      WantedBy=basic.target
    #+END_SRC

*** Tor
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S tor
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/tor/torrc
      ContactInfo tor at <<domain>>
      Nickname kub
      DirPort 4660
      ORPort 5880
      SOCKSPort <<prefix>>54:9050
      MaxAdvertisedBandwidth 40 KBytes
      ExitPolicy reject *:*

      DataDirectory /var/lib/tor
      Log notice syslog
    #+END_SRC

*** HTTP
    #+BEGIN_SRC sh
      <<pacman>> -S nginx
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/nginx/nginx.conf
      events {}
      http {
      include       mime.types;
      default_type  text/plain;
      charset utf-8;
      gzip off;

      access_log  off;
      log_not_found off;

      server {
      return 301 https://$host$request_uri;
      }

      ssl_protocols TLSv1.2;
      ssl_ciphers EECDH+CHACHA20:EECDH+AES128;
      ssl_prefer_server_ciphers on;
      add_header Strict-Transport-Security max-age=31536000;

      map $request_uri $dest {
      /c /mirror/caps2ctrl.exe;
      /d http://5digits.org/nightly/pentadactyl-latest.xpi;
      /pe http://live.sysinternals.com/;
      /s https://puttytray.goeswhere.com/download/putty.exe;

      default "";
      }

      server {
      listen 443 ssl spdy default_server;
      ssl_certificate <<domain>>.crt;
      ssl_certificate_key <<domain>>.key;
      server_name kub.<<domain>> <<domain>>;
      root /home/<<username>>/Public/;
      autoindex on;
      if ($dest) {
      return 301 $dest;
      }
      location /ipfs/ {
      proxy_pass http://127.0.0.1:4005;
      }
      location ~ /mirror/(?:.*)\.part {
      return 403 incomplete;
      }
      }

      server {
      listen 443 ssl spdy;
      server_name id.<<domain>>;
      root /home/<<username>>/Public/;
      index <<username>>;
      default_type text/html;
      }
      }
    #+END_SRC

*** DLNA
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S minidlna
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/minidlna.conf
      friendly_name=kub
      port=8200

      media_dir=<<storage>>
      media_dir=A,<<fav_music>>
      media_dir=V,/home/<<username>>/Public/mirror
    #+END_SRC
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<system_ctl>> enable --now minidlna
    #+END_SRC

*** IPsec
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/ipsec.conf
      ca <<username>>
          auto=add
          cacert=ca.crt

      conn kub
          auto=add
          left=<<prefix>>54
          leftid=k.<<domain>>
          leftcert=kub.crt
          leftsubnet=<<prefix>>0/24
          leftfirewall=yes
          leftdns=<<prefix>>1

          rightauth=eap-mschapv2
          eap_identity=%any
          rightsourceip=%dhcp
    #+END_SRC

*** OpenVPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo:kub:/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 0
      tls-server
      <pkcs12>
      <<kub_pfx>>
      </pkcs12>
      <dh>
      -----BEGIN DH PARAMETERS-----
      MIIBCAKCAQEAoioJw6aUXmgBDSw6SzbSZww6i7eH0MC+Eba5qGmYJnKn2zI8dBH6
      JZKnAyz9MbD21loI6KjAnOzZkBp7DKle1cACLS229Olycr22rXWPFuhMV15TohDJ
      ArazVXSJGDL9OXhdHei96K3qXofz/3AzXEVxD0unQd5sRlgNGmunofvgWBechdmn
      YQl44SZ0asC8uUY1uiKjVyQzqeNDi3rjJtTobcPdR6Pb8CnS3cfwoWzXMwUexmfJ
      VQSNaDZIeQcwV5MEHs1XViOTiEvT8IHbJojJri0geUSJ+HkX1JTxGIUj4xxKHQ0j
      AFEjqDYFh3q7U6QgFLRWZffVLgxIZVopIwIBAg==
      -----END DH PARAMETERS-----
      </dh>
      user nobody
      group nobody

      mode server

      server 10.255.0.0 255.255.255.0
      push "route <<prefix>>54"
    #+END_SRC

*** SSH
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/ssh/sshd_config
      Protocol 2
      HostKey /etc/ssh/ssh_host_ed25519_key
      HostKey /etc/ssh/ssh_host_rsa_key

      KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
      MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com

      AllowGroups wheel
      PasswordAuthentication no
      ChallengeResponseAuthentication no
      UsePrivilegeSeparation sandbox

      Subsystem sftp /usr/lib/ssh/sftp-server
    #+END_SRC

** ton
*** Mounts
    #+BEGIN_SRC sh
      fallocate -l 2G /swap
      chmod u=rw,go= /swap
      mkswap /swap
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
      LABEL=home /home/<<username>> ntfs-3g noatime,nofail
      LABEL=ESP /boot vfat
      /swap none swap
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/00-bkap.network
      [Match]
      Name = enp4s0

      [Network]
      DNS = 8.8.8.8
      Address = 192.168.0.252/24
      Gateway = 192.168.0.1
      Address = 192.168.1.252/24
      Gateway = 192.168.1.1
      Address = 192.168.4.252/24
      Gateway = 192.168.4.1
      Address = 192.168.5.252/24
      Gateway = 192.168.5.1

      [Route]
      Destination=192.168.1.1
      Source=192.168.1.252
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/dhcp.network
      [Network]
      DHCP=ipv4
    #+END_SRC

*** Pacman
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.conf :tangle-mode 260
    <<pacman_common>>

    [options]
    Architecture = auto

    [multilib]
    Include = /etc/pacman.d/mirrorlist
  #+END_SRC
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.d/mirrorlist
    Server = http://f.archlinuxvn.org/archlinux/$repo/os/$arch
  #+END_SRC

*** OpenVPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo::/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 1
      tls-client
      <pkcs12>
      <<ton_pfx>>
      </pkcs12>

      nobind
      pull

      remote k.<<domain>> 22
      verify-x509-name kub.<<domain>> name
      remote-cert-tls server
      resolv-retry infinite
    #+END_SRC

*** Fonts
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S adobe-source-{sans,serif,code}-pro-fonts adobe-source-han-sans-otc-fonts
    #+END_SRC

    #+BEGIN_SRC xml :tangle ~/.config/fontconfig/fonts.conf :padline no :comments no
      <?xml version='1.0'?>
      <!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
      <fontconfig>
        <match target="font">
          <edit mode="assign" name="rgba">
            <const>none</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hinting">
            <bool>true</bool>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hintstyle">
            <const>hintslight</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="antialias">
            <bool>true</bool>
          </edit>
        </match>
        <dir>~/.fonts</dir>
        <match target="pattern">
          <test qual="any" name="family"><string>Arial</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <match target="pattern">
          <test qual="any" name="family"><string>DejaVu Sans</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <alias>
          <family>sans-serif</family>
          <prefer>
            <family>Source Sans Pro</family>
          </prefer>
        </alias>
        <alias>
          <family>serif</family>
          <prefer>
            <family>Source Serif Pro</family>
          </prefer>
        </alias>
        <alias>
          <family>monospace</family>
          <prefer>
            <family>Source Code Pro</family>
          </prefer>
        </alias>
        <selectfont>
          <rejectfont>
            <glob>/usr/share/fonts/default/Type1/*</glob>
            <pattern>
              <patelt name="scalable">
                <bool>false</bool>
              </patelt>
            </pattern>
          </rejectfont>
        </selectfont>
      </fontconfig>
     #+END_SRC

*** Desktop
    These DBus services are provided by plasma-workspace-units.
    #+BEGIN_SRC sh :dir /sudo::
      rm /usr/share/dbus-1/services/org.kde.{kded5,kglobalaccel,kuiserver,kwalletd5}.service
    #+END_SRC

**** Inside VM
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now systemd-networkd-wait-online sshd
     #+END_SRC
     #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
       //192.168.208.1/home /home/<<username>> cifs credentials=/etc/cifs,uid=1000,gid=1000,file_mode=0600
     #+END_SRC
     On the host side, open 445/tcp to this VM, and run emacs over X with MobaXterm:
     #+BEGIN_SRC conf :tangle bin/emacs.moba
       emacs =  #109#0%192.168.208.128%22%<<username>>%%-1%0%cp -r ~/.gnupg /run/user/1000 && chmod -R 700 /run/user/1000/.gnupg && export GNUPGHOME__EQUAL__/run/user/1000/.gnupg && setxkbmap dvorak && gpg-agent --enable-ssh-support --daemon emacs%%22%%0%0%Interactive shell%h:\.ssh\kub%%0%0%0%0%%1080%%0#MobaFont%10%0%0%0%15%236,236,236%0,0,0%180,180,192%0%-1%0%%xterm%-1%0%0,0,0%54,54,54%255,96,96%255,128,128%96,255,96%128,255,128%255,255,54%255,255,128%96,96,255%128,128,255%255,54,255%255,128,255%54,255,255%128,255,255%236,236,236%255,255,255%80%24%0#0
     #+END_SRC
     Remember to quit emacs before suspending.

**** Keyboard
     Use dvorak, swap caps for ctrl
     #+BEGIN_SRC conf :tangle /sudo::/usr/share/kbd/keymaps/caps2ctrl.map
       include "/usr/share/kbd/keymaps/i386/dvorak/dvorak.map.gz"
       keycode 58 = Control
     #+END_SRC
     #+BEGIN_SRC sh
       localectl set-keymap caps2ctrl
     #+END_SRC

     Base Japanese IME on dvorak, swap caps for ctrl
     #+BEGIN_SRC conf :tangle keyboard.reg
       Windows Registry Editor Version 5.00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]
       "Scancode Map"=hex:00,00,00,00,00,00,00,00,02,00,00,00,1d,00,3a,00,00,00,00,00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layouts\00000411]
       "Layout File"="kbddv.dll"
     #+END_SRC

**** Pointer
     Use evdev for the touchscreen
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Atmel touchscreen"
               MatchProduct "maXTouch"
               Driver "evdev"
       EndSection
     #+END_SRC

     Use natural scrolling on touchpad
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Natural scrolling"
               MatchProduct "TouchPad"
               MatchDriver "libinput"
               Option "NaturalScrolling" "1"
       EndSection
     #+END_SRC

**** Rotation
     #+BEGIN_SRC sh :dir /sudo::
       <<pacman>> -S acpid
     #+END_SRC
     #+BEGIN_SRC text :tangle /sudo::/etc/acpi/events/rotation-button
       event=ibm/hotkey LEN0068:00 00000080 00006020
       action=sudo -u <<username>> DISPLAY=:0 /usr/local/bin/rotate-screen
     #+END_SRC
     #+BEGIN_SRC sh :tangle /sudo::/usr/local/bin/rotate-screen :shebang #!/bin/sh
       case $(xrandr | grep LVDS1 | cut -f 4 -d ' ' | tr -d '(') in
           normal) new="left";;
           left)   new="normal";;
       esac
       xrandr --output LVDS1 --rotate $new

       case $new in
           normal) matrix="1 0 0 0 1 0 0 0 1";;
           left)   matrix="0 -1 1 1 0 0 0 0 1";;
           right)  matrix="0 1 0 -1 0 1 0 0 1";;
           inverted) matrix="-1 0 1 0 -1 1 0 0 1";;
       esac
       for dev in "SynPS/2 Synaptics TouchPad" "TPPS/2 IBM TrackPoint" "Atmel Atmel maXTouch Digitizer"; do
           xinput set-prop "$dev" "Coordinate Transformation Matrix" $matrix
       done
     #+END_SRC
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now acpid
     #+END_SRC

*** Picard
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S picard chromaprint
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/MusicBrainz/Picard.conf
      [setting]
      server_host=musicbrainz.org
      server_port=80

      fingerprinting_system=acoustid
      acoustid_apikey=<<acoustid_key>>
      acoustid_fpcalc=/usr/bin/fpcalc

      save_images_to_tags=true
      save_only_front_images_to_tags=true
      save_images_to_files=false
      ca_provider_use_amazon=true
      ca_provider_use_caa=true
      ca_provider_use_caa_release_group_fallback=true
      ca_provider_use_whitelist=true
      caa_image_size=1
      caa_approved_only=true
      caa_restrict_image_types=true
      analyze_new_files=false
      ignore_file_mbids=false
      quit_confirmation=true
      va_name=Various Artists
      nat_name=
      standardize_artists=true

      windows_compatibility=true
      ascii_filenames=false
      rename_files=true
      move_files=true
      file_naming_format="$if2(%albumartist%,%artist%)/$if($ne(%albumartist%,),%album%/)$if($gt(%totaldiscs%,1),%discnumber%-,)$if($ne(%albumartist%,),$num(%tracknumber%,2) ,)$if(%_multiartist%,%artist% - ,)%title%"
      move_files_to=<<fav_music>>/_new
      move_additional_files=true
      move_additional_files_pattern=*.jpg *.png *.jpeg
      delete_empty_dirs=true

      browser_integration=true
      browser_integration_port=8000
      browser_integration_localhost_only=true

      dont_write_tags=false
      preserve_timestamps=false
      write_id3v1=true
      write_id3v23=true
      id3v23_join_with=/
      id3v2_encoding=utf-16
      remove_ape_from_mp3=true
      remove_id3_from_flac=true
    #+END_SRC
*** mpd
    :PROPERTIES:
    :header-args+: :dir ~
    :END:

    Create playlist
    #+BEGIN_SRC sh
      mpc listall > <<fav_music>>/pq.m3u
    #+END_SRC

    Shuffle and play
    #+BEGIN_SRC sh :results raw
      mpc -q clear && mpc load pq && mpc -q shuffle && mpc play
    #+END_SRC

    Delete currently playing track
    #+BEGIN_SRC sh :eval query
      rm -v <<fav_music>>/"$(mpc -f %file% | head -1)"
    #+END_SRC

*** mpv
    #+BEGIN_SRC conf :tangle ~/.config/mpv/mpv.conf
      sub-auto=fuzzy
      hwdec=auto
      hwdec-codecs=all
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/mpv/input.conf
      q quit_watch_later
      MOUSE_BTN0 cycle pause
      MOUSE_BTN1 show_progress
      MOUSE_BTN2 cycle fullscreen
      z set window-scale 2
      Z set window-scale 1

      ; show_progress
      f show_text "${filename}"
      d cycle audio
      y add volume 1
      i add volume -1
      g add sub-delay  0.1
      h add sub-delay -0.1
      x cycle mute

      k frame_step
      ' seek +10
      a seek -10
      , seek +60
      o seek -60
      . seek +300
      e seek -300

      u cycle fullscreen
    #+END_SRC
* Emacs
  :PROPERTIES:
  :header-args+: :tangle ~/.emacs
  :END:

  OOBE settings:
  #+BEGIN_SRC elisp
    (server-mode t)
    (global-set-key (kbd "C-x C-r")
                    (lambda () (interactive)
                      (revert-buffer :noconfirm t)))
    (defalias 'yes-or-no-p #'y-or-n-p)
    (defalias 'dabbrev-expand #'hippie-expand)
    (setq auto-save-default nil
          calendar-week-start-day 1
          default-input-method "vietnamese-telex"
          inhibit-startup-screen t
          make-backup-files nil
          scroll-preserve-screen-position t
          tramp-default-method "ssh"
          undo-tree-mode-lighter ""
          visible-bell t
          frame-title-format "%b")
    (set-language-environment "UTF-8")
    (setq-default buffer-file-coding-system 'utf-8-unix)
    (setq-default sentence-end-double-space nil)
    (global-set-key (kbd "C-\\") #'toggle-input-method)
    (blink-cursor-mode -1)
    (show-paren-mode t)
    (winner-mode)
  #+END_SRC

  Package management
  #+BEGIN_SRC elisp
    (package-initialize)
    (setq package-archives
          '(("gnu" . "https://elpa.gnu.org/packages/")
            ("marmalade" . "https://marmalade-repo.org/packages/")
            ("melpa" . "http://melpa.org/packages/")))
    (unless (package-installed-p 'use-package)
      (package-refresh-contents)
      (package-install 'use-package))
    (setq use-package-always-ensure t)
    (require 'use-package)
  #+END_SRC

  Color theme
  #+BEGIN_SRC elisp
    (use-package color-theme-sanityinc-solarized
      :config (load-theme 'sanityinc-solarized-light t))
  #+END_SRC

  Font on Windows
  #+BEGIN_SRC elisp
    (when (eq window-system 'w32)
      (if (> window-system-version 5)
          (set-default-font "Consolas-12" :frames t)
        (set-default-font "Lucida Console-10" :frames t)))
  #+END_SRC

** Discovery
   Learn what's available under prefix keys
   #+BEGIN_SRC elisp
     (use-package which-key :ensure
       :diminish ""
       :config (which-key-mode))
   #+END_SRC

** Editing
   Vim-style
   #+BEGIN_SRC elisp
     (use-package evil
       :config
       (evil-mode t)
       (evil-set-initial-state 'special-mode 'emacs)
       (dolist (state '(normal motion))
         (evil-define-key state global-map
           (kbd "<SPC>") #'evil-scroll-down
           (kbd "S-<SPC>") #'evil-scroll-up))
       (dolist (state '(insert motion normal))
         (evil-define-key state global-map
           (kbd "C-t") #'transpose-chars
           (kbd "C-d") #'delete-char
           (kbd "C-k") #'kill-line
           (kbd "C-y") #'evil-paste-before
           (kbd "C-a") #'beginning-of-line (kbd "C-e") #'end-of-line
           (kbd "C-f") #'forward-char   (kbd "C-b") #'backward-char
           (kbd "C-n") #'next-line      (kbd "C-p") #'previous-line
           (kbd "<down>") #'next-line   (kbd "<up>") #'previous-line
           (kbd "j") #'next-line        (kbd "k") #'previous-line
           (kbd "C-v") #'evil-scroll-down (kbd "M-v") #'evil-scroll-up
           (kbd "C-r") #'isearch-backward))
       (evil-define-key 'insert global-map
         "j" #'self-insert-command "k" #'self-insert-command)
       (evil-define-key 'motion help-mode-map
         (kbd "<tab>") #'forward-button))
   #+END_SRC

   Aggressive indent
   #+BEGIN_SRC elisp
     (use-package aggressive-indent
       :diminish ""
       :config (global-aggressive-indent-mode))
   #+END_SRC

   Switch window with ace
   #+BEGIN_SRC elisp
     (use-package ace-window
       :config (ace-window-display-mode 1)
       :bind ("C-x o" . ace-window))
   #+END_SRC

   Do things with helm:
   #+BEGIN_SRC elisp
     (use-package helm
       :config
       (helm-mode 1)
       (define-key shell-mode-map (kbd "M-r") #'helm-comint-input-ring)
       :diminish helm-mode
       :bind (("C-h SPC" . helm-all-mark-rings)
              ("C-x b" . helm-mini)
              ("C-x C-b" . helm-buffers-list)
              ("C-x C-f" . helm-find-files)
              ("C-c g" . helm-do-grep)
              ("C-s" . helm-occur)
              ("M-x" . helm-M-x)))
     (require 'helm-config)
     (use-package evil
       :config (dolist (state '(insert motion normal))
                 (evil-define-key state global-map
                   (kbd "M-y") #'helm-show-kill-ring)))
   #+END_SRC

** Org
   #+BEGIN_SRC elisp
     (add-hook 'org-mode-hook
               '(lambda ()
                  (add-hook 'before-save-hook 'org-align-all-tags
                            :local t)))
     (org-babel-do-load-languages 'org-babel-load-languages
                                  '((sh . t)))
     (setq org-src-fontify-natively t)
   #+END_SRC

*** Crypt
    #+BEGIN_SRC elisp
      (require 'org-crypt)
      (add-hook 'org-mode-hook
                '(lambda ()
                   (add-hook 'before-save-hook 'org-encrypt-entries
                             :local t)))
      (setq org-tags-exclude-from-inheritance '("crypt")
            org-crypt-key user-mail-address)
    #+END_SRC

    Make it possible to tangle encrypted block
    #+BEGIN_SRC elisp
      (remove-hook 'org-babel-pre-tangle-hook #'save-buffer)
    #+END_SRC

** Doc-View
   #+BEGIN_SRC elisp
     (eval-after-load 'doc-view
       '(bind-key (kbd "<mouse-1>") #'doc-view-scroll-up-or-next-page doc-view-mode-map))
     (setq doc-view-resolution 300
           doc-view-cache-directory (expand-file-name "~/.emacs.d/doc-view"))
     (use-package evil
       :config (add-hook 'view-mode-hook #'evil-emacs-state))
   #+END_SRC

** Dired
   #+BEGIN_SRC elisp
     (use-package dired+
       :config
       (require 'dired+)
       (global-dired-hide-details-mode -1)
       (defun dired-open ()
         (interactive)
         (dired-do-shell-command "xdg-open &" :file-list (dired-get-marked-files)))
       (define-key dired-mode-map (kbd "RET") #'dired-open)
       (define-key dired-mode-map (kbd "<mouse-2>") #'dired-open)
       (setq dired-recursive-copies 'always
             dired-recursive-deletes 'always
             dired-listing-switches "-alh"
             dired-guess-shell-alist-user
             '(("\\.cb.\\'" "okular")
               ("." "xdg-open;"))))
   #+END_SRC

** Eshell
   Put eshell on a convenient binding
   #+BEGIN_SRC elisp
     (global-set-key (kbd "C-x M-m") #'eshell)
   #+END_SRC

   I like the prompt to be on a separate line.
   #+BEGIN_SRC elisp
     (setq eshell-prompt-function
           '(lambda ()
              (concat (eshell/pwd) "\n"
                      (int-to-string eshell-last-command-status) " % "))
           eshell-prompt-regexp "^[[:digit:]]\\{1,3\\} % ")
   #+END_SRC

   These are terminal-manipulating commands
   #+BEGIN_SRC elisp
     (eval-after-load 'em-term
       '(progn
          (dolist (prog '("atop" "systemd-cgls" "journalctl"))
            (add-to-list 'eshell-visual-commands prog))
          (add-to-list 'eshell-visual-options '("ssh" "-t"))))
   #+END_SRC

   Profile:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/profile :no-expand
     addpath ~/Copy/bin
   #+END_SRC

   Aliases:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias vim find-file $1
     alias i yaourt $*
     alias j journalctl -afb $*
     alias sc <<system_ctl>> $*
     alias uc <<user_ctl>> $*
     alias ytdl <<ytdl>> -a /home/<<username>>/q.txt
     alias fr free -h
   #+END_SRC

* Ansible
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ansible
  #+END_SRC

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package yaml-mode)
         (use-package ansible-doc
           :config (add-hook 'yaml-mode-hook #'ansible-doc-mode))))
  #+END_SRC

** Inventory
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible_inventory
   :END:

   Here are the hosts and their variables
   #+BEGIN_SRC conf
     [arch]
     kub ansible_python_interpreter=/usr/bin/python2
     ton ansible_python_interpreter=/usr/bin/python2 ansible_connection=local

     [all:vars]
     user=<<username>>
     home=/home/<<username>>
     h=<<storage>>
     conf="{{h}}/config/{{ansible_hostname}}"
     locale=en_US
     prefix=<<prefix>>
   #+END_SRC

** Config
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible.cfg
   :END:

   Keep the inventory here
   #+BEGIN_SRC conf
     [defaults]
     inventory = ~/.ansible_inventory
   #+END_SRC

   For some reason ControlMaster isn't working
   #+BEGIN_SRC conf
     [ssh_connection]
     ssh_args=-o ControlMaster=no
   #+END_SRC

* Firefox
  :PROPERTIES:
  :header-args+: :tangle ~/.pentadactylrc
  :END:
  This file is in vimrc syntax

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(use-package vimrc-mode))
  #+END_SRC

  Use DuckDuckGo:

  #+BEGIN_SRC vimrc
    silent bmark -keyword ddg -t DDG https://duckduckgo.com/?kn=1&kp=-1&kae=c&q=%s
    set defsearch=ddg
  #+END_SRC

  Use backspace to go back:
  #+BEGIN_SRC vimrc
    set! browser.backspace_action=0
  #+END_SRC

  Don't let middle mouse paste:
  #+BEGIN_SRC vimrc
    set! middlemouse.contentLoadURL=false
  #+END_SRC

  Restore C-j for Downloads:
  #+BEGIN_SRC vimrc
    map <C-j> -ex dialog downloads
  #+END_SRC

  Bind stop to an easy binding:
  #+BEGIN_SRC vimrc
    map s <C-c>
  #+END_SRC

  Make scrolling easier:
  #+BEGIN_SRC vimrc
    map <space> <C-d>
    map <S-space> <C-u>
  #+END_SRC

  Pin tab:
  #+BEGIN_SRC vimrc
    map <A-p> -ex pintab!
  #+END_SRC

  Move to first or last:
  #+BEGIN_SRC vimrc
    map <A-!> -ex tabm 1
    map <A-$> -ex tabm $
  #+END_SRC

  Fast switching:
  #+BEGIN_SRC vimrc
    map -m normal,insert <F1> <C-^>
  #+END_SRC

  Don't raise these openings:
  #+BEGIN_SRC vimrc
    set activate-=diverted,links,tabopen,paste
  #+END_SRC

  Open help in a new tab
  #+BEGIN_SRC vimrc
    set newtab=help
  #+END_SRC

  Keep hint keys under left fingers:
  #+BEGIN_SRC vimrc
    set hintkeys=12345
  #+END_SRC

  Make hint text readable
  #+BEGIN_SRC vimrc
    highlight Hint -append font-size: 14px !important
  #+END_SRC

  Unzoom image:
  #+BEGIN_SRC vimrc
    map <A-t> -js content.document.toggleImageSize()
  #+END_SRC

  Replace the status line with navigation bar, and show link in the commandline:
  #+BEGIN_SRC vimrc
    set guioptions=bTrc
    set showstatuslinks=command
  #+END_SRC

  Scroll by one line:
  #+BEGIN_SRC vimrc
    set scrollsteps=1
  #+END_SRC

  Show feeds first in pageinfo:
  #+BEGIN_SRC vimrc
    set pageinfo=fgmse
  #+END_SRC

  Use visual bell:
  #+BEGIN_SRC vimrc
    set visualbell
  #+END_SRC

  Bookmarks and preferences:
  #+BEGIN_SRC vimrc
    map <C-S-s> -ex bmark -keyword ac -t config about:config
    \ bmark -keyword bgp -t BGP http://bgp.he.net/search?search[search]=%s
    \ bmark -keyword v -t valsi http://vlasisku.lojban.org/?query=%s
    \ bmark -keyword c -t camxes http://camxes.lojban.org/?text=%s
    \ bmark -keyword yb -t youtube https://youtube.com/watch?v=%s
    \ bmark -keyword cw -t 'CrawlWiki' http://crawl.chaosforge.org/index.php?title=Special%3ASearch&search=%s
    \ bmark -keyword bb -t burnbit http://burnbit.com/burn?file=%s
    \ bmark -keyword b -t btdigg https://btdigg.org/search?q=%s&order=0&p=0
    \ bmark -keyword ba -t btdigg https://btdigg.org/search?q=%s&order=2&p=0
    \ bmark -keyword m -t zing http://mp3.zing.vn/tim-kiem/bai-hat.html?q=%s
    \ bmark -keyword ma -t artist http://musicbrainz.org/search?advanced=1&type=artist&tport=8000&query=%s
    \ bmark -keyword mg -t group http://musicbrainz.org/search?advanced=1&type=release_group&tport=8000&query=%s
    \ bmark -keyword mr -t recording http://musicbrainz.org/search?advanced=1&type=recording&tport=8000&query=%s
    \ bmark -keyword gm -t gmail https://mail.google.com/mail/#spam
    \ set! accessibility.browsewithcaret_shortcut.enabled=false
    \ set! browser.newtabpage.enabled=false
    \ set! browser.privatebrowsing.dont_prompt_on_enter=true
    \ set! browser.sessionstore.restore_pinned_tabs_on_demand=true
    \ set! browser.shell.checkDefaultBrowser=false
    \ set! browser.startup.homepage=about:blank
    \ set! browser.startup.page=3
    \ set! general.warnOnAboutConfig=false
    \ set! security.OCSP.enabled=0
    \ set! security.warn_viewing_mixed=false
    \ set! layout.spellcheckDefault=0
    \ set! middlemouse.paste=true
    \ set! ui.key.menuAccessKey=0
    \ set! browser.anchor_color="#6c71c4"
    \ set! browser.display.background_color="#fdf6e3"
    \ set! browser.display.foreground_color="#657b83"
    \ set! browser.display.use_system_colors=false
    \ set! font.default.x-western="sans-serif"
    \ if /NT 6/.test(window.navigator.oscpu)
    \     set! font.name.monospace.x-western=Consolas
    \ fi
    \ set! extensions.checkCompatibility.nightly=false
    \ set! extensions.https_everywhere._observatory.alt_roots=true
    \ set! extensions.https_everywhere._observatory.enabled=true
    \ set! extensions.https_everywhere._observatory.priv_dns=true
    \ set! plugins.hide_infobar_for_missing_plugin=true
    \ set! browser.download.manager.alertOnEXEOpen=false
    \ set! browser.download.manager.scanWhenDone=false
    \ set! browser.search.context.loadInBackground=true
    \ set! intl.charset.default=UTF-8
    \ set! network.http.pipelining=true
    \ set! network.http.pipelining.aggressive=true
    \ set! network.http.pipelining.ssl=true
    \ set! network.protocol-handler.expose.magnet=false
    \ set! network.proxy.socks=kub.<<domain>>
    \ set! network.proxy.socks_port=9050
    \ set! network.proxy.socks_remote_dns=true
    \ set! toolkit.telemetry.enabled=true
    \ js services.permissions.add(services.io.newURI("http:depositfiles.com",null,null), 'image', services.permissions.DENY_ACTION)
    \ js services.loginManager.setLoginSavingEnabled("accounts.google.com", false)
  #+END_SRC

  Strip tracker from location, thanks to [[https://userscripts.org/scripts/show/93825][Bruno Barão]] and [[https://github.com/5digits/dactyl/commit/7a1ffa5b555399c5d0925ad599e2640070bd128d][Kris Maglione]].
  #+BEGIN_SRC vimrc
    autocmd DOMLoad (utm|wa)_ -js win.history.replaceState("Remove trackers", '', doc.location.href.replace(/&?(utm|wa)_[^&]+/g,'').replace(/\?$/,''))
  #+END_SRC

  Facebook
  #+BEGIN_SRC vimrc
    bmark -keyword fb -t facebook https://fb.me/%s
    map <A-s> -js dactyl.open("https://www.facebook.com/sharer/sharer.php?u=" + content.location)
  #+END_SRC

  Inoreader
  #+BEGIN_SRC vimrc
    map <A-f> -js dactyl.open("https://www.inoreader.com/?add_feed=" + content.location)
    map <A-w> -js dactyl.open("https://www.inoreader.com/bookmarklet/save_web_page/" + encodeURIComponent(content.location))
    js services.permissions.add(services.io.newURI("http:inoreader.com",null,null), 'popup', services.permissions.ALLOW_ACTION)
    set passkeys+=inoreader.com:jkgafswhq
  #+END_SRC
  Get videos from starred items
  #+BEGIN_SRC sh :tangle /kub:.bash_login
    function videos() {
        <<ytdl>> --ignore-errors $(curl 'https://www.inoreader.com/reader/api/0/stream/contents/user%2F-%2Fstate%2Fcom.google%2Fstarred?n=1000&r=o' \
                                        -H 'AppId: 1000001238' -H 'AppKey: <<inoreader_key>>' \
                                        -H 'Authorization: GoogleLogin auth=<<inoreader_auth>>' \
                                          | jq -r '.items|.[]|.canonical[0]|.href' \
                                          | grep -vE rapidgator\|escapistmag\|muspy )
    }
  #+END_SRC

  Site keyboard shortcuts:
  #+BEGIN_SRC vimrc
    set passkeys+=tumblr.com:jk
    set passkeys+=mail.google.com/mail/:'#!ms+-/? jknpux'
    set passkeys+=google.com/contacts/:'#jkoux,.'
  #+END_SRC

  Switch to reader mode:
  #+BEGIN_SRC vimrc
    map <A-r> -js dactyl.open("about:reader?url=" + content.location)
  #+END_SRC

* Secrets							      :crypt:
-----BEGIN PGP MESSAGE-----
Version: GnuPG v2

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
CNK24siOE+HTV1kYHzHSWj/F4Cru
=9RtL
-----END PGP MESSAGE-----
