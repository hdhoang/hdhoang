#+STARTUP: showall
#+PROPERTY: header-args+ :cache yes
#+PROPERTY: header-args+ :comments org
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :noweb yes
#+PROPERTY: header-args+ :results silent
#+PROPERTY: header-args+ :tangle-mode 384
#+PROPERTY: header-args:text+ :eval no
* Hoàng Đức Hiếu
  :PROPERTIES:
  :EXPORT_OPTIONS: toc:nil date:nil arch:nil num:nil author:nil email:t tags:nil
  :END:
#+EMAIL: 1988 / +84-166-241-9526 / cv@hdhoang.space
#+SELECT_TAGS: vi
#+LATEX_CLASS_OPTIONS: [twocolumn]
#+LATEX_HEADER: \usepackage{libertine}
#+LATEX_HEADER: \usepackage{xcolor-solarized, sectsty}
#+LATEX_HEADER: \usepackage[pagecolor={solarized-base3}]{pagecolor}
#+LATEX: \sectionfont{\color{solarized-blue}}
#+LATEX: \subsectionfont{\color{solarized-cyan}}
#+LATEX: \vspace*{-197pt}\includegraphics{Pictures/mug/img078}
#+LATEX_HEADER: \usepackage{titling}
#+LATEX_HEADER: \pretitle{\begin{flushright}\LARGE}
#+LATEX_HEADER: \posttitle{\par\end{flushright}}
#+LATEX_HEADER: \preauthor{\begin{flushright}}
#+LATEX_HEADER: \postauthor{\end{flushright}}
#+LATEX_HEADER: \pagenumbering{gobble}
** Education								 :en:
   - 2014 - now :: Studying System Administration and software testing
                   at Bachkhoa-Aptech (graduating 2016H2)
   - 2013 - 2014 :: Finished K12 and completed accounting course at
                    Quang Trung private school
   - 2007 - 2012 :: Self-learned various topics
     - Programming languages (Python, shells, HTML5, Emacs Lisp, Rust)
     - History of free software
     - Hanoi GNU/Linux user community
     - Wing-chun martial art
     - The constructed logical language Lojban
   - 2006 - 2007 :: Freshman in computer programming at Monash
                    College, Australia (earned Distinction and High
                    Distinction in most subjects)
   - 2003 - 2006 :: Chu Van An Highschool, majoring in English
#+LATEX: \newpage
** Tiểu sử								 :vi:
   - 2014 - nay :: học quản trị mạng và kiểm thử phần mềm tại
                   Bachkhoa-APTECH (dự kiến tốt nghiệp năm 2016)
#+LATEX: \newpage
** Qualifications and skills						 :en:
*** IT skills
   - In-depth GNU/Linux usage and administration, experienced in
     self-hosting web sites (ownCloud on Debian Apache, ArchLinux nginx)
   - Comprehensive network understanding (routing, firewall, encryption)
   - Using version control systems, especially git
   - Contributing to free software projects ([[https://www.openhub.net/accounts/hdhoang/positions][hdhoang on OpenHub]])
   - Office equipment troubleshooting
*** Language skills
   - Fluency in English (990 in TOEIC, 2015)
   - Elementary Japanese (N4 equivalent)
*** Others
   - Self-teaching discipline
   - Strong interest in learning new topics
** Kĩ năng								 :vi:
*** Kĩ năng IT
     - Sử dụng và quản trị các hệ thống GNU/Linux chuyên sâu, tự quản
       trị dịch vụ web (owncloud, Debian Apache, ArchLinux nginx)
     - Hiểu biết rõ hệ thống mạng (định tuyến, tường lửa)
     - Sử dụng hệ thống quản lí phiên bản, đặc biệt là git
     - Đóng góp vào các dự án phần mềm tự do ([[https://www.openhub.net/accounts/hdhoang][hdhoang trên OpenHub]])
     - Xử lý vấn đề các thiết bị văn phòng
*** Kĩ năng ngôn ngữ
     - Tiếng Anh thuần thục (TOEIC 990, 2015)
     - Tiếng Nhật cơ bản (tương đương N4)
** Interests								 :en:
   - Exploring science, history, and natural subjects
   - Science-fiction novels, rational fanfictions
   - Electric guitar riffs
   - Frequent blood donor until no longer eligible
** Sở thích								 :vi:
    - Khám phá các chủ đề khoa học, lịch sử, tự nhiên
    - Tiểu thuyết khoa học viễn tưởng, ???
    - Nghe solo guitar điện
    - Thường xuyên hiến máu cho đến khi hết khả năng

* Places and names
  #+NAME: username
  #+BEGIN_SRC text
    hdhoang
  #+END_SRC

  #+NAME: domain
  #+BEGIN_SRC text
    <<username>>.space
  #+END_SRC

  #+BEGIN_SRC emacs-lisp :tangle ~/.emacs
    (setq user-mail-address "<<username>>@<<domain>>")
  #+END_SRC

  #+NAME: storage
  #+BEGIN_SRC text
    /home/<<username>>/sync
  #+END_SRC

  #+NAME: videos
  #+BEGIN_SRC text
    /h/Public/Videos
  #+END_SRC

  #+NAME: prefix
  #+BEGIN_SRC text
    10.117.14.
  #+END_SRC

  #+NAME: prefix6
  #+BEGIN_SRC text
    2001:470:36:62a::
  #+END_SRC

  #+NAME: system_ctl
  #+BEGIN_SRC text
    systemctl --system --no-pager
  #+END_SRC

  #+NAME: user_ctl
  #+BEGIN_SRC text
    systemctl --user --no-pager
  #+END_SRC

  #+NAME: pacman
  #+BEGIN_SRC text
    yaourt --noconfirm --needed
  #+END_SRC

  #+NAME: ytdl
  #+BEGIN_SRC text
    youtube-dl --no-mtime --format "[height <=? 480]" --output <<videos>>/"%(uploader)s %(upload_date)s %(title)s@%(id)s.%(ext)s"
  #+END_SRC

* Blog
  :PROPERTIES:
  :EXPORT_OPTIONS: toc:nil num:nil
  :END:
  #+BEGIN_SRC css :tangle ~/Public/blog.css
    body {
        background: #fdf6e3; color: #657b83;
        margin: 0 25%;
        line-height: 1.5;
    }
  #+END_SRC
/** hdhoang
   :PROPERTIES:
   :EXPORT_FILE_NAME: ~/Public/index
   :END:
   Elsewhere on the net:
   - hdhoang ::
     + [[https://telegram.me/hdhoang][Telegram]]
     + [[https://www.openhub.net/accounts/hdhoang][OpenHub]]
     + [[https://gitlab.com/u/hdhoang][GitLab]]
     + [[https://github.com/hdhoang?tab%3Dactivity][GitHub]]
     + [[http://www.last.fm/user/hdhoang][Last.fm]]
     + [[https://facebook.com/hdh000][Facebook]]
   - lasigmaz ::
     + [[https://twitter.com/lasigmaz][Twitter]]
     + [[https://steamcommunity.com/id/lasigmaz][Steam]]

   I have a maybe-blog:
   - [[file:vanity-irc.org][Showing a custom hostname to Freenode]]
   - [[file:borrow-die.org][Borrow checker analogy]]

** Consumption
*** <2016-01-18 Mon> Rạng Đông A55N2/5W (42,200đ)
** Borrow-checking with friends
   :PROPERTIES:
   :EXPORT_FILE_NAME: ~/Public/borrow-die
   :END:
   #+BEGIN_SRC rust :tangle ~/Public/die.rs
     #[derive(Debug)]
     enum D3 { One, Two, Three }
     impl D3 {
         fn peek(self: &D3, name: &str) {
             println!("{} sees that it's {:?}.", name, self);
         }
     }
   #+END_SRC
   Our main character, named Max, has a d3.
   #+BEGIN_SRC rust :tangle ~/Public/die.rs
     fn main() {
         print!("Hi, I'm Max. ");
         let mut die = D3::Two;
         die.peek("Max");
   #+END_SRC
   Max can rolls his die:
   #+BEGIN_SRC rust :tangle ~/Public/die.rs
         die = D3::One;
         die.peek("Max");
   #+END_SRC
   Max invites Alice and Bob over for a game of dice. The die is on the table and everyone can see what it's showing.
   #+BEGIN_SRC rust :tangle ~/Public/die.rs
         'table: loop {
             let bob = &die;
             bob.peek("Bob");
             die.peek("Everyone"); // same thing
             break 'table; // that's enough peeking for now
         }
    #+END_SRC
    It's Alice's turn, she picks up the die and rolls.
    #+BEGIN_SRC rust :tangle ~/Public/die.rs
         'alices_turn: loop {
             let alice = &mut die;
             *alice = D3::Three;
             alice.peek("Alice");
             break 'alices_turn;
         }
    #+END_SRC
    It lands on the table and now everyone sees what Alice rolled.
    #+BEGIN_SRC rust :tangle ~/Public/die.rs
         die.peek("Max");
     }
   #+END_SRC
   [[file:borrow-die.rs][Full code.]]
** Vanity plate on IRC
   :PROPERTIES:
   :EXPORT_FILE_NAME: ~/Public/vanity-irc
   :END:
*** Ingredients:
    - An IPv6 block whose PTR you can delegate (I use Hurricane Electric's [[https://tunnelbroker.net][tunnelbroker service]])
    - A hostname whose AAAA you can change (I'm using a full domain, hosted on [[https://cloudflare.com][CloudFlare]], but it should works [[https://freedns.afraid.org][with subdomains]])
    - I'm using a Debian machine to connect to Freenode
*** Recipes:
    1. Request an IPv6 tunnel with HE
    2. Delegate its rDNS to [[https://dns.he.net][dns.he.net]]
    3. Match forward and reverse DNS between an address and your hostname:
       #+BEGIN_SRC sh :results replace
         bash -c 'diff <(nslookup test-plate.hdhoang.space.) <(nslookup 2001:470:36:62a::cccc)'
       #+END_SRC

       #+RESULTS[b43b6d2d898df8156aa60d0405a8b2f68660f12d]:

       - Choose an address, point it to your hostname
       - Add the address to the hostname's AAAA records
    6. Connect to Freenode with that address as the source, for example:
       #+BEGIN_SRC sh
         for fn in $(dig +short -t aaaa chat.freenode.net); do
             ip -6 route add $fn src $address dev $tunnel_interface;
         done;
       #+END_SRC
       or
       #+BEGIN_SRC sh
         ip -6 route add default src $address dev $tunnel_interface
       #+END_SRC

* OpenVPN
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S openvpn
  #+END_SRC
  #+NAME: openvpn_common
  #+BEGIN_SRC conf
    dev tun
    topology subnet
    persist-key
    persist-tun
    keepalive 10 30
    tls-version-min 1.2
    tls-cipher TLS-DHE-RSA-WITH-AES-128-CBC-SHA
    <tls-auth>
    <<ta_key>>
    </tls-auth>
    <ca>
    -----BEGIN CERTIFICATE-----
    MIIEYTCCA0mgAwIBAgIJAPxrcItU3yz8MA0GCSqGSIb3DQEBCwUAMH0xCzAJBgNV
    BAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFOb2kxDTALBgNVBAoTBHph
    aGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3phaGUubWUxHjAcBgkqhkiG
    9w0BCQEWD2hkaG9hbmdAemFoZS5tZTAeFw0xNTA5MjYxMTM0NTRaFw0yNTA5MjMx
    MTM0NTRaMH0xCzAJBgNVBAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFO
    b2kxDTALBgNVBAoTBHphaGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3ph
    aGUubWUxHjAcBgkqhkiG9w0BCQEWD2hkaG9hbmdAemFoZS5tZTCCASIwDQYJKoZI
    hvcNAQEBBQADggEPADCCAQoCggEBANXOfdISWeotIr3neKpj6IGBlCLMEBNtMB1r
    bTIgkxe9tnNd4jBufq6duLK91ioqcJiAxMLRovYtaRTOpQit5/PnAm2Iwu3u2mGX
    EftWEBSVt437NMVA6L2Jemv1lp81vmzJIODgPQ9elrNteQ3ccAMCpuj/l6PhGeFq
    JvK+dNIJcm2+xM15S6ESwjsZxwijiT3TMJAjXJPC5R3gpULoTHrphPGrS/0RIq9c
    Bd/+4Q7k1MguPK2XSKHiJnUIkQJ/m/XGT2iXVEzhOsHZ8vlaNq1xBzTko10nEb7I
    sOQjuH4GCZMeoYnF3egg534fg+BYPAecuKglqdIpnm4+syJsrR0CAwEAAaOB4zCB
    4DAdBgNVHQ4EFgQUsDCM7/aJ6AjPVQPEbdDTiTa9WIswgbAGA1UdIwSBqDCBpYAU
    sDCM7/aJ6AjPVQPEbdDTiTa9WIuhgYGkfzB9MQswCQYDVQQGEwJWTjELMAkGA1UE
    CBMCSE4xDjAMBgNVBAcTBUhhTm9pMQ0wCwYDVQQKEwR6YWhlMRAwDgYDVQQDEwd6
    YWhlIENBMRAwDgYDVQQpEwd6YWhlLm1lMR4wHAYJKoZIhvcNAQkBFg9oZGhvYW5n
    QHphaGUubWWCCQD8a3CLVN8s/DAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUA
    A4IBAQAKkiDOWmwu1D+qbCSYaSxiMfJ70FyA/o+AuCDeaGxKdFLZ2JQgYK/az3y8
    tGQKBc6AdUY7BoN1Ab/6TOz+hWvmyNOOvq2AMgt2bHHA+JquRZMdgw59OtbB2BjC
    vBs2cxRJWdmv8aSltcqVpm2HNHy3mzcq8i0CdFluxDV+zQmvhGVypAipYTlhdi0l
    KLJlB+3fqS5GQB0wPmkV2N6WJdm0NfoTbBOCXwVb4ChyrgryQaOQi5nu8wO9tzeO
    kK/jQJRFKpdwBYqAe0Q/JP95pVjctyiVFg97ppvQ557QFcY1pHapAwhyBmxYiLak
    W4pz42IduC2pnZ3ut4C7UzpeDMRr
    -----END CERTIFICATE-----
    </ca>
  #+END_SRC

* SSH
  :PROPERTIES:
  :header-args+: :tangle ~/.ssh/config
  :END:

  SSH encryption settings by https://stribika.github.io/2015/01/04/secure-secure-shell.html

  #+BEGIN_SRC conf
    Host *
    KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
    Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com,hmac-sha1
  #+END_SRC

  Machines
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    <<prefix>>1 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBL5T08oNKjMm7yWA0zqqqSwl6Vn0nlpoAlpP9USh0NewyfVO/xOGgkUWIlUU8p85Z3zK9YY3pl0zfQQrQHvp88Y=
    <<prefix>>185 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBMCCrxVyoz4ekNh2zAbr2JzvJdojMMoHYnbo20Qjn3sW+P7FUuuiknzbX0aX81BZWdKFwspNLJAXHLoiS8zy8Wc=
  #+END_SRC
  #+BEGIN_SRC conf
    Host <<prefix>>1
    User root
    IdentityFile ~/.ssh/kub
  #+END_SRC
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'tramp
      '(add-to-list 'tramp-default-method-alist '("vorme" nil "scp")))
  #+END_SRC

  #+BEGIN_SRC conf
    Host <<prefix>>185
    User <<username>>
    IdentityFile ~/.ssh/kub
  #+END_SRC
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'tramp
      '(add-to-list 'tramp-default-proxies-alist '("<<prefix>>185" "root" "/ssh:<<prefix>>185:")))
  #+END_SRC

* KDE
** kwin
   :PROPERTIES:
   :header-args+: :tangle ~/.config/kwinrulesrc
   :END:

   #+BEGIN_SRC conf
     [1]
     Description=Window settings for firefox
     shortcut=F5
     shortcutrule=2
     windowrole=browser
     windowrolematch=1
     wmclass=navigator firefox
     wmclasscomplete=true
     wmclassmatch=1
   #+END_SRC

   Put emacs on F4
   #+BEGIN_SRC conf
     [2]
     Description=Application settings for emacs
     shortcut=F4
     shortcutrule=2
     wmclass=emacs
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   Put konsole on F6
   #+BEGIN_SRC conf
     [3]
     Description=Application settings for konsole
     shortcut=F6
     shortcutrule=2
     wmclass=konsole
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   #+BEGIN_SRC conf
     [4]
     Description=No border on anything
     noborder=true
     noborderrule=2
   #+END_SRC

   #+BEGIN_SRC conf
     [General]
     count=4
   #+END_SRC

* Git
  #+BEGIN_SRC conf :tangle .git/config
    [core]
            repositoryformatversion = 0
            filemode = true
            bare = false
            logallrefupdates = true
    [remote "origin"]
            url = https://gitlab.com/<<username>>/<<username>>
            pushUrl = gitlab.com:<<username>>/<<username>>
            pushUrl = github.com:<<username>>/<<username>>
            pushUrl = bitbucket.org:<<username>>/<<username>>
            fetch = +refs/heads/*:refs/remotes/origin/*
    [branch "master"]
            remote = origin
            merge = refs/heads/master
  #+END_SRC

  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S git
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [user]
    name = Hoàng Đức Hiếu
    email = <<username>>@<<domain>>
    [color]
    ui = auto
    [core]
    eol = lf
    whitespace = trailing-space,space-before-tab
    [alias]
    ml = log --reverse --topo-order ORIG_HEAD..
    [merge]
    conflictstyle = diff3
    [push]
    default = simple
    [pull]
    rebase = true
    [rebase]
    stat = true
  #+END_SRC

  Code hosting sites:
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
    gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
  #+END_SRC
  #+BEGIN_SRC conf :tangle ~/.ssh/config
    Host gitlab.com github.com bitbucket.org
    User git
    IdentityFile ~/.ssh/git
    Host git.kde.org
    User git
    IdentityFile ~/.ssh/kde
    Host heroku.com
    IdentityFile ~/.ssh/heroku
  #+END_SRC

  Magit is awesome.
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package magit
           :bind ("C-x g" . magit-status)
           :config
           (setq magit-save-repository-buffers 'dontask
                 magit-push-always-verify nil))))
  #+END_SRC

* Crawl
  #+BEGIN_SRC conf :tangle ~/.crawlrc
    tile_full_screen = false
    autopickup_exceptions += <tomahawk, <throwing net, <javelin, <rock, <immol
    autopickup_exceptions += <misc, <ego, <artefact, <mutagenic
  #+END_SRC

* ArchLinux
  Pacman config
  #+NAME: pacman_common
  #+BEGIN_SRC conf
    [options]
    VerbosePkgLists
    UseSyslog
    CheckSpace
    HoldPkg = pacman glibc
    SigLevel = Required DatabaseOptional
    LocalFileSigLevel = Optional

    [core]
    Include = /etc/pacman.d/mirrorlist
    [extra]
    Include = /etc/pacman.d/mirrorlist
    [community]
    Include = /etc/pacman.d/mirrorlist
    [blackarch]
    Server = http://f.archlinuxvn.org/$repo/$repo/os/$arch
  #+END_SRC

  Refresh database
  #+BEGIN_SRC sh :dir /sudo::
    dirmngr --daemon
    pacman-key -r 7533BAFE69A25079
    pacman-key --lsign 7533BAFE69A25079
    <<pacman>> -S -y
  #+END_SRC

  AUR helper
  #+BEGIN_SRC yaml :tangle ~/Copy/bin/aur :shebang #!/bin/ansible-playbook
    - hosts: arch
      gather_facts: no
      vars:
        store: /tmp/aur
      vars_prompt:
        - name: package
          private: no
      tasks:
        - file: state=directory path={{store}}
        - get_url: url=https://aur4.archlinux.org/cgit/aur.git/snapshot/{{package}}.tar.gz dest={{store}}/
        - unarchive: copy=no src={{store}}/{{package}}.tar.gz dest={{store}}
        - command: nice makepkg --noconfirm --install --force --syncdeps chdir={{store}}/{{package}}
  #+END_SRC

  Yaourt config
  #+BEGIN_SRC conf :tangle ~/.yaourtrc
    AURUPGRADE=1
    EXPORT=1
    EXPORTDIR=~
    BUILD_NOCONFIRM=1
    EDITFILES=0
  #+END_SRC

  Base utils
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S haveged p7zip parallel pkgfile yaourt
    <<system_ctl>> enable --now haveged
  #+END_SRC

  #+BEGIN_SRC sh
    pkgfile -u
  #+END_SRC

  Dev-env:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S base-devel rust android-tools
  #+END_SRC

  Monitoring:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ethtool lm_sensors net-tools psmisc \
        procps-ng inetutils ltrace sysdig atop iotop
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/Copy/bin/strace :shebang #!/bin/sh :no-expand
    exec /usr/bin/ltrace -CSn2 $@
  #+END_SRC

  Of course emacs is installed, now run it
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S emacs-pkgbuild-mode
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.config/systemd/user/emacs.service
    [Unit]
    Description=Emacs

    [Service]
    ExecStart=/bin/emacs
    Restart=always
    RestartSec=1sec

    [Install]
    WantedBy=default.target
  #+END_SRC

  #+BEGIN_SRC sh :dir ~
    <<user_ctl>> enable --now emacs syncthing pulseaudio
  #+END_SRC

** kub
   :PROPERTIES:
   :header-args+: :dir /sudo:10.117.14.185:
   :END:
*** Mounts
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/fstab
      LABEL=<<username>> /home/<<username>> auto
      LABEL=var /var auto
    #+END_SRC

*** Network
    :PROPERTIES:
    :header-args+: :tangle-mode 260
    :END:
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/network/eth0.network
      [Match]
      Name = eth0

      [Network]
      Address = <<prefix>>185/24
      Gateway = <<prefix>>1
      DNS = <<prefix>>1
      IPForward = yes

      Tunnel=he-ipv6
      Address=<<prefix6>>1/64
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/network/he-ipv6.netdev
      [NetDev]
      Name=he-ipv6
      Kind=sit
      MTUBytes=1472

      [Tunnel]
      Local=<<prefix>>185
      Remote=216.218.221.42
      TTL=255
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/network/he-ipv6.network
      [Match]
      Name=he-ipv6
      [Network]
      Address=2001:470:35:62a::2/64
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/system/he-ipv6-route.service
      [Unit]
      After=network.target

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      ExecStart=/bin/ip -6 route add default src <<prefix6>>1 dev he-ipv6
      ExecStop=/bin/ip -6 route del default

      [Install]
      WantedBy=multi-user.target
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/radvd.conf
      interface eth0 {
      AdvSendAdvert on;
      MinRtrAdvInterval 3;
      MaxRtrAdvInterval 10;
      AdvLinkMTU 1472;
      prefix <<prefix6>>/64 {
      AdvOnLink on;
      AdvRouterAddr on;
      };
      };
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/resolv.conf
      nameserver <<prefix>>1
    #+END_SRC

*** Pacman
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/pacman.conf :tangle-mode 260
      <<pacman_common>>

      [options]
      Architecture = armv7h

      [alarm]
      Include = /etc/pacman.d/mirrorlist
      [aur]
      Include = /etc/pacman.d/mirrorlist
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/pacman.d/mirrorlist
      Server = http://vn.mirror.archlinuxarm.org/$arch/$repo
    #+END_SRC

*** LED blinking
    #+BEGIN_SRC sh :tangle /sudo:10.117.14.185:/usr/local/bin/leds :shebang #!/bin/sh
      echo none > /sys/class/leds/cubieboard:green:usr/trigger
      echo mmc0 > /sys/class/leds/cubieboard:blue:usr/trigger
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/system/leds.service
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/leds
      RemainAfterExit=true

      [Install]
      WantedBy=basic.target
    #+END_SRC

*** Tor
    #+BEGIN_SRC sh :dir /sudo:10.117.14.185:
      <<pacman>> -S tor
    #+END_SRC

*** HTTP
    #+BEGIN_SRC sh
      <<pacman>> -S nginx
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/nginx/nginx.conf
      events {}
      http {
      include       mime.types;
      default_type  text/plain;
      charset utf-8;
      gzip off;

      access_log  off;
      log_not_found off;

      server {
      return 301 https://$host$request_uri;
      }

      ssl_protocols TLSv1.2;
      ssl_ciphers EECDH+CHACHA20:EECDH+AES128;
      ssl_prefer_server_ciphers on;
      add_header Strict-Transport-Security max-age=31536000;

      map $request_uri $dest {
      /c /mirror/caps2ctrl.exe;
      /d http://5digits.org/nightly/pentadactyl-latest.xpi;
      /pe http://live.sysinternals.com/;
      /s https://puttytray.goeswhere.com/download/putty.exe;

      default "";
      }

      server {
      listen 443 ssl spdy default_server;
      ssl_certificate <<domain>>.crt;
      ssl_certificate_key <<domain>>.key;
      server_name kub.<<domain>> <<domain>>;
      root /home/<<username>>/Public/;
      autoindex on;
      if ($dest) {
      return 301 $dest;
      }
      location /ipfs/ {
      proxy_pass http://127.0.0.1:4005;
      }
      location ~ /mirror/(?:.*)\.part {
      return 403 incomplete;
      }
      }

      server {
      listen 443 ssl spdy;
      server_name id.<<domain>>;
      root /home/<<username>>/Public/;
      index <<username>>;
      default_type text/html;
      }
      }
    #+END_SRC

*** DLNA
    #+BEGIN_SRC sh :dir /sudo:10.117.14.185:
      <<pacman>> -S minidlna
    #+END_SRC
   #+BEGIN_SRC sh :dir /sudo:10.117.14.185:
      <<system_ctl>> enable --now minidlna
    #+END_SRC

*** IPsec
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/ipsec.conf
      ca <<username>>
          auto=add
          cacert=ca.crt

      conn kub
          auto=add
          left=<<prefix>>54
          leftid=k.<<domain>>
          leftcert=kub.crt
          leftsubnet=<<prefix>>0/24
          leftfirewall=yes
          leftdns=<<prefix>>1

          rightauth=eap-mschapv2
          eap_identity=%any
          rightsourceip=%dhcp
    #+END_SRC

*** OpenVPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo:10.117.14.185:/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 0
      tls-server
      <pkcs12>
      <<kub_pfx>>
      </pkcs12>
      <dh>
      -----BEGIN DH PARAMETERS-----
      MIIBCAKCAQEAoioJw6aUXmgBDSw6SzbSZww6i7eH0MC+Eba5qGmYJnKn2zI8dBH6
      JZKnAyz9MbD21loI6KjAnOzZkBp7DKle1cACLS229Olycr22rXWPFuhMV15TohDJ
      ArazVXSJGDL9OXhdHei96K3qXofz/3AzXEVxD0unQd5sRlgNGmunofvgWBechdmn
      YQl44SZ0asC8uUY1uiKjVyQzqeNDi3rjJtTobcPdR6Pb8CnS3cfwoWzXMwUexmfJ
      VQSNaDZIeQcwV5MEHs1XViOTiEvT8IHbJojJri0geUSJ+HkX1JTxGIUj4xxKHQ0j
      AFEjqDYFh3q7U6QgFLRWZffVLgxIZVopIwIBAg==
      -----END DH PARAMETERS-----
      </dh>
      user nobody
      group nobody

      mode server

      server 10.255.0.0 255.255.255.0
      push "route <<prefix>>54"
    #+END_SRC

*** SSH
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/ssh/sshd_config
      Protocol 2
      HostKey /etc/ssh/ssh_host_ed25519_key
      HostKey /etc/ssh/ssh_host_rsa_key

      KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
      MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com

      AllowGroups wheel
      PasswordAuthentication no
      ChallengeResponseAuthentication no
      UsePrivilegeSeparation sandbox

      Subsystem sftp /usr/lib/ssh/sftp-server
    #+END_SRC

** ton
*** Mounts
    #+BEGIN_SRC sh
      fallocate -l 2G /swap
      chmod u=rw,go= /swap
      mkswap /swap
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
      LABEL=home /home/<<username>> ntfs-3g noatime,nofail
      LABEL=ESP /boot vfat
      /swap none swap
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/00-bkap.network
      [Match]
      Name = enp4s0

      [Network]
      DNS = 8.8.8.8
      Address = 192.168.0.252/24
      Gateway = 192.168.0.1
      Address = 192.168.1.252/24
      Gateway = 192.168.1.1
      Address = 192.168.4.252/24
      Gateway = 192.168.4.1
      Address = 192.168.5.252/24
      Gateway = 192.168.5.1

      [Route]
      Destination=192.168.1.1
      Source=192.168.1.252
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/dhcp.network
      [Network]
      DHCP=ipv4
    #+END_SRC

*** Pacman
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.conf :tangle-mode 260
    <<pacman_common>>

    [options]
    Architecture = auto

    [multilib]
    Include = /etc/pacman.d/mirrorlist
  #+END_SRC
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.d/mirrorlist
    Server = http://f.archlinuxvn.org/archlinux/$repo/os/$arch
  #+END_SRC

*** OpenVPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo::/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 1
      tls-client
      <pkcs12>
      <<ton_pfx>>
      </pkcs12>

      nobind
      pull

      remote k.<<domain>> 22
      verify-x509-name kub.<<domain>> name
      remote-cert-tls server
      resolv-retry infinite
    #+END_SRC

*** Fonts
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S adobe-source-{sans,serif,code}-pro-fonts adobe-source-han-sans-otc-fonts
    #+END_SRC

    #+BEGIN_SRC xml :tangle ~/.config/fontconfig/fonts.conf :padline no :comments no
      <?xml version='1.0'?>
      <!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
      <fontconfig>
        <match target="font">
          <edit mode="assign" name="rgba">
            <const>none</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hinting">
            <bool>true</bool>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hintstyle">
            <const>hintslight</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="antialias">
            <bool>true</bool>
          </edit>
        </match>
        <dir>~/.fonts</dir>
        <match target="pattern">
          <test qual="any" name="family"><string>Arial</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <match target="pattern">
          <test qual="any" name="family"><string>DejaVu Sans</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <alias>
          <family>sans-serif</family>
          <prefer>
            <family>Linux Biolinum O</family>
          </prefer>
        </alias>
        <alias>
          <family>serif</family>
          <prefer>
            <family>Linux Libertine O</family>
          </prefer>
        </alias>
        <alias>
          <family>monospace</family>
          <prefer>
            <family>Droid Sans Mono</family>
          </prefer>
        </alias>
        <selectfont>
          <rejectfont>
            <glob>/usr/share/fonts/default/Type1/*</glob>
            <pattern>
              <patelt name="scalable">
                <bool>false</bool>
              </patelt>
            </pattern>
          </rejectfont>
        </selectfont>
      </fontconfig>
     #+END_SRC

*** Desktop
    These DBus services are provided by plasma-workspace-units.
    #+BEGIN_SRC sh :dir /sudo::
      rm /usr/share/dbus-1/services/org.kde.{kded5,kglobalaccel,kuiserver,kwalletd5}.service
    #+END_SRC

**** Inside VM
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now systemd-networkd-wait-online sshd
     #+END_SRC
     #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
       //192.168.208.1/home /home/<<username>> cifs credentials=/etc/cifs,uid=1000,gid=1000,file_mode=0600
     #+END_SRC
     On the host side, open 445/tcp to this VM, and run emacs over X with MobaXterm:
     #+BEGIN_SRC conf :tangle bin/emacs.moba
       emacs =  #109#0%192.168.208.128%22%<<username>>%%-1%0%cp -r ~/.gnupg /run/user/1000 && chmod -R 700 /run/user/1000/.gnupg && export GNUPGHOME__EQUAL__/run/user/1000/.gnupg && setxkbmap dvorak && gpg-agent --enable-ssh-support --daemon emacs%%22%%0%0%Interactive shell%h:\.ssh\kub%%0%0%0%0%%1080%%0#MobaFont%10%0%0%0%15%236,236,236%0,0,0%180,180,192%0%-1%0%%xterm%-1%0%0,0,0%54,54,54%255,96,96%255,128,128%96,255,96%128,255,128%255,255,54%255,255,128%96,96,255%128,128,255%255,54,255%255,128,255%54,255,255%128,255,255%236,236,236%255,255,255%80%24%0#0
     #+END_SRC
     Remember to quit emacs before suspending.
***** Megasync
      #+BEGIN_SRC sh :dir /sudo::
       <<pacman>> -S xorg-server-xvfb megasync
      #+END_SRC
      #+BEGIN_SRC conf :tangle ~/.config/systemd/user/megasync.service
       [Unit]
       Description=Headless megasync

       [Service]
       ExecStart=/usr/bin/xvfb-run megasync

       [Install]
       WantedBy=default.target
      #+END_SRC
      #+BEGIN_SRC sh
       <<user_ctl>> enable --now megasync
      #+END_SRC

**** Keyboard
     Use dvorak, swap caps for ctrl
     #+BEGIN_SRC conf :tangle /sudo::/usr/share/kbd/keymaps/caps2ctrl.map
       include "/usr/share/kbd/keymaps/i386/dvorak/dvorak.map.gz"
       keycode 58 = Control
     #+END_SRC
     #+BEGIN_SRC sh :dir /sudo::
       localectl set-keymap caps2ctrl
     #+END_SRC

     Base Japanese IME on dvorak, swap caps for ctrl
     #+BEGIN_SRC conf :tangle keyboard.reg :comments no
       Windows Registry Editor Version 5.00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]
       "Scancode Map"=hex:00,00,00,00,00,00,00,00,02,00,00,00,1d,00,3a,00,00,00,00,00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layouts\00000411]
       "Layout File"="kbddv.dll"
     #+END_SRC
     Tangle registry files as UTF-16LE with BOM
     #+BEGIN_SRC elisp :tangle ~/.emacs
       (add-to-list 'file-coding-system-alist '("\\.reg\\'" . utf-16le-with-signature-dos))
       (add-hook 'org-babel-post-tangle-hook 'strip-initial-newline)
       (defun strip-initial-newline ()
         (when (string-match "^Windows Registry" (buffer-string))
           (join-line 1)))
     #+END_SRC
     Import into registry
     #+BEGIN_SRC sh
       start regedit $PWD/*reg
     #+END_SRC

**** Pointer
     Use evdev for the touchscreen
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Atmel touchscreen"
               MatchProduct "maXTouch"
               Driver "evdev"
       EndSection
     #+END_SRC

     Use natural scrolling on touchpad
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Natural scrolling"
               MatchProduct "TouchPad"
               MatchDriver "libinput"
               Option "NaturalScrolling" "1"
       EndSection
     #+END_SRC

**** Rotation
     #+BEGIN_SRC sh :dir /sudo::
       <<pacman>> -S acpid
     #+END_SRC
     #+BEGIN_SRC text :tangle /sudo::/etc/acpi/events/rotation-button
       event=ibm/hotkey LEN0068:00 00000080 00006020
       action=sudo -u <<username>> DISPLAY=:0 /usr/local/bin/rotate-screen
     #+END_SRC
     #+BEGIN_SRC sh :tangle /sudo::/usr/local/bin/rotate-screen :shebang #!/bin/sh
       case $(xrandr | grep LVDS1 | cut -f 4 -d ' ' | tr -d '(') in
           normal) new="left";;
           left)   new="normal";;
       esac
       xrandr --output LVDS1 --rotate $new

       case $new in
           normal) matrix="1 0 0 0 1 0 0 0 1";;
           left)   matrix="0 -1 1 1 0 0 0 0 1";;
           right)  matrix="0 1 0 -1 0 1 0 0 1";;
           inverted) matrix="-1 0 1 0 -1 1 0 0 1";;
       esac
       for dev in "SynPS/2 Synaptics TouchPad" "TPPS/2 IBM TrackPoint" "Atmel Atmel maXTouch Digitizer"; do
           xinput set-prop "$dev" "Coordinate Transformation Matrix" $matrix
       done
     #+END_SRC
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now acpid
     #+END_SRC

*** Picard
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S picard chromaprint
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/MusicBrainz/Picard.conf
      [setting]
      server_host=musicbrainz.org
      server_port=80

      fingerprinting_system=acoustid
      acoustid_apikey=<<acoustid_key>>
      acoustid_fpcalc=/usr/bin/fpcalc

      save_images_to_tags=true
      save_only_front_images_to_tags=true
      save_images_to_files=false
      ca_provider_use_amazon=true
      ca_provider_use_caa=true
      ca_provider_use_caa_release_group_fallback=true
      ca_provider_use_whitelist=true
      caa_image_size=1
      caa_approved_only=true
      caa_restrict_image_types=true
      analyze_new_files=false
      ignore_file_mbids=false
      quit_confirmation=true
      va_name=Various Artists
      nat_name=
      standardize_artists=true

      windows_compatibility=true
      ascii_filenames=false
      rename_files=true
      move_files=true
      file_naming_format="$if2(%albumartist%,%artist%)/$if($ne(%albumartist%,),%album%/)$if($gt(%totaldiscs%,1),%discnumber%-,)$if($ne(%albumartist%,),$num(%tracknumber%,2) ,)$if(%_multiartist%,%artist% - ,)%title%"
      move_files_to=<<music>>/_new
      move_additional_files=true
      move_additional_files_pattern=*.jpg *.png *.jpeg
      delete_empty_dirs=true

      browser_integration=true
      browser_integration_port=8000
      browser_integration_localhost_only=true

      dont_write_tags=false
      preserve_timestamps=false
      write_id3v1=true
      write_id3v23=true
      id3v23_join_with=/
      id3v2_encoding=utf-16
      remove_ape_from_mp3=true
      remove_id3_from_flac=true
    #+END_SRC
*** mpd
    :PROPERTIES:
    :header-args+: :dir ~
    :END:

    Create playlist
    #+BEGIN_SRC sh
      mpc listall > <<music>>/pq.m3u
    #+END_SRC

    Shuffle and play
    #+BEGIN_SRC sh :results raw
      mpc -q clear && mpc load pq && mpc -q shuffle && mpc play
    #+END_SRC

    Delete currently playing track
    #+BEGIN_SRC sh :eval query
      rm -v <<music>>/"$(mpc -f %file% | head -1)"
    #+END_SRC

*** mpv
    #+BEGIN_SRC conf :tangle ~/.config/mpv/mpv.conf
      sub-auto=fuzzy
      hwdec=auto
      hwdec-codecs=all
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/mpv/input.conf
      q quit_watch_later
      MOUSE_BTN0 cycle pause
      MOUSE_BTN1 show_progress
      MOUSE_BTN2 cycle fullscreen
      z set window-scale 2
      Z set window-scale 1

      ; show_progress
      f show_text "${filename}"
      d cycle audio
      y add volume 1
      i add volume -1
      g add sub-delay  0.1
      h add sub-delay -0.1
      x cycle mute

      k frame_step
      ' seek +10
      a seek -10
      , seek +60
      o seek -60
      . seek +300
      e seek -300

      u cycle fullscreen
    #+END_SRC
* Emacs
  :PROPERTIES:
  :header-args+: :tangle ~/.emacs
  :END:

  OOBE settings:
  #+BEGIN_SRC elisp
    (server-mode t)
    (global-set-key (kbd "C-x C-r")
                    (lambda () (interactive)
                      (revert-buffer :noconfirm t)))
    (defalias 'yes-or-no-p #'y-or-n-p)
    (defalias 'dabbrev-expand #'hippie-expand)
    (setq auto-save-default nil
          calendar-week-start-day 1
          default-input-method "vietnamese-telex"
          inhibit-startup-screen t
          make-backup-files nil
          scroll-preserve-screen-position t
          tramp-default-method "ssh"
          undo-tree-mode-lighter ""
          visible-bell t
          frame-title-format "%b")
    (set-language-environment "UTF-8")
    (setq-default buffer-file-coding-system 'utf-8-unix)
    (setq-default sentence-end-double-space nil)
    (global-set-key (kbd "C-\\") #'toggle-input-method)
    (blink-cursor-mode -1)
    (show-paren-mode t)
    (winner-mode)
  #+END_SRC

  Package management
  #+BEGIN_SRC elisp
    (package-initialize)
    (setq package-archives
          '(("gnu" . "https://elpa.gnu.org/packages/")
            ("marmalade" . "https://marmalade-repo.org/packages/")
            ("melpa" . "http://melpa.org/packages/")))
    (unless (package-installed-p 'use-package)
      (package-refresh-contents)
      (package-install 'use-package))
    (setq use-package-always-ensure t)
    (require 'use-package)
  #+END_SRC

  Color theme
  #+BEGIN_SRC elisp
    (use-package color-theme-sanityinc-solarized
      :config (load-theme 'sanityinc-solarized-light t))
  #+END_SRC

  Font on Windows
  #+BEGIN_SRC elisp
    (when (eq window-system 'w32)
      (if (> window-system-version 5)
          (set-default-font "Consolas-12" :frames t)
        (set-default-font "Lucida Console-10" :frames t)))
  #+END_SRC

** Discovery
   Learn what's available under prefix keys
   #+BEGIN_SRC elisp
     (use-package which-key :ensure
       :diminish ""
       :config (which-key-mode))
   #+END_SRC

** Editing
   Vim-style
   #+BEGIN_SRC elisp
     (use-package evil
       :config
       (evil-mode t)
       (evil-set-initial-state 'special-mode 'emacs)
       (dolist (state '(normal motion))
         (evil-define-key state global-map
           (kbd "<SPC>") #'evil-scroll-down
           (kbd "S-<SPC>") #'evil-scroll-up))
       (dolist (state '(insert motion normal))
         (evil-define-key state global-map
           (kbd "C-t") #'transpose-chars
           (kbd "C-d") #'delete-char
           (kbd "C-k") #'kill-line
           (kbd "C-y") #'evil-paste-before
           (kbd "C-a") #'beginning-of-line (kbd "C-e") #'end-of-line
           (kbd "C-f") #'forward-char   (kbd "C-b") #'backward-char
           (kbd "C-n") #'next-line      (kbd "C-p") #'previous-line
           (kbd "<down>") #'next-line   (kbd "<up>") #'previous-line
           (kbd "j") #'next-line        (kbd "k") #'previous-line
           (kbd "C-v") #'evil-scroll-down (kbd "M-v") #'evil-scroll-up
           (kbd "C-r") #'isearch-backward))
       (evil-define-key 'insert global-map
         "j" #'self-insert-command "k" #'self-insert-command)
       (evil-define-key 'motion help-mode-map
         (kbd "<tab>") #'forward-button))
   #+END_SRC

   Aggressive indent
   #+BEGIN_SRC elisp
     (use-package aggressive-indent
       :diminish ""
       :config (global-aggressive-indent-mode))
   #+END_SRC

   Switch window with ace
   #+BEGIN_SRC elisp
     (use-package ace-window
       :config (ace-window-display-mode 1)
       :bind ("C-x o" . ace-window))
   #+END_SRC

   Do things with helm:
   #+BEGIN_SRC elisp
     (use-package helm
       :config
       (helm-mode 1)
       (define-key shell-mode-map (kbd "M-r") #'helm-comint-input-ring)
       :diminish helm-mode
       :bind (("C-h SPC" . helm-all-mark-rings)
              ("C-x b" . helm-mini)
              ("C-x C-b" . helm-buffers-list)
              ("C-x C-f" . helm-find-files)
              ("C-c g" . helm-do-grep)
              ("C-s" . helm-occur)
              ("M-x" . helm-M-x)))
     (require 'helm-config)
     (use-package evil
       :config (dolist (state '(insert motion normal))
                 (evil-define-key state global-map
                   (kbd "M-y") #'helm-show-kill-ring)))
   #+END_SRC

** Org
   #+BEGIN_SRC elisp
     (add-hook 'org-mode-hook
               '(lambda ()
                  (add-hook 'before-save-hook 'org-align-all-tags
                            :local t)))
     (org-babel-do-load-languages 'org-babel-load-languages
                                  '((sh . t)))
     (setq org-src-fontify-natively t)
     (setq org-export-initial-scope 'subtree)
     (setq org-latex-pdf-process '("xelatex -interaction nonestopmode -output-directory %o %f"))
     (setq org-html-doctype "html5"
           org-html-html5-fancy t
           org-html-head "<link rel=stylesheet type=text/css href=blog.css>"
           org-html-use-unicode-chars t
           org-html-head-include-default-style nil
           org-html-head-include-scripts nil
           org-html-postamble nil)
   #+END_SRC

*** Crypt
    #+BEGIN_SRC elisp
      (require 'org-crypt)
      (add-hook 'org-mode-hook
                '(lambda ()
                   (add-hook 'before-save-hook 'org-encrypt-entries
                             :local t)))
      (setq org-tags-exclude-from-inheritance '("crypt")
            org-crypt-key user-mail-address)
    #+END_SRC

    Make it possible to tangle encrypted block
    #+BEGIN_SRC elisp
      (remove-hook 'org-babel-pre-tangle-hook #'save-buffer)
    #+END_SRC

** Doc-View
   #+BEGIN_SRC elisp
     (eval-after-load 'doc-view
       '(bind-key (kbd "<mouse-1>") #'doc-view-scroll-up-or-next-page doc-view-mode-map))
     (setq doc-view-resolution 300
           doc-view-cache-directory (expand-file-name "~/.emacs.d/doc-view"))
     (use-package evil
       :config (add-hook 'view-mode-hook #'evil-emacs-state))
   #+END_SRC

** Dired
   #+BEGIN_SRC elisp
     (use-package dired+
       :config
       (require 'dired+)
       (global-dired-hide-details-mode -1)
       (defun dired-open ()
         (interactive)
         (dired-do-shell-command "xdg-open &" :file-list (dired-get-marked-files)))
       (define-key dired-mode-map (kbd "RET") #'dired-open)
       (define-key dired-mode-map (kbd "<mouse-2>") #'dired-open)
       (setq dired-recursive-copies 'always
             dired-recursive-deletes 'always
             dired-listing-switches "-alh"
             dired-guess-shell-alist-user
             '(("\\.cb.\\'" "okular")
               ("." "xdg-open;"))))
   #+END_SRC

** Eshell
   Put eshell on a convenient binding
   #+BEGIN_SRC elisp
     (global-set-key (kbd "C-x M-m") #'eshell)
   #+END_SRC

   I like the prompt to be on a separate line.
   #+BEGIN_SRC elisp
     (setq eshell-prompt-function
           '(lambda ()
              (concat (eshell/pwd) "\n"
                      (int-to-string eshell-last-command-status) " % "))
           eshell-prompt-regexp "^[[:digit:]]\\{1,3\\} % ")
   #+END_SRC

   These are terminal-manipulating commands
   #+BEGIN_SRC elisp
     (eval-after-load 'em-term
       '(progn
          (dolist (prog '("atop" "systemd-cgls" "journalctl"))
            (add-to-list 'eshell-visual-commands prog))
          (add-to-list 'eshell-visual-options '("ssh" "-t"))))
   #+END_SRC

   Profile:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/profile :no-expand
     addpath ~/Copy/bin
   #+END_SRC

   Aliases:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias vim find-file $1
     alias j journalctl -afb $*
     alias sc <<system_ctl>> $*
     alias uc <<user_ctl>> $*
     alias ytdl <<ytdl>> -a /home/<<username>>/q.txt
     alias fr free -h
   #+END_SRC

* Ansible
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ansible
  #+END_SRC

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package yaml-mode)
         (use-package ansible-doc
           :config (add-hook 'yaml-mode-hook #'ansible-doc-mode))))
  #+END_SRC

** Inventory
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible_inventory
   :END:

   Here are the hosts and their variables
   #+BEGIN_SRC conf
     [arch]
     kub ansible_python_interpreter=/usr/bin/python2
     ton ansible_python_interpreter=/usr/bin/python2 ansible_connection=local

     [all:vars]
     user=<<username>>
     home=/home/<<username>>
     h=<<storage>>
     conf="{{h}}/config/{{ansible_hostname}}"
     locale=en_US
     prefix=<<prefix>>
   #+END_SRC

** Config
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible.cfg
   :END:

   Keep the inventory here
   #+BEGIN_SRC conf
     [defaults]
     inventory = ~/.ansible_inventory
   #+END_SRC

   For some reason ControlMaster isn't working
   #+BEGIN_SRC conf
     [ssh_connection]
     ssh_args=-o ControlMaster=no
   #+END_SRC

* Firefox
  :PROPERTIES:
  :header-args+: :tangle ~/.pentadactylrc
  :END:
  This file is in vimrc syntax

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(use-package vimrc-mode))
  #+END_SRC

  Use DuckDuckGo:

  #+BEGIN_SRC vimrc
    silent bmark -keyword ddg -t DDG https://duckduckgo.com/?kn=1&kp=-1&kae=c&q=%s
    set defsearch=ddg
  #+END_SRC

  Use backspace to go back:
  #+BEGIN_SRC vimrc
    set! browser.backspace_action=0
  #+END_SRC

  Don't let middle mouse paste:
  #+BEGIN_SRC vimrc
    set! middlemouse.contentLoadURL=false
  #+END_SRC

  Restore C-j for Downloads:
  #+BEGIN_SRC vimrc
    map <C-j> -ex dialog downloads
  #+END_SRC

  Bind stop to an easy binding:
  #+BEGIN_SRC vimrc
    map s <C-c>
  #+END_SRC

  Make scrolling easier:
  #+BEGIN_SRC vimrc
    map <space> <C-d>
    map <S-space> <C-u>
  #+END_SRC

  Pin tab:
  #+BEGIN_SRC vimrc
    map <A-p> -ex pintab!
  #+END_SRC

  Move to first or last:
  #+BEGIN_SRC vimrc
    map <A-!> -ex tabm 1
    map <A-$> -ex tabm $
  #+END_SRC

  Fast switching:
  #+BEGIN_SRC vimrc
    map -m normal,insert <F1> <C-^>
  #+END_SRC

  Don't raise these openings:
  #+BEGIN_SRC vimrc
    set activate-=diverted,links,tabopen,paste
  #+END_SRC

  Open help in a new tab
  #+BEGIN_SRC vimrc
    set newtab=help
  #+END_SRC

  Keep hint keys under left fingers:
  #+BEGIN_SRC vimrc
    set hintkeys=12345
  #+END_SRC

  Make hint text readable
  #+BEGIN_SRC vimrc
    highlight Hint -append font-size: 14px !important
  #+END_SRC

  Unzoom image:
  #+BEGIN_SRC vimrc
    map <A-t> -js content.document.toggleImageSize()
  #+END_SRC

  Replace the status line with navigation bar, and show link in the commandline:
  #+BEGIN_SRC vimrc
    set guioptions=bTrc
    set showstatuslinks=command
  #+END_SRC

  Scroll by one line:
  #+BEGIN_SRC vimrc
    set scrollsteps=1
  #+END_SRC

  Show feeds first in pageinfo:
  #+BEGIN_SRC vimrc
    set pageinfo=fgmse
  #+END_SRC

  Use visual bell:
  #+BEGIN_SRC vimrc
    set visualbell
  #+END_SRC

  Bookmarks and preferences:
  #+BEGIN_SRC vimrc
    map <C-S-s> -ex bmark -keyword ac -t config about:config
    \ bmark -keyword bgp -t BGP http://bgp.he.net/search?search[search]=%s
    \ bmark -keyword v -t valsi http://vlasisku.lojban.org/?query=%s
    \ bmark -keyword c -t camxes http://camxes.lojban.org/?text=%s
    \ bmark -keyword yb -t youtube https://youtube.com/watch?v=%s
    \ bmark -keyword cw -t 'CrawlWiki' http://crawl.chaosforge.org/index.php?title=Special%3ASearch&search=%s
    \ bmark -keyword bb -t burnbit http://burnbit.com/burn?file=%s
    \ bmark -keyword b -t btdigg https://btdigg.org/search?q=%s&order=0&p=0
    \ bmark -keyword ba -t btdigg https://btdigg.org/search?q=%s&order=2&p=0
    \ bmark -keyword m -t zing http://mp3.zing.vn/tim-kiem/bai-hat.html?q=%s
    \ bmark -keyword ma -t artist http://musicbrainz.org/search?advanced=1&type=artist&tport=8000&query=%s
    \ bmark -keyword mg -t group http://musicbrainz.org/search?advanced=1&type=release_group&tport=8000&query=%s
    \ bmark -keyword mr -t recording http://musicbrainz.org/search?advanced=1&type=recording&tport=8000&query=%s
    \ bmark -keyword gm -t gmail https://mail.google.com/mail/#spam
    \ set! accessibility.browsewithcaret_shortcut.enabled=false
    \ set! browser.newtabpage.enabled=false
    \ set! browser.privatebrowsing.dont_prompt_on_enter=true
    \ set! browser.sessionstore.restore_pinned_tabs_on_demand=true
    \ set! browser.shell.checkDefaultBrowser=false
    \ set! browser.startup.homepage=about:blank
    \ set! browser.startup.page=3
    \ set! general.warnOnAboutConfig=false
    \ set! security.OCSP.enabled=0
    \ set! security.warn_viewing_mixed=false
    \ set! layout.spellcheckDefault=0
    \ set! middlemouse.paste=true
    \ set! ui.key.menuAccessKey=0
    \ set! browser.anchor_color="#6c71c4"
    \ set! browser.display.background_color="#fdf6e3"
    \ set! browser.display.foreground_color="#657b83"
    \ set! browser.display.use_system_colors=false
    \ set! font.default.x-western="sans-serif"
    \ if /NT 6/.test(window.navigator.oscpu)
    \     set! font.name.monospace.x-western=Consolas
    \ fi
    \ set! extensions.checkCompatibility.nightly=false
    \ set! extensions.https_everywhere._observatory.alt_roots=true
    \ set! extensions.https_everywhere._observatory.enabled=true
    \ set! extensions.https_everywhere._observatory.priv_dns=true
    \ set! plugins.hide_infobar_for_missing_plugin=true
    \ set! browser.download.manager.alertOnEXEOpen=false
    \ set! browser.download.manager.scanWhenDone=false
    \ set! browser.search.context.loadInBackground=true
    \ set! intl.charset.default=UTF-8
    \ set! network.http.pipelining=true
    \ set! network.http.pipelining.aggressive=true
    \ set! network.http.pipelining.ssl=true
    \ set! network.protocol-handler.expose.magnet=false
    \ set! network.proxy.socks=kub.<<domain>>
    \ set! network.proxy.socks_port=9050
    \ set! network.proxy.socks_remote_dns=true
    \ set! toolkit.telemetry.enabled=true
    \ js services.permissions.add(services.io.newURI("http:depositfiles.com",null,null), 'image', services.permissions.DENY_ACTION)
    \ js services.loginManager.setLoginSavingEnabled("accounts.google.com", false)
  #+END_SRC

  Strip tracker from location, thanks to [[https://userscripts.org/scripts/show/93825][Bruno Barão]] and [[https://github.com/5digits/dactyl/commit/7a1ffa5b555399c5d0925ad599e2640070bd128d][Kris Maglione]].
  #+BEGIN_SRC vimrc
    autocmd DOMLoad (utm|wa)_ -js win.history.replaceState("Remove trackers", '', doc.location.href.replace(/&?(utm|wa)_[^&]+/g,'').replace(/\?$/,''))
  #+END_SRC

  Facebook
  #+BEGIN_SRC vimrc
    bmark -keyword fb -t facebook https://fb.me/%s
    map <A-s> -js dactyl.open("https://www.facebook.com/sharer/sharer.php?u=" + content.location)
  #+END_SRC

  Inoreader
  #+BEGIN_SRC vimrc
    map <A-f> -js dactyl.open("https://www.inoreader.com/?add_feed=" + content.location)
    map <A-w> -js dactyl.open("https://www.inoreader.com/bookmarklet/save_web_page/" + encodeURIComponent(content.location))
    js services.permissions.add(services.io.newURI("http:inoreader.com",null,null), 'popup', services.permissions.ALLOW_ACTION)
    set passkeys+=inoreader.com:jkgafswhq
  #+END_SRC
  Get videos from starred items
  #+BEGIN_SRC sh :tangle ~/.bash_login
    function videos() {
        <<ytdl>> --ignore-errors $(wget 'https://www.inoreader.com/reader/api/0/stream/contents/user%2F-%2Fstate%2Fcom.google%2Fstarred?n=1000&r=o' \
                                        --header 'AppId: 1000001238' --header 'AppKey: <<inoreader_key>>' \
                                        --header 'Authorization: GoogleLogin auth=<<inoreader_auth>>' \
                                          | grep -o 'href":"[^"]*' | uniq | sed 's/href":"//' | tr -d '\\' | grep -vE 'reader/api|rapidgator|escapistmag|muspy' ) \
            | grep -B1 100%
    }
  #+END_SRC

  ownCloud News
  #+BEGIN_SRC vimrc
    set passkeys+=<<domain>>/owncloud/index.php/apps/news/:jkrol
    js services.permissions.add(services.io.newURI("https:<<domain>>",null,null), 'popup', services.permissions.ALLOW_ACTION)
  #+END_SRC

  Site keyboard shortcuts:
  #+BEGIN_SRC vimrc
    set passkeys+=tumblr.com:jk
    set passkeys+=mail.google.com/mail/:'#!ms+-/? jknpux'
    set passkeys+=google.com/contacts/:'#jkoux,.'
  #+END_SRC

  Switch to reader mode:
  #+BEGIN_SRC vimrc
    map <A-r> -js dactyl.open("about:reader?url=" + content.location)
  #+END_SRC

* Windows
** Portables
   #+BEGIN_SRC bat :tangle bin/pe.cmd
     cd /d %~dp0\Tools
     start /b procexp /e /accepteula
   #+END_SRC
   #+BEGIN_SRC bat :tangle bin/pi.cmd
     cd /d %~dp0\picard
     start /b picard
   #+END_SRC
   #+BEGIN_SRC bat :tangle bin/fx.cmd
     cd /d %~dp0\fx
     start /b firefox
   #+END_SRC
   #+BEGIN_SRC bat :tangle bin/tv.cmd
     cd /d %~dp0\teamviewer
     start /b teamviewer
   #+END_SRC
   #+BEGIN_SRC bat :tangle bin/kp.cmd
     cd /d %~dp0\keepass
     start /b keepass
   #+END_SRC
   #+BEGIN_SRC bat :tangle bin/ovpn.cmd
     cd /d %~dp0
     elevate openvpn --config hdhoang.ovpn
   #+END_SRC

* Secrets							      :crypt:
-----BEGIN PGP MESSAGE-----
Version: GnuPG v2

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
=qNjz
-----END PGP MESSAGE-----
