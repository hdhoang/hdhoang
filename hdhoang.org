#+STARTUP: showall
#+PROPERTY: header-args+ :cache yes
#+PROPERTY: header-args+ :comments org
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :noweb yes
#+PROPERTY: header-args+ :results silent
#+PROPERTY: header-args+ :tangle-mode 384
#+PROPERTY: header-args:text+ :eval no
* Hoàng Đức Hiếu
#+EMAIL: 1988 / +84-166-241-9526 / cv@hdhoang.space
#+SELECT_TAGS: vi
#+OPTIONS: toc:nil date:nil arch:nil num:nil author:nil email:t tags:nil
#+LATEX_CLASS_OPTIONS: [twocolumn]
#+LATEX_HEADER: \usepackage{libertine}
#+LATEX_HEADER: \usepackage{xcolor-solarized, sectsty}
#+LATEX_HEADER: \usepackage[pagecolor={solarized-base3}]{pagecolor}
#+LATEX: \sectionfont{\color{solarized-blue}}
#+LATEX: \subsectionfont{\color{solarized-cyan}}
#+LATEX: \vspace*{-197pt}\includegraphics{Pictures/mug/img078}
#+LATEX_HEADER: \usepackage{titling}
#+LATEX_HEADER: \pretitle{\begin{flushright}\LARGE}
#+LATEX_HEADER: \posttitle{\par\end{flushright}}
#+LATEX_HEADER: \preauthor{\begin{flushright}}
#+LATEX_HEADER: \postauthor{\end{flushright}}
#+LATEX_HEADER: \pagenumbering{gobble}
** Education								 :en:
   - 2014 - now :: Studying System Administration and software testing
                   at Bachkhoa-Aptech (graduating 2016H2)
   - 2013 - 2014 :: Finished K12 and completed accounting course at
                    Quang Trung private school
   - 2007 - 2012 :: Self-learned various topics
     - Programming languages (Python, shells, HTML5, Emacs Lisp, Rust)
     - History of free software
     - Hanoi GNU/Linux user community
     - Wing-chun martial art
     - The constructed logical language Lojban
   - 2006 - 2007 :: Freshman in computer programming at Monash
                    College, Australia (earned Distinction and High
                    Distinction in most subjects)
   - 2003 - 2006 :: Chu Van An Highschool, majoring in English
#+LATEX: \newpage
** Tiểu sử								 :vi:
   - 2014 - nay :: học quản trị mạng và kiểm thử phần mềm tại
                   Bachkhoa-APTECH (dự kiến tốt nghiệp năm 2016)
#+LATEX: \newpage
** Qualifications and skills						 :en:
*** IT skills
   - In-depth GNU/Linux usage and administration, experienced in
     self-hosting web sites (ownCloud on Debian Apache, ArchLinux nginx)
   - Comprehensive network understanding (routing, firewall, encryption)
   - Using version control systems, especially git
   - Contributing to free software projects ([[https://www.openhub.net/accounts/hdhoang/positions][hdhoang on OpenHub]])
   - Office equipment troubleshooting
*** Language skills
   - Fluency in English (990 in TOEIC, 2015)
   - Elementary Japanese (N4 equivalent)
*** Others
   - Self-teaching discipline
   - Strong interest in learning new topics
** Kĩ năng								 :vi:
*** Kĩ năng IT
     - Sử dụng và quản trị các hệ thống GNU/Linux chuyên sâu, tự quản
       trị dịch vụ web (owncloud, Debian Apache, ArchLinux nginx)
     - Hiểu biết rõ hệ thống mạng (định tuyến, tường lửa)
     - Sử dụng hệ thống quản lí phiên bản, đặc biệt là git
     - Đóng góp vào các dự án phần mềm tự do ([[https://www.openhub.net/accounts/hdhoang][hdhoang trên OpenHub]])
     - Xử lý vấn đề các thiết bị văn phòng
*** Kĩ năng ngôn ngữ
     - Tiếng Anh thuần thục (TOEIC 990, 2015)
     - Tiếng Nhật cơ bản (tương đương N4)
** Interests								 :en:
   - Exploring science, history, and natural subjects
   - Science-fiction novels, rational fanfictions
   - Electric guitar riffs
   - Frequent blood donor until no longer eligible
** Sở thích								 :vi:
    - Khám phá các chủ đề khoa học, lịch sử, tự nhiên
    - Tiểu thuyết khoa học viễn tưởng, ???
    - Nghe solo guitar điện
    - Thường xuyên hiến máu cho đến khi hết khả năng

* Places and names
  #+BEGIN_SRC html :tangle ~/Public/index.html :tangle-mode 388
    <!doctype html>
    <meta charset=utf-8>

    <link rel="openid2.provider"
          href="https://www.google.com/accounts/o8/ud?source=profiles" >
    <link rel="openid2.local_id"
          href="https://www.google.com/profiles/110711359835920217300" >

    <!-- <title>OpenID endpoint (myopenid)</title> -->
    <!-- <link rel="openid.server" href="http://www.myopenid.com/server" /> -->
    <!-- <link rel="openid.delegate" href="http://lazni.myopenid.com/" /> -->

    <!-- <title>OpenID endpoint (ownopenidserver)</title> -->
    <!-- <link rel="openid.server" -->
    <!--       href="https://id.<<domain>>/server.py/endpoint"> -->

    <!-- <title>OpenID endpoint (poit)</title> -->
    <!-- <link rel="openid2.provider" -->
    <!--       href="https://id.<<domain>>/poit.py"> -->

    <!-- <title>OpenID endpoint (startssl)</title> -->
    <!-- <link rel="openid2.provider openid.server" -->
    <!--      href="https://www.startssl.com/id.ssl" /> -->
    <!-- <link rel="openid2.local_id openid.delegate" -->
    <!--      href="https://<<username>>.startssl.com/" /> -->

    <p>Elsewhere on the net:
      <dl>
        <dt><<username>><dd><ul>
                <li><a rel=me href=https://telegram.me/<<username>>>Telegram</a></li>
                <li><a rel=me href=https://www.openhub.net/accounts/<<username>>>OpenHub</a></li>
                <li><a rel=me href=https://gitlab.com/u/<<username>>>Gitlab</a></li>
                <li><a rel=me href=https://github.com/<<username>>?tab=activity>Github</a></li>
                <li><a rel=me href=http://www.last.fm/user/<<username>>>Last.fm</a></li>
                <li><a rel=me href=https://facebook.com/hdh000/about>Facebook</a></li>
            </ul></dd>
        <dt>lasigmaz<dd><ul>
              <li><a rel=me href=https://twitter.com/lasigmaz>Twitter</a></li>
              <li><a rel=me href=https://steamcommunity.com/id/lasigmaz>Steam</a></li>
            </ul></dd>
    </p>

    <p xmlns:dct="http://purl.org/dc/terms/" xmlns:vcard="http://www.w3.org/2001/vcard-rdf/3.0#">
      <a rel="license"
         href="https://creativecommons.org/publicdomain/zero/1.0/">
        <img src="https://i.creativecommons.org/p/zero/1.0/88x31.png" style="border-style: none;" alt="CC0" />
      </a>
      <br />
      To the extent possible under law,
      <a rel="dct:publisher"
         href="https://<<domain>>">
        <span property="dct:title">Hoàng Đức Hiếu</span></a>
      has waived all copyright and related or neighboring rights to
      this work.
    This work is published from:
    <span property="vcard:Country" datatype="dct:ISO3166"
          content="VN" about="https://<<domain>>">
      Vietnam</span>.
    </p>

    <p>
    <a href=vanity-irc.html>Showing a custom hostname to Freenode</a>
  #+END_SRC

  #+NAME: username
  #+BEGIN_SRC text
    hdhoang
  #+END_SRC

  #+NAME: domain
  #+BEGIN_SRC text
    <<username>>.space
  #+END_SRC

  #+BEGIN_SRC emacs-lisp :tangle ~/.emacs
    (setq user-mail-address "<<username>>@<<domain>>")
  #+END_SRC

  #+NAME: storage
  #+BEGIN_SRC text
    /home/<<username>>/sync
  #+END_SRC

  #+NAME: videos
  #+BEGIN_SRC text
    /h/Public/Videos
  #+END_SRC

  #+NAME: prefix
  #+BEGIN_SRC text
    10.117.14.
  #+END_SRC

  #+NAME: prefix6
  #+BEGIN_SRC text
    2001:470:36:62a::
  #+END_SRC

  #+NAME: system_ctl
  #+BEGIN_SRC text
    systemctl --system --no-pager
  #+END_SRC

  #+NAME: user_ctl
  #+BEGIN_SRC text
    systemctl --user --no-pager
  #+END_SRC

  #+NAME: pacman
  #+BEGIN_SRC text
    yaourt --noconfirm --needed
  #+END_SRC

  #+NAME: ytdl
  #+BEGIN_SRC text
    youtube-dl --no-mtime --format "[height <=? 480]" --output <<videos>>/"%(uploader)s %(upload_date)s %(title)s@%(id)s.%(ext)s"
  #+END_SRC

* Blog
** Vanity plate on IRC
   :PROPERTIES:
   :EXPORT_FILE_NAME: ~/Public/vanity-irc
   :END:
*** Ingredients:
    - An IPv6 block whose PTR you can delegate (I use Hurricane Electric's [[https://tunnelbroker.net][tunnelbroker service]])
    - A hostname whose AAAA you can change (I'm using a full domain, hosted on [[https://cloudflare.com][CloudFlare]], but it should works [[https://freedns.afraid.org][with subdomains]])
    - I'm using a Debian machine to connect to Freenode
*** Recipes:
    1. Request an IPv6 tunnel with HE
    2. Delegate its rDNS to [[https://dns.he.net][dns.he.net]]
    3. Match forward and reverse DNS between an address and your hostname:
       #+BEGIN_SRC sh :results replace
         bash -c 'diff <(nslookup test-plate.hdhoang.space.) <(nslookup 2001:470:36:62a::cccc)'
       #+END_SRC

       #+RESULTS[b43b6d2d898df8156aa60d0405a8b2f68660f12d]:

       - Choose an address, point it to your hostname
       - Add the address to the hostname's AAAA records
    6. Connect to Freenode with that address as the source, for example:
       #+BEGIN_SRC sh
         for fn in $(dig +short -t aaaa chat.freenode.net); do
             ip -6 route add $fn src $address dev $tunnel_interface;
         done;
       #+END_SRC
       or
       #+BEGIN_SRC sh
         ip -6 route add default src $address dev $tunnel_interface
       #+END_SRC

* OpenVPN
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S openvpn
  #+END_SRC
  #+NAME: openvpn_common
  #+BEGIN_SRC conf
    dev tun
    topology subnet
    persist-key
    persist-tun
    keepalive 10 30
    tls-version-min 1.2
    tls-cipher TLS-DHE-RSA-WITH-AES-128-CBC-SHA
    <tls-auth>
    <<ta_key>>
    </tls-auth>
    <ca>
    -----BEGIN CERTIFICATE-----
    MIIEYTCCA0mgAwIBAgIJAPxrcItU3yz8MA0GCSqGSIb3DQEBCwUAMH0xCzAJBgNV
    BAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFOb2kxDTALBgNVBAoTBHph
    aGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3phaGUubWUxHjAcBgkqhkiG
    9w0BCQEWD2hkaG9hbmdAemFoZS5tZTAeFw0xNTA5MjYxMTM0NTRaFw0yNTA5MjMx
    MTM0NTRaMH0xCzAJBgNVBAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFO
    b2kxDTALBgNVBAoTBHphaGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3ph
    aGUubWUxHjAcBgkqhkiG9w0BCQEWD2hkaG9hbmdAemFoZS5tZTCCASIwDQYJKoZI
    hvcNAQEBBQADggEPADCCAQoCggEBANXOfdISWeotIr3neKpj6IGBlCLMEBNtMB1r
    bTIgkxe9tnNd4jBufq6duLK91ioqcJiAxMLRovYtaRTOpQit5/PnAm2Iwu3u2mGX
    EftWEBSVt437NMVA6L2Jemv1lp81vmzJIODgPQ9elrNteQ3ccAMCpuj/l6PhGeFq
    JvK+dNIJcm2+xM15S6ESwjsZxwijiT3TMJAjXJPC5R3gpULoTHrphPGrS/0RIq9c
    Bd/+4Q7k1MguPK2XSKHiJnUIkQJ/m/XGT2iXVEzhOsHZ8vlaNq1xBzTko10nEb7I
    sOQjuH4GCZMeoYnF3egg534fg+BYPAecuKglqdIpnm4+syJsrR0CAwEAAaOB4zCB
    4DAdBgNVHQ4EFgQUsDCM7/aJ6AjPVQPEbdDTiTa9WIswgbAGA1UdIwSBqDCBpYAU
    sDCM7/aJ6AjPVQPEbdDTiTa9WIuhgYGkfzB9MQswCQYDVQQGEwJWTjELMAkGA1UE
    CBMCSE4xDjAMBgNVBAcTBUhhTm9pMQ0wCwYDVQQKEwR6YWhlMRAwDgYDVQQDEwd6
    YWhlIENBMRAwDgYDVQQpEwd6YWhlLm1lMR4wHAYJKoZIhvcNAQkBFg9oZGhvYW5n
    QHphaGUubWWCCQD8a3CLVN8s/DAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUA
    A4IBAQAKkiDOWmwu1D+qbCSYaSxiMfJ70FyA/o+AuCDeaGxKdFLZ2JQgYK/az3y8
    tGQKBc6AdUY7BoN1Ab/6TOz+hWvmyNOOvq2AMgt2bHHA+JquRZMdgw59OtbB2BjC
    vBs2cxRJWdmv8aSltcqVpm2HNHy3mzcq8i0CdFluxDV+zQmvhGVypAipYTlhdi0l
    KLJlB+3fqS5GQB0wPmkV2N6WJdm0NfoTbBOCXwVb4ChyrgryQaOQi5nu8wO9tzeO
    kK/jQJRFKpdwBYqAe0Q/JP95pVjctyiVFg97ppvQ557QFcY1pHapAwhyBmxYiLak
    W4pz42IduC2pnZ3ut4C7UzpeDMRr
    -----END CERTIFICATE-----
    </ca>
  #+END_SRC

* SSH
  :PROPERTIES:
  :header-args+: :tangle ~/.ssh/config
  :END:

  SSH encryption settings by https://stribika.github.io/2015/01/04/secure-secure-shell.html

  #+BEGIN_SRC conf
    Host *
    KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
    Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com,hmac-sha1
  #+END_SRC

  Machines
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    <<prefix>>1 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBL5T08oNKjMm7yWA0zqqqSwl6Vn0nlpoAlpP9USh0NewyfVO/xOGgkUWIlUU8p85Z3zK9YY3pl0zfQQrQHvp88Y=
    <<prefix>>185 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBMCCrxVyoz4ekNh2zAbr2JzvJdojMMoHYnbo20Qjn3sW+P7FUuuiknzbX0aX81BZWdKFwspNLJAXHLoiS8zy8Wc=
  #+END_SRC
  #+BEGIN_SRC conf
    Host <<prefix>>1
    User root
    IdentityFile ~/.ssh/kub
  #+END_SRC
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'tramp
      '(add-to-list 'tramp-default-method-alist '("vorme" nil "scp")))
  #+END_SRC

  #+BEGIN_SRC conf
    Host <<prefix>>185
    User <<username>>
    IdentityFile ~/.ssh/kub
  #+END_SRC
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'tramp
      '(add-to-list 'tramp-default-proxies-alist '("<<prefix>>185" "root" "/ssh:<<prefix>>185:")))
  #+END_SRC

* KDE
** kwin
   :PROPERTIES:
   :header-args+: :tangle ~/.config/kwinrulesrc
   :END:

   #+BEGIN_SRC conf
     [1]
     Description=Window settings for firefox
     shortcut=F5
     shortcutrule=2
     windowrole=browser
     windowrolematch=1
     wmclass=navigator firefox
     wmclasscomplete=true
     wmclassmatch=1
   #+END_SRC

   Put emacs on F4
   #+BEGIN_SRC conf
     [2]
     Description=Application settings for emacs
     shortcut=F4
     shortcutrule=2
     wmclass=emacs
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   Put konsole on F6
   #+BEGIN_SRC conf
     [3]
     Description=Application settings for konsole
     shortcut=F6
     shortcutrule=2
     wmclass=konsole
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   #+BEGIN_SRC conf
     [4]
     Description=No border on anything
     noborder=true
     noborderrule=2
   #+END_SRC

   #+BEGIN_SRC conf
     [General]
     count=4
   #+END_SRC

* Git
  #+BEGIN_SRC conf :tangle .git/config
    [core]
            repositoryformatversion = 0
            filemode = true
            bare = false
            logallrefupdates = true
    [remote "origin"]
            url = https://gitlab.com/<<username>>/<<username>>
            pushUrl = gitlab.com:<<username>>/<<username>>
            pushUrl = github.com:<<username>>/<<username>>
            pushUrl = bitbucket.org:<<username>>/<<username>>
            fetch = +refs/heads/*:refs/remotes/origin/*
    [branch "master"]
            remote = origin
            merge = refs/heads/master
  #+END_SRC

  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S git
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [user]
    name = Hoàng Đức Hiếu
    email = <<username>>@<<domain>>
    [color]
    ui = auto
    [core]
    eol = lf
    whitespace = trailing-space,space-before-tab
    [alias]
    ml = log --reverse --topo-order ORIG_HEAD..
    [merge]
    conflictstyle = diff3
    [push]
    default = simple
    [pull]
    rebase = true
    [rebase]
    stat = true
  #+END_SRC

  Code hosting sites:
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
    gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
  #+END_SRC
  #+BEGIN_SRC conf :tangle ~/.ssh/config
    Host gitlab.com github.com bitbucket.org
    User git
    IdentityFile ~/.ssh/git
    Host git.kde.org
    User git
    IdentityFile ~/.ssh/kde
    Host heroku.com
    IdentityFile ~/.ssh/heroku
  #+END_SRC

  Magit is awesome.
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package magit
           :bind ("C-x g" . magit-status)
           :config
           (setq magit-save-repository-buffers 'dontask
                 magit-push-always-verify nil))))
  #+END_SRC

* Crawl
  #+BEGIN_SRC conf :tangle ~/.crawlrc
    tile_full_screen = false
    autopickup_exceptions += <tomahawk, <throwing net, <javelin, <rock, <immol
    autopickup_exceptions += <misc, <ego, <artefact, <mutagenic
  #+END_SRC

* ArchLinux
  Pacman config
  #+NAME: pacman_common
  #+BEGIN_SRC conf
    [options]
    VerbosePkgLists
    UseSyslog
    CheckSpace
    HoldPkg = pacman glibc
    SigLevel = Required DatabaseOptional
    LocalFileSigLevel = Optional

    [core]
    Include = /etc/pacman.d/mirrorlist
    [extra]
    Include = /etc/pacman.d/mirrorlist
    [community]
    Include = /etc/pacman.d/mirrorlist
    [blackarch]
    Server = http://f.archlinuxvn.org/$repo/$repo/os/$arch
  #+END_SRC

  Refresh database
  #+BEGIN_SRC sh :dir /sudo::
    dirmngr --daemon
    pacman-key -r 7533BAFE69A25079
    pacman-key --lsign 7533BAFE69A25079
    <<pacman>> -S -y
  #+END_SRC

  AUR helper
  #+BEGIN_SRC yaml :tangle ~/Copy/bin/aur :shebang #!/bin/ansible-playbook
    - hosts: arch
      gather_facts: no
      vars:
        store: /tmp/aur
      vars_prompt:
        - name: package
          private: no
      tasks:
        - file: state=directory path={{store}}
        - get_url: url=https://aur4.archlinux.org/cgit/aur.git/snapshot/{{package}}.tar.gz dest={{store}}/
        - unarchive: copy=no src={{store}}/{{package}}.tar.gz dest={{store}}
        - command: nice makepkg --noconfirm --install --force --syncdeps chdir={{store}}/{{package}}
  #+END_SRC

  Yaourt config
  #+BEGIN_SRC conf :tangle ~/.yaourtrc
    AURUPGRADE=1
    EXPORT=1
    EXPORTDIR=~
    BUILD_NOCONFIRM=1
    EDITFILES=0
  #+END_SRC

  Base utils
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S haveged p7zip parallel pkgfile yaourt
    <<system_ctl>> enable --now haveged
  #+END_SRC

  #+BEGIN_SRC sh
    pkgfile -u
  #+END_SRC

  Dev-env:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S base-devel rust android-tools
  #+END_SRC

  Monitoring:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ethtool lm_sensors net-tools psmisc \
        procps-ng inetutils ltrace sysdig atop iotop
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/Copy/bin/strace :shebang #!/bin/sh :no-expand
    exec /usr/bin/ltrace -CSn2 $@
  #+END_SRC

  Of course emacs is installed, now run it
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S emacs-pkgbuild-mode
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.config/systemd/user/emacs.service
    [Unit]
    Description=Emacs

    [Service]
    ExecStart=/bin/emacs
    Restart=always
    RestartSec=1sec

    [Install]
    WantedBy=default.target
  #+END_SRC

  #+BEGIN_SRC sh :dir ~
    <<user_ctl>> enable --now emacs syncthing pulseaudio
  #+END_SRC

** kub
   :PROPERTIES:
   :header-args+: :dir /sudo:10.117.14.185:
   :END:
*** Mounts
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/fstab
      LABEL=<<username>> /home/<<username>> auto
      LABEL=var /var auto
    #+END_SRC

*** Network
    :PROPERTIES:
    :header-args+: :tangle-mode 260
    :END:
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/network/eth0.network
      [Match]
      Name = eth0

      [Network]
      Address = <<prefix>>185/24
      Gateway = <<prefix>>1
      DNS = <<prefix>>1
      IPForward = yes

      Tunnel=he-ipv6
      Address=<<prefix6>>1/64
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/network/he-ipv6.netdev
      [NetDev]
      Name=he-ipv6
      Kind=sit
      MTUBytes=1472

      [Tunnel]
      Local=<<prefix>>185
      Remote=216.218.221.42
      TTL=255
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/network/he-ipv6.network
      [Match]
      Name=he-ipv6
      [Network]
      Address=2001:470:35:62a::2/64
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/system/he-ipv6-route.service
      [Unit]
      After=network.target

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      ExecStart=/bin/ip -6 route add default src <<prefix6>>1 dev he-ipv6
      ExecStop=/bin/ip -6 route del default

      [Install]
      WantedBy=multi-user.target
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/radvd.conf
      interface eth0 {
      AdvSendAdvert on;
      MinRtrAdvInterval 3;
      MaxRtrAdvInterval 10;
      AdvLinkMTU 1472;
      prefix <<prefix6>>/64 {
      AdvOnLink on;
      AdvRouterAddr on;
      };
      };
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/resolv.conf
      nameserver <<prefix>>1
    #+END_SRC

*** Pacman
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/pacman.conf :tangle-mode 260
      <<pacman_common>>

      [options]
      Architecture = armv7h

      [alarm]
      Include = /etc/pacman.d/mirrorlist
      [aur]
      Include = /etc/pacman.d/mirrorlist
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/pacman.d/mirrorlist
      Server = http://vn.mirror.archlinuxarm.org/$arch/$repo
    #+END_SRC

*** LED blinking
    #+BEGIN_SRC sh :tangle /sudo:10.117.14.185:/usr/local/bin/leds :shebang #!/bin/sh
      echo none > /sys/class/leds/cubieboard:green:usr/trigger
      echo mmc0 > /sys/class/leds/cubieboard:blue:usr/trigger
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/systemd/system/leds.service
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/leds
      RemainAfterExit=true

      [Install]
      WantedBy=basic.target
    #+END_SRC

*** Tor
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S tor
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/tor/torrc
      ContactInfo tor at <<domain>>
      Nickname kub
      DirPort 4660
      ORPort 5880
      SOCKSPort <<prefix>>54:9050
      MaxAdvertisedBandwidth 40 KBytes
      ExitPolicy reject *:*

      DataDirectory /var/lib/tor
      Log notice syslog
    #+END_SRC

*** HTTP
    #+BEGIN_SRC sh
      <<pacman>> -S nginx
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/nginx/nginx.conf
      events {}
      http {
      include       mime.types;
      default_type  text/plain;
      charset utf-8;
      gzip off;

      access_log  off;
      log_not_found off;

      server {
      return 301 https://$host$request_uri;
      }

      ssl_protocols TLSv1.2;
      ssl_ciphers EECDH+CHACHA20:EECDH+AES128;
      ssl_prefer_server_ciphers on;
      add_header Strict-Transport-Security max-age=31536000;

      map $request_uri $dest {
      /c /mirror/caps2ctrl.exe;
      /d http://5digits.org/nightly/pentadactyl-latest.xpi;
      /pe http://live.sysinternals.com/;
      /s https://puttytray.goeswhere.com/download/putty.exe;

      default "";
      }

      server {
      listen 443 ssl spdy default_server;
      ssl_certificate <<domain>>.crt;
      ssl_certificate_key <<domain>>.key;
      server_name kub.<<domain>> <<domain>>;
      root /home/<<username>>/Public/;
      autoindex on;
      if ($dest) {
      return 301 $dest;
      }
      location /ipfs/ {
      proxy_pass http://127.0.0.1:4005;
      }
      location ~ /mirror/(?:.*)\.part {
      return 403 incomplete;
      }
      }

      server {
      listen 443 ssl spdy;
      server_name id.<<domain>>;
      root /home/<<username>>/Public/;
      index <<username>>;
      default_type text/html;
      }
      }
    #+END_SRC

*** DLNA
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S minidlna
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/minidlna.conf
      friendly_name=kub
      port=8200

      media_dir=<<storage>>
      media_dir=A,<<fav_music>>
      media_dir=V,/home/<<username>>/Public/mirror
    #+END_SRC
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<system_ctl>> enable --now minidlna
    #+END_SRC

*** IPsec
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/ipsec.conf
      ca <<username>>
          auto=add
          cacert=ca.crt

      conn kub
          auto=add
          left=<<prefix>>54
          leftid=k.<<domain>>
          leftcert=kub.crt
          leftsubnet=<<prefix>>0/24
          leftfirewall=yes
          leftdns=<<prefix>>1

          rightauth=eap-mschapv2
          eap_identity=%any
          rightsourceip=%dhcp
    #+END_SRC

*** OpenVPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo:kub:/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 0
      tls-server
      <pkcs12>
      <<kub_pfx>>
      </pkcs12>
      <dh>
      -----BEGIN DH PARAMETERS-----
      MIIBCAKCAQEAoioJw6aUXmgBDSw6SzbSZww6i7eH0MC+Eba5qGmYJnKn2zI8dBH6
      JZKnAyz9MbD21loI6KjAnOzZkBp7DKle1cACLS229Olycr22rXWPFuhMV15TohDJ
      ArazVXSJGDL9OXhdHei96K3qXofz/3AzXEVxD0unQd5sRlgNGmunofvgWBechdmn
      YQl44SZ0asC8uUY1uiKjVyQzqeNDi3rjJtTobcPdR6Pb8CnS3cfwoWzXMwUexmfJ
      VQSNaDZIeQcwV5MEHs1XViOTiEvT8IHbJojJri0geUSJ+HkX1JTxGIUj4xxKHQ0j
      AFEjqDYFh3q7U6QgFLRWZffVLgxIZVopIwIBAg==
      -----END DH PARAMETERS-----
      </dh>
      user nobody
      group nobody

      mode server

      server 10.255.0.0 255.255.255.0
      push "route <<prefix>>54"
    #+END_SRC

*** SSH
    #+BEGIN_SRC conf :tangle /sudo:10.117.14.185:/etc/ssh/sshd_config
      Protocol 2
      HostKey /etc/ssh/ssh_host_ed25519_key
      HostKey /etc/ssh/ssh_host_rsa_key

      KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
      MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com

      AllowGroups wheel
      PasswordAuthentication no
      ChallengeResponseAuthentication no
      UsePrivilegeSeparation sandbox

      Subsystem sftp /usr/lib/ssh/sftp-server
    #+END_SRC

** ton
*** Mounts
    #+BEGIN_SRC sh
      fallocate -l 2G /swap
      chmod u=rw,go= /swap
      mkswap /swap
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
      LABEL=home /home/<<username>> ntfs-3g noatime,nofail
      LABEL=ESP /boot vfat
      /swap none swap
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/00-bkap.network
      [Match]
      Name = enp4s0

      [Network]
      DNS = 8.8.8.8
      Address = 192.168.0.252/24
      Gateway = 192.168.0.1
      Address = 192.168.1.252/24
      Gateway = 192.168.1.1
      Address = 192.168.4.252/24
      Gateway = 192.168.4.1
      Address = 192.168.5.252/24
      Gateway = 192.168.5.1

      [Route]
      Destination=192.168.1.1
      Source=192.168.1.252
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/dhcp.network
      [Network]
      DHCP=ipv4
    #+END_SRC

*** Pacman
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.conf :tangle-mode 260
    <<pacman_common>>

    [options]
    Architecture = auto

    [multilib]
    Include = /etc/pacman.d/mirrorlist
  #+END_SRC
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.d/mirrorlist
    Server = http://f.archlinuxvn.org/archlinux/$repo/os/$arch
  #+END_SRC

*** OpenVPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo::/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 1
      tls-client
      <pkcs12>
      <<ton_pfx>>
      </pkcs12>

      nobind
      pull

      remote k.<<domain>> 22
      verify-x509-name kub.<<domain>> name
      remote-cert-tls server
      resolv-retry infinite
    #+END_SRC

*** Fonts
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S adobe-source-{sans,serif,code}-pro-fonts adobe-source-han-sans-otc-fonts
    #+END_SRC

    #+BEGIN_SRC xml :tangle ~/.config/fontconfig/fonts.conf :padline no :comments no
      <?xml version='1.0'?>
      <!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
      <fontconfig>
        <match target="font">
          <edit mode="assign" name="rgba">
            <const>none</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hinting">
            <bool>true</bool>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hintstyle">
            <const>hintslight</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="antialias">
            <bool>true</bool>
          </edit>
        </match>
        <dir>~/.fonts</dir>
        <match target="pattern">
          <test qual="any" name="family"><string>Arial</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <match target="pattern">
          <test qual="any" name="family"><string>DejaVu Sans</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <alias>
          <family>sans-serif</family>
          <prefer>
            <family>Linux Biolinum O</family>
          </prefer>
        </alias>
        <alias>
          <family>serif</family>
          <prefer>
            <family>Linux Libertine O</family>
          </prefer>
        </alias>
        <alias>
          <family>monospace</family>
          <prefer>
            <family>Droid Sans Mono</family>
          </prefer>
        </alias>
        <selectfont>
          <rejectfont>
            <glob>/usr/share/fonts/default/Type1/*</glob>
            <pattern>
              <patelt name="scalable">
                <bool>false</bool>
              </patelt>
            </pattern>
          </rejectfont>
        </selectfont>
      </fontconfig>
     #+END_SRC

*** Desktop
    These DBus services are provided by plasma-workspace-units.
    #+BEGIN_SRC sh :dir /sudo::
      rm /usr/share/dbus-1/services/org.kde.{kded5,kglobalaccel,kuiserver,kwalletd5}.service
    #+END_SRC

**** Inside VM
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now systemd-networkd-wait-online sshd
     #+END_SRC
     #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
       //192.168.208.1/home /home/<<username>> cifs credentials=/etc/cifs,uid=1000,gid=1000,file_mode=0600
     #+END_SRC
     On the host side, open 445/tcp to this VM, and run emacs over X with MobaXterm:
     #+BEGIN_SRC conf :tangle bin/emacs.moba
       emacs =  #109#0%192.168.208.128%22%<<username>>%%-1%0%cp -r ~/.gnupg /run/user/1000 && chmod -R 700 /run/user/1000/.gnupg && export GNUPGHOME__EQUAL__/run/user/1000/.gnupg && setxkbmap dvorak && gpg-agent --enable-ssh-support --daemon emacs%%22%%0%0%Interactive shell%h:\.ssh\kub%%0%0%0%0%%1080%%0#MobaFont%10%0%0%0%15%236,236,236%0,0,0%180,180,192%0%-1%0%%xterm%-1%0%0,0,0%54,54,54%255,96,96%255,128,128%96,255,96%128,255,128%255,255,54%255,255,128%96,96,255%128,128,255%255,54,255%255,128,255%54,255,255%128,255,255%236,236,236%255,255,255%80%24%0#0
     #+END_SRC
     Remember to quit emacs before suspending.
***** Megasync
      #+BEGIN_SRC sh :dir /sudo::
       <<pacman>> -S xorg-server-xvfb megasync
      #+END_SRC
      #+BEGIN_SRC conf :tangle ~/.config/systemd/user/megasync.service
       [Unit]
       Description=Headless megasync

       [Service]
       ExecStart=/usr/bin/xvfb-run megasync

       [Install]
       WantedBy=default.target
      #+END_SRC
      #+BEGIN_SRC sh
       <<user_ctl>> enable --now megasync
      #+END_SRC

**** Keyboard
     Use dvorak, swap caps for ctrl
     #+BEGIN_SRC conf :tangle /sudo::/usr/share/kbd/keymaps/caps2ctrl.map
       include "/usr/share/kbd/keymaps/i386/dvorak/dvorak.map.gz"
       keycode 58 = Control
     #+END_SRC
     #+BEGIN_SRC sh :dir /sudo::
       localectl set-keymap caps2ctrl
     #+END_SRC

     Base Japanese IME on dvorak, swap caps for ctrl
     #+BEGIN_SRC conf :tangle keyboard.reg
       Windows Registry Editor Version 5.00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]
       "Scancode Map"=hex:00,00,00,00,00,00,00,00,02,00,00,00,1d,00,3a,00,00,00,00,00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layouts\00000411]
       "Layout File"="kbddv.dll"
     #+END_SRC

**** Pointer
     Use evdev for the touchscreen
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Atmel touchscreen"
               MatchProduct "maXTouch"
               Driver "evdev"
       EndSection
     #+END_SRC

     Use natural scrolling on touchpad
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Natural scrolling"
               MatchProduct "TouchPad"
               MatchDriver "libinput"
               Option "NaturalScrolling" "1"
       EndSection
     #+END_SRC

**** Rotation
     #+BEGIN_SRC sh :dir /sudo::
       <<pacman>> -S acpid
     #+END_SRC
     #+BEGIN_SRC text :tangle /sudo::/etc/acpi/events/rotation-button
       event=ibm/hotkey LEN0068:00 00000080 00006020
       action=sudo -u <<username>> DISPLAY=:0 /usr/local/bin/rotate-screen
     #+END_SRC
     #+BEGIN_SRC sh :tangle /sudo::/usr/local/bin/rotate-screen :shebang #!/bin/sh
       case $(xrandr | grep LVDS1 | cut -f 4 -d ' ' | tr -d '(') in
           normal) new="left";;
           left)   new="normal";;
       esac
       xrandr --output LVDS1 --rotate $new

       case $new in
           normal) matrix="1 0 0 0 1 0 0 0 1";;
           left)   matrix="0 -1 1 1 0 0 0 0 1";;
           right)  matrix="0 1 0 -1 0 1 0 0 1";;
           inverted) matrix="-1 0 1 0 -1 1 0 0 1";;
       esac
       for dev in "SynPS/2 Synaptics TouchPad" "TPPS/2 IBM TrackPoint" "Atmel Atmel maXTouch Digitizer"; do
           xinput set-prop "$dev" "Coordinate Transformation Matrix" $matrix
       done
     #+END_SRC
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now acpid
     #+END_SRC

*** Picard
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S picard chromaprint
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/MusicBrainz/Picard.conf
      [setting]
      server_host=musicbrainz.org
      server_port=80

      fingerprinting_system=acoustid
      acoustid_apikey=<<acoustid_key>>
      acoustid_fpcalc=/usr/bin/fpcalc

      save_images_to_tags=true
      save_only_front_images_to_tags=true
      save_images_to_files=false
      ca_provider_use_amazon=true
      ca_provider_use_caa=true
      ca_provider_use_caa_release_group_fallback=true
      ca_provider_use_whitelist=true
      caa_image_size=1
      caa_approved_only=true
      caa_restrict_image_types=true
      analyze_new_files=false
      ignore_file_mbids=false
      quit_confirmation=true
      va_name=Various Artists
      nat_name=
      standardize_artists=true

      windows_compatibility=true
      ascii_filenames=false
      rename_files=true
      move_files=true
      file_naming_format="$if2(%albumartist%,%artist%)/$if($ne(%albumartist%,),%album%/)$if($gt(%totaldiscs%,1),%discnumber%-,)$if($ne(%albumartist%,),$num(%tracknumber%,2) ,)$if(%_multiartist%,%artist% - ,)%title%"
      move_files_to=<<music>>/_new
      move_additional_files=true
      move_additional_files_pattern=*.jpg *.png *.jpeg
      delete_empty_dirs=true

      browser_integration=true
      browser_integration_port=8000
      browser_integration_localhost_only=true

      dont_write_tags=false
      preserve_timestamps=false
      write_id3v1=true
      write_id3v23=true
      id3v23_join_with=/
      id3v2_encoding=utf-16
      remove_ape_from_mp3=true
      remove_id3_from_flac=true
    #+END_SRC
*** mpd
    :PROPERTIES:
    :header-args+: :dir ~
    :END:

    Create playlist
    #+BEGIN_SRC sh
      mpc listall > <<music>>/pq.m3u
    #+END_SRC

    Shuffle and play
    #+BEGIN_SRC sh :results raw
      mpc -q clear && mpc load pq && mpc -q shuffle && mpc play
    #+END_SRC

    Delete currently playing track
    #+BEGIN_SRC sh :eval query
      rm -v <<music>>/"$(mpc -f %file% | head -1)"
    #+END_SRC

*** mpv
    #+BEGIN_SRC conf :tangle ~/.config/mpv/mpv.conf
      sub-auto=fuzzy
      hwdec=auto
      hwdec-codecs=all
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/mpv/input.conf
      q quit_watch_later
      MOUSE_BTN0 cycle pause
      MOUSE_BTN1 show_progress
      MOUSE_BTN2 cycle fullscreen
      z set window-scale 2
      Z set window-scale 1

      ; show_progress
      f show_text "${filename}"
      d cycle audio
      y add volume 1
      i add volume -1
      g add sub-delay  0.1
      h add sub-delay -0.1
      x cycle mute

      k frame_step
      ' seek +10
      a seek -10
      , seek +60
      o seek -60
      . seek +300
      e seek -300

      u cycle fullscreen
    #+END_SRC
* Emacs
  :PROPERTIES:
  :header-args+: :tangle ~/.emacs
  :END:

  OOBE settings:
  #+BEGIN_SRC elisp
    (server-mode t)
    (global-set-key (kbd "C-x C-r")
                    (lambda () (interactive)
                      (revert-buffer :noconfirm t)))
    (defalias 'yes-or-no-p #'y-or-n-p)
    (defalias 'dabbrev-expand #'hippie-expand)
    (setq auto-save-default nil
          calendar-week-start-day 1
          default-input-method "vietnamese-telex"
          inhibit-startup-screen t
          make-backup-files nil
          scroll-preserve-screen-position t
          tramp-default-method "ssh"
          undo-tree-mode-lighter ""
          visible-bell t
          frame-title-format "%b")
    (set-language-environment "UTF-8")
    (setq-default buffer-file-coding-system 'utf-8-unix)
    (setq-default sentence-end-double-space nil)
    (global-set-key (kbd "C-\\") #'toggle-input-method)
    (blink-cursor-mode -1)
    (show-paren-mode t)
    (winner-mode)
  #+END_SRC

  Package management
  #+BEGIN_SRC elisp
    (package-initialize)
    (setq package-archives
          '(("gnu" . "https://elpa.gnu.org/packages/")
            ("marmalade" . "https://marmalade-repo.org/packages/")
            ("melpa" . "http://melpa.org/packages/")))
    (unless (package-installed-p 'use-package)
      (package-refresh-contents)
      (package-install 'use-package))
    (setq use-package-always-ensure t)
    (require 'use-package)
  #+END_SRC

  Color theme
  #+BEGIN_SRC elisp
    (use-package color-theme-sanityinc-solarized
      :config (load-theme 'sanityinc-solarized-light t))
  #+END_SRC

  Font on Windows
  #+BEGIN_SRC elisp
    (when (eq window-system 'w32)
      (if (> window-system-version 5)
          (set-default-font "Consolas-12" :frames t)
        (set-default-font "Lucida Console-10" :frames t)))
  #+END_SRC

** Discovery
   Learn what's available under prefix keys
   #+BEGIN_SRC elisp
     (use-package which-key :ensure
       :diminish ""
       :config (which-key-mode))
   #+END_SRC

** Editing
   Vim-style
   #+BEGIN_SRC elisp
     (use-package evil
       :config
       (evil-mode t)
       (evil-set-initial-state 'special-mode 'emacs)
       (dolist (state '(normal motion))
         (evil-define-key state global-map
           (kbd "<SPC>") #'evil-scroll-down
           (kbd "S-<SPC>") #'evil-scroll-up))
       (dolist (state '(insert motion normal))
         (evil-define-key state global-map
           (kbd "C-t") #'transpose-chars
           (kbd "C-d") #'delete-char
           (kbd "C-k") #'kill-line
           (kbd "C-y") #'evil-paste-before
           (kbd "C-a") #'beginning-of-line (kbd "C-e") #'end-of-line
           (kbd "C-f") #'forward-char   (kbd "C-b") #'backward-char
           (kbd "C-n") #'next-line      (kbd "C-p") #'previous-line
           (kbd "<down>") #'next-line   (kbd "<up>") #'previous-line
           (kbd "j") #'next-line        (kbd "k") #'previous-line
           (kbd "C-v") #'evil-scroll-down (kbd "M-v") #'evil-scroll-up
           (kbd "C-r") #'isearch-backward))
       (evil-define-key 'insert global-map
         "j" #'self-insert-command "k" #'self-insert-command)
       (evil-define-key 'motion help-mode-map
         (kbd "<tab>") #'forward-button))
   #+END_SRC

   Aggressive indent
   #+BEGIN_SRC elisp
     (use-package aggressive-indent
       :diminish ""
       :config (global-aggressive-indent-mode))
   #+END_SRC

   Switch window with ace
   #+BEGIN_SRC elisp
     (use-package ace-window
       :config (ace-window-display-mode 1)
       :bind ("C-x o" . ace-window))
   #+END_SRC

   Do things with helm:
   #+BEGIN_SRC elisp
     (use-package helm
       :config
       (helm-mode 1)
       (define-key shell-mode-map (kbd "M-r") #'helm-comint-input-ring)
       :diminish helm-mode
       :bind (("C-h SPC" . helm-all-mark-rings)
              ("C-x b" . helm-mini)
              ("C-x C-b" . helm-buffers-list)
              ("C-x C-f" . helm-find-files)
              ("C-c g" . helm-do-grep)
              ("C-s" . helm-occur)
              ("M-x" . helm-M-x)))
     (require 'helm-config)
     (use-package evil
       :config (dolist (state '(insert motion normal))
                 (evil-define-key state global-map
                   (kbd "M-y") #'helm-show-kill-ring)))
   #+END_SRC

** Org
   #+BEGIN_SRC elisp
     (add-hook 'org-mode-hook
               '(lambda ()
                  (add-hook 'before-save-hook 'org-align-all-tags
                            :local t)))
     (org-babel-do-load-languages 'org-babel-load-languages
                                  '((sh . t)))
     (setq org-src-fontify-natively t)
     (setq org-export-initial-scope 'subtree)
     (setq org-latex-pdf-process '("xelatex -interaction nonestopmode -output-directory %o %f"))
     (setq org-html-doctype "html5" org-html-html5-fancy t)
   #+END_SRC

*** Crypt
    #+BEGIN_SRC elisp
      (require 'org-crypt)
      (add-hook 'org-mode-hook
                '(lambda ()
                   (add-hook 'before-save-hook 'org-encrypt-entries
                             :local t)))
      (setq org-tags-exclude-from-inheritance '("crypt")
            org-crypt-key user-mail-address)
    #+END_SRC

    Make it possible to tangle encrypted block
    #+BEGIN_SRC elisp
      (remove-hook 'org-babel-pre-tangle-hook #'save-buffer)
    #+END_SRC

** Doc-View
   #+BEGIN_SRC elisp
     (eval-after-load 'doc-view
       '(bind-key (kbd "<mouse-1>") #'doc-view-scroll-up-or-next-page doc-view-mode-map))
     (setq doc-view-resolution 300
           doc-view-cache-directory (expand-file-name "~/.emacs.d/doc-view"))
     (use-package evil
       :config (add-hook 'view-mode-hook #'evil-emacs-state))
   #+END_SRC

** Dired
   #+BEGIN_SRC elisp
     (use-package dired+
       :config
       (require 'dired+)
       (global-dired-hide-details-mode -1)
       (defun dired-open ()
         (interactive)
         (dired-do-shell-command "xdg-open &" :file-list (dired-get-marked-files)))
       (define-key dired-mode-map (kbd "RET") #'dired-open)
       (define-key dired-mode-map (kbd "<mouse-2>") #'dired-open)
       (setq dired-recursive-copies 'always
             dired-recursive-deletes 'always
             dired-listing-switches "-alh"
             dired-guess-shell-alist-user
             '(("\\.cb.\\'" "okular")
               ("." "xdg-open;"))))
   #+END_SRC

** Eshell
   Put eshell on a convenient binding
   #+BEGIN_SRC elisp
     (global-set-key (kbd "C-x M-m") #'eshell)
   #+END_SRC

   I like the prompt to be on a separate line.
   #+BEGIN_SRC elisp
     (setq eshell-prompt-function
           '(lambda ()
              (concat (eshell/pwd) "\n"
                      (int-to-string eshell-last-command-status) " % "))
           eshell-prompt-regexp "^[[:digit:]]\\{1,3\\} % ")
   #+END_SRC

   These are terminal-manipulating commands
   #+BEGIN_SRC elisp
     (eval-after-load 'em-term
       '(progn
          (dolist (prog '("atop" "systemd-cgls" "journalctl"))
            (add-to-list 'eshell-visual-commands prog))
          (add-to-list 'eshell-visual-options '("ssh" "-t"))))
   #+END_SRC

   Profile:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/profile :no-expand
     addpath ~/Copy/bin
   #+END_SRC

   Aliases:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias vim find-file $1
     alias j journalctl -afb $*
     alias sc <<system_ctl>> $*
     alias uc <<user_ctl>> $*
     alias ytdl <<ytdl>> -a /home/<<username>>/q.txt
     alias fr free -h
   #+END_SRC

* Ansible
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ansible
  #+END_SRC

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package yaml-mode)
         (use-package ansible-doc
           :config (add-hook 'yaml-mode-hook #'ansible-doc-mode))))
  #+END_SRC

** Inventory
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible_inventory
   :END:

   Here are the hosts and their variables
   #+BEGIN_SRC conf
     [arch]
     kub ansible_python_interpreter=/usr/bin/python2
     ton ansible_python_interpreter=/usr/bin/python2 ansible_connection=local

     [all:vars]
     user=<<username>>
     home=/home/<<username>>
     h=<<storage>>
     conf="{{h}}/config/{{ansible_hostname}}"
     locale=en_US
     prefix=<<prefix>>
   #+END_SRC

** Config
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible.cfg
   :END:

   Keep the inventory here
   #+BEGIN_SRC conf
     [defaults]
     inventory = ~/.ansible_inventory
   #+END_SRC

   For some reason ControlMaster isn't working
   #+BEGIN_SRC conf
     [ssh_connection]
     ssh_args=-o ControlMaster=no
   #+END_SRC

* Firefox
  :PROPERTIES:
  :header-args+: :tangle ~/.pentadactylrc
  :END:
  This file is in vimrc syntax

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(use-package vimrc-mode))
  #+END_SRC

  Use DuckDuckGo:

  #+BEGIN_SRC vimrc
    silent bmark -keyword ddg -t DDG https://duckduckgo.com/?kn=1&kp=-1&kae=c&q=%s
    set defsearch=ddg
  #+END_SRC

  Use backspace to go back:
  #+BEGIN_SRC vimrc
    set! browser.backspace_action=0
  #+END_SRC

  Don't let middle mouse paste:
  #+BEGIN_SRC vimrc
    set! middlemouse.contentLoadURL=false
  #+END_SRC

  Restore C-j for Downloads:
  #+BEGIN_SRC vimrc
    map <C-j> -ex dialog downloads
  #+END_SRC

  Bind stop to an easy binding:
  #+BEGIN_SRC vimrc
    map s <C-c>
  #+END_SRC

  Make scrolling easier:
  #+BEGIN_SRC vimrc
    map <space> <C-d>
    map <S-space> <C-u>
  #+END_SRC

  Pin tab:
  #+BEGIN_SRC vimrc
    map <A-p> -ex pintab!
  #+END_SRC

  Move to first or last:
  #+BEGIN_SRC vimrc
    map <A-!> -ex tabm 1
    map <A-$> -ex tabm $
  #+END_SRC

  Fast switching:
  #+BEGIN_SRC vimrc
    map -m normal,insert <F1> <C-^>
  #+END_SRC

  Don't raise these openings:
  #+BEGIN_SRC vimrc
    set activate-=diverted,links,tabopen,paste
  #+END_SRC

  Open help in a new tab
  #+BEGIN_SRC vimrc
    set newtab=help
  #+END_SRC

  Keep hint keys under left fingers:
  #+BEGIN_SRC vimrc
    set hintkeys=12345
  #+END_SRC

  Make hint text readable
  #+BEGIN_SRC vimrc
    highlight Hint -append font-size: 14px !important
  #+END_SRC

  Unzoom image:
  #+BEGIN_SRC vimrc
    map <A-t> -js content.document.toggleImageSize()
  #+END_SRC

  Replace the status line with navigation bar, and show link in the commandline:
  #+BEGIN_SRC vimrc
    set guioptions=bTrc
    set showstatuslinks=command
  #+END_SRC

  Scroll by one line:
  #+BEGIN_SRC vimrc
    set scrollsteps=1
  #+END_SRC

  Show feeds first in pageinfo:
  #+BEGIN_SRC vimrc
    set pageinfo=fgmse
  #+END_SRC

  Use visual bell:
  #+BEGIN_SRC vimrc
    set visualbell
  #+END_SRC

  Bookmarks and preferences:
  #+BEGIN_SRC vimrc
    map <C-S-s> -ex bmark -keyword ac -t config about:config
    \ bmark -keyword bgp -t BGP http://bgp.he.net/search?search[search]=%s
    \ bmark -keyword v -t valsi http://vlasisku.lojban.org/?query=%s
    \ bmark -keyword c -t camxes http://camxes.lojban.org/?text=%s
    \ bmark -keyword yb -t youtube https://youtube.com/watch?v=%s
    \ bmark -keyword cw -t 'CrawlWiki' http://crawl.chaosforge.org/index.php?title=Special%3ASearch&search=%s
    \ bmark -keyword bb -t burnbit http://burnbit.com/burn?file=%s
    \ bmark -keyword b -t btdigg https://btdigg.org/search?q=%s&order=0&p=0
    \ bmark -keyword ba -t btdigg https://btdigg.org/search?q=%s&order=2&p=0
    \ bmark -keyword m -t zing http://mp3.zing.vn/tim-kiem/bai-hat.html?q=%s
    \ bmark -keyword ma -t artist http://musicbrainz.org/search?advanced=1&type=artist&tport=8000&query=%s
    \ bmark -keyword mg -t group http://musicbrainz.org/search?advanced=1&type=release_group&tport=8000&query=%s
    \ bmark -keyword mr -t recording http://musicbrainz.org/search?advanced=1&type=recording&tport=8000&query=%s
    \ bmark -keyword gm -t gmail https://mail.google.com/mail/#spam
    \ set! accessibility.browsewithcaret_shortcut.enabled=false
    \ set! browser.newtabpage.enabled=false
    \ set! browser.privatebrowsing.dont_prompt_on_enter=true
    \ set! browser.sessionstore.restore_pinned_tabs_on_demand=true
    \ set! browser.shell.checkDefaultBrowser=false
    \ set! browser.startup.homepage=about:blank
    \ set! browser.startup.page=3
    \ set! general.warnOnAboutConfig=false
    \ set! security.OCSP.enabled=0
    \ set! security.warn_viewing_mixed=false
    \ set! layout.spellcheckDefault=0
    \ set! middlemouse.paste=true
    \ set! ui.key.menuAccessKey=0
    \ set! browser.anchor_color="#6c71c4"
    \ set! browser.display.background_color="#fdf6e3"
    \ set! browser.display.foreground_color="#657b83"
    \ set! browser.display.use_system_colors=false
    \ set! font.default.x-western="sans-serif"
    \ if /NT 6/.test(window.navigator.oscpu)
    \     set! font.name.monospace.x-western=Consolas
    \ fi
    \ set! extensions.checkCompatibility.nightly=false
    \ set! extensions.https_everywhere._observatory.alt_roots=true
    \ set! extensions.https_everywhere._observatory.enabled=true
    \ set! extensions.https_everywhere._observatory.priv_dns=true
    \ set! plugins.hide_infobar_for_missing_plugin=true
    \ set! browser.download.manager.alertOnEXEOpen=false
    \ set! browser.download.manager.scanWhenDone=false
    \ set! browser.search.context.loadInBackground=true
    \ set! intl.charset.default=UTF-8
    \ set! network.http.pipelining=true
    \ set! network.http.pipelining.aggressive=true
    \ set! network.http.pipelining.ssl=true
    \ set! network.protocol-handler.expose.magnet=false
    \ set! network.proxy.socks=kub.<<domain>>
    \ set! network.proxy.socks_port=9050
    \ set! network.proxy.socks_remote_dns=true
    \ set! toolkit.telemetry.enabled=true
    \ js services.permissions.add(services.io.newURI("http:depositfiles.com",null,null), 'image', services.permissions.DENY_ACTION)
    \ js services.loginManager.setLoginSavingEnabled("accounts.google.com", false)
  #+END_SRC

  Strip tracker from location, thanks to [[https://userscripts.org/scripts/show/93825][Bruno Barão]] and [[https://github.com/5digits/dactyl/commit/7a1ffa5b555399c5d0925ad599e2640070bd128d][Kris Maglione]].
  #+BEGIN_SRC vimrc
    autocmd DOMLoad (utm|wa)_ -js win.history.replaceState("Remove trackers", '', doc.location.href.replace(/&?(utm|wa)_[^&]+/g,'').replace(/\?$/,''))
  #+END_SRC

  Facebook
  #+BEGIN_SRC vimrc
    bmark -keyword fb -t facebook https://fb.me/%s
    map <A-s> -js dactyl.open("https://www.facebook.com/sharer/sharer.php?u=" + content.location)
  #+END_SRC

  Inoreader
  #+BEGIN_SRC vimrc
    map <A-f> -js dactyl.open("https://www.inoreader.com/?add_feed=" + content.location)
    map <A-w> -js dactyl.open("https://www.inoreader.com/bookmarklet/save_web_page/" + encodeURIComponent(content.location))
    js services.permissions.add(services.io.newURI("http:inoreader.com",null,null), 'popup', services.permissions.ALLOW_ACTION)
    set passkeys+=inoreader.com:jkgafswhq
  #+END_SRC
  Get videos from starred items
  #+BEGIN_SRC sh :tangle ~/.bash_login
    function videos() {
        <<ytdl>> --ignore-errors $(wget 'https://www.inoreader.com/reader/api/0/stream/contents/user%2F-%2Fstate%2Fcom.google%2Fstarred?n=1000&r=o' \
                                        --header 'AppId: 1000001238' --header 'AppKey: <<inoreader_key>>' \
                                        --header 'Authorization: GoogleLogin auth=<<inoreader_auth>>' \
                                          | grep -o 'href":"[^"]*' | uniq | sed 's/href":"//' | tr -d '\\' | grep -vE 'reader/api|rapidgator|escapistmag|muspy' )
    }
  #+END_SRC

  Site keyboard shortcuts:
  #+BEGIN_SRC vimrc
    set passkeys+=tumblr.com:jk
    set passkeys+=mail.google.com/mail/:'#!ms+-/? jknpux'
    set passkeys+=google.com/contacts/:'#jkoux,.'
  #+END_SRC

  Switch to reader mode:
  #+BEGIN_SRC vimrc
    map <A-r> -js dactyl.open("about:reader?url=" + content.location)
  #+END_SRC

* Windows
** Portables
   #+BEGIN_SRC bat :tangle bin/pe.cmd
     cd /d %~dp0\Tools
     start /b procexp /e /accepteula
   #+END_SRC
   #+BEGIN_SRC bat :tangle bin/pi.cmd
     cd /d %~dp0\picard
     start /b picard
   #+END_SRC
   #+BEGIN_SRC bat :tangle bin/fx.cmd
     cd /d %~dp0\fx
     start /b firefox
   #+END_SRC
   #+BEGIN_SRC bat :tangle bin/tv.cmd
     cd /d %~dp0\teamviewer
     start /b teamviewer
   #+END_SRC
   #+BEGIN_SRC bat :tangle bin/kp.cmd
     cd /d %~dp0\keepass
     start /b keepass
   #+END_SRC
   #+BEGIN_SRC bat :tangle bin/ovpn.cmd
     cd /d %~dp0
     elevate openvpn --config hdhoang.ovpn
   #+END_SRC

* Secrets							      :crypt:
-----BEGIN PGP MESSAGE-----
Version: GnuPG v2

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
99waLv3WIUALX/4pZT8atGNtUA==
=oMJ7
-----END PGP MESSAGE-----
