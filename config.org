#+STARTUP: showall
#+PROPERTY: header-args+ :cache yes
#+PROPERTY: header-args+ :comments org
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :noweb yes
#+PROPERTY: header-args+ :results silent
#+PROPERTY: header-args:text+ :eval no
* Places and names
  #+NAME: username
  #+BEGIN_SRC text
    hdhoang
  #+END_SRC

  #+NAME: storage
  #+BEGIN_SRC text
    /home/<<username>>/Copy
  #+END_SRC

  #+NAME: fav_music
  #+BEGIN_SRC text
    /home/<<username>>/Music
  #+END_SRC

  #+NAME: prefix
  #+BEGIN_SRC text
    10.117.14
  #+END_SRC

  #+NAME: domain
  #+BEGIN_SRC text
    zahe.me
  #+END_SRC

  #+NAME: system_ctl
  #+BEGIN_SRC text
    systemctl --system --no-pager
  #+END_SRC

  #+NAME: user_ctl
  #+BEGIN_SRC text
    systemctl --user --no-pager
  #+END_SRC

  #+NAME: pacman
  #+BEGIN_SRC text
    pacman --noconfirm --needed
  #+END_SRC

  #+NAME: yt-dl
  #+BEGIN_SRC text
    youtube-dl --format "[height <=? 720]" --output ~/Videos/"%(uploader)s %(upload_date)s %(title)s@%(id)s.%(ext)s"
  #+END_SRC

* VPN
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S openvpn
  #+END_SRC
  #+NAME: openvpn_common
  #+BEGIN_SRC conf
    dev tun
    topology subnet
    persist-key
    persist-tun
    tls-version-min 1.2
    tls-cipher TLS-DHE-RSA-WITH-AES-128-CBC-SHA
    <ca>
    -----BEGIN CERTIFICATE-----
    MIIFrDCCA5SgAwIBAgIQOPZFweJdkSzOOys5EjF0DTANBgkqhkiG9w0BAQsFADBV
    MQswCQYDVQQGEwJDTjEaMBgGA1UEChMRV29TaWduIENBIExpbWl0ZWQxKjAoBgNV
    BAMTIUNlcnRpZmljYXRpb24gQXV0aG9yaXR5IG9mIFdvU2lnbjAeFw0xNDExMDgw
    MDU4NThaFw0yOTExMDgwMDU4NThaMFUxCzAJBgNVBAYTAkNOMRowGAYDVQQKExFX
    b1NpZ24gQ0EgTGltaXRlZDEqMCgGA1UEAxMhV29TaWduIENBIEZyZWUgU1NMIENl
    cnRpZmljYXRlIEcyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA47SA
    DmswUIIvH+edv/h8QiXtrmHE64aHI38RH8CTXxuSkB53jLx29/sKpdV9rNxLGNhY
    Lt9GazQPRWRghMLrmg5R1CpUUT4nO2Rohm98awA8mfZMqEUnraXLKzftWcNSTE/e
    NJzyt9H6WMvlYp5VRly3xY04JDXvlyx8ZRAN75+XCNXlsxJ6kt3+iA+PpK+9xdY2
    90Eb6Fndhv81v+3k0aCTblGomcvf3b5xiMPasWXMe5XEZo++TgZ/m1OMazzOlyaC
    Hxcwuj/I3swLobTvEj2Tywgw5xqYl4A6JoSP/nN0lVMPUbKqiVf0lkByEx3kZ5hO
    j8ZAC/UdDEUt4NWSgwIDAQABo4IBdjCCAXIwDgYDVR0PAQH/BAQDAgEGMB0GA1Ud
    JQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATASBgNVHRMBAf8ECDAGAQH/AgEAMDAG
    A1UdHwQpMCcwJaAjoCGGH2h0dHA6Ly9jcmxzMS53b3NpZ24uY29tL2NhMS5jcmww
    cgYIKwYBBQUHAQEEZjBkMCcGCCsGAQUFBzABhhtodHRwOi8vb2NzcDEud29zaWdu
    LmNvbS9jYTEwOQYIKwYBBQUHMAKGLWh0dHA6Ly9haWExLndvc2lnbi5jb20vY2Ex
    ZzItc2VydmVyMS1mcmVlLmNlcjAdBgNVHQ4EFgQU0qcWIHyv2ZWe60MKGfLguXQO
    qMcwHwYDVR0jBBgwFoAU4WbPDtHxs0u3BiAU/ocS1fb++z4wRwYDVR0gBEAwPjA8
    Bg0rBgEEAYKbUQYBAgIBMCswKQYIKwYBBQUHAgEWHWh0dHA6Ly93d3cud29zaWdu
    LmNvbS9wb2xpY3kvMA0GCSqGSIb3DQEBCwUAA4ICAQCWWt+WkRdokF0vtDIVgAMD
    C+kct3Ns2qj6lN3dPjQrLoCTbPqmZ9MbeoJBzp7/P++yg2qe/DL9RPOCZqrPRC+z
    N0HweRLjAieGSJK+z1bXy9fnHiWdQdsK5zMSWK2V2J7Ut5Upuv7/34Ckd1sVYg9p
    +IdtdOqFonZdn5UuA7yK+YqsgWRQ8gtFS+yXMDl05ad+FiRiK1DxXNhPzS6iGCWj
    zvYfYN0V3iAVGw5/r4XZQKwHKjTdUbAaqOYOn1/bRnDm9dklHPAd5UKhLSKdbhHJ
    jaZlvA6qdnPIVmAv+z+GuaX1M+/VEx9JTDgHnlkiWsdO2SUkulNw/GMqVFHrw0tB
    feToPCyldlq/2UyoDa5SbqVdmD1skG14H8NwlYYHP1Tj6oqBZGKajzGveyp+kiLD
    jsxTrMecmRErSD9ScStuwOGzCuUDYteJGChMCo0/C0WJgYuIpJPCf0TlHltAAPwv
    zDv4ankx/UQUto9IhUyrCp27Nwr8URng/llqO49gYqcHgq8IZqDy2mAC6tg0fldx
    obX+adf73Vqc8//E6s10+pRw01iSzq8S5G7r3bivHeJl1EbqCz7jaA4KTCeDUJEG
    xnv4+psm7SwOZ7hs5SyYbV96KMOEPAMN9+ID4ZTCWCf4TYFZL/F8YclXXb3cnIDQ
    ZN98h3iF5pSLcIsFR+TIew==
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    MIIFdjCCA16gAwIBAgIQXmjWEXGUY1BWAGjzPsnFkTANBgkqhkiG9w0BAQUFADBV
    MQswCQYDVQQGEwJDTjEaMBgGA1UEChMRV29TaWduIENBIExpbWl0ZWQxKjAoBgNV
    BAMTIUNlcnRpZmljYXRpb24gQXV0aG9yaXR5IG9mIFdvU2lnbjAeFw0wOTA4MDgw
    MTAwMDFaFw0zOTA4MDgwMTAwMDFaMFUxCzAJBgNVBAYTAkNOMRowGAYDVQQKExFX
    b1NpZ24gQ0EgTGltaXRlZDEqMCgGA1UEAxMhQ2VydGlmaWNhdGlvbiBBdXRob3Jp
    dHkgb2YgV29TaWduMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAvcqN
    rLiRFVaXe2tcesLea9mhsMMQI/qnobLMMfo+2aYpbxY94Gv4uEBf2zmoAHqLoE1U
    fcIiePyOCbiohdfMlZdLdNiefvAA5A6JrkkoRBoQmTIPJYhTpA2zDxIIFgsDcScc
    f+Hb0v1naMQFXQoOXXDX2JegvFNBmpGN9J42Znp+VsGQX+axaCA2pIwkLCxHC1l2
    ZjC1vt7tj/id07sBMOby8w7gLJKA84X5KIq0VC6a7fd2/BVoFutKbOsuEo/Uz/4M
    x1wdC34FMr5esAkqQtXJTpCzWQ27en7N1QhatH/YHGkR+ScPewavVIMYe+HdVHpR
    aG53/Ma/UkpmRqGyZxq7o093oL5d//xWC0Nyd5DKnvnyOfUNqfTq1+ezEC8wQjch
    zDBwyYaYD8xYTYO7feUapTeNtqwylwA6Y3EkHp43xP901DfA4v6IRmAR3Qg/UDar
    uHqklWJqbrDKaiFaafPz+x1wOZXzp26mgYmhiMU7ccqjUu6Du/2gd/Tkb+dC221K
    mYo0SLwX3OSACCK28jHAPwQ+658geda4BmRkAjHXqc1S+4RFaQkAKtxVi8QGRkvA
    Sh0JWzko/amrzgD5LkhLJuYwTKVYyrREgk/nkR4zw7CT/xH8gdLKH3Ep3XZPkiWv
    HYG3Dy+MwwbMLyejSuQOmbp8HkUff6oZRZb9/D0CAwEAAaNCMEAwDgYDVR0PAQH/
    BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFOFmzw7R8bNLtwYgFP6H
    EtX2/vs+MA0GCSqGSIb3DQEBBQUAA4ICAQCoy3JAsnbBfnv8rWTjMnvMPLZdRtP1
    LOJwXcgu2AZ9mNELIaCJWSQBnfmvCX0KI4I01fx8cpm5o9dU9OpScA7F9dY74ToJ
    MuYhOZO9sxXqT2r09Ys/L3yNWC7F4TmgPsc9SnOeQHrAK2GpZ8nzJLmzbVUsWh2e
    JXLOC62qx1ViC777Y7NhRCOjy+EaDveaBk3e1CNOIZZbOVtXHS9dCF4Jef98l7VN
    g64N1uajeeAz0JmWAjCnPv/So0M/BVoG6kQC2nz4SNAzqfkHx5Xh9T71XXG68pWp
    dIhhWeO/yloTunK0jF02h+mmxTwTv97QRCbut+wucPrXnbes5cVAWubXbHssw1ab
    R80LzvobtCHXt2a49CUwi1wNuepnsvRtrtWhnk/Yn+knArAdBtaP4/tIEp9/EaEQ
    PkxROpaw0RPxx9gmrjrKkcRpnd8BKWRRb2jaFOwIQZeQjdCygPLPwj2/kWjFgGce
    xGATVdVhmVd8upUPYUk6ynW8yQqTP2cOEvIo4jEbwFcW3wh8GcF+Dx+FHgo2fFt+
    J7x6v+Db9NpSvd4MVHAxkUOVyLzwPt0JfjBkUO1/AaQzZ01oT74V77D2AhGiGxMl
    OtzCWfHjXEa7ZywCRuoeSKbmW9m1vFGikpbbqsY3Iqb+zCB0oy2pLmvLwIIRIbWT
    ee5Ehr7XHuQe+w==
    -----END CERTIFICATE-----
    </ca>
  #+END_SRC

* SSH
  :PROPERTIES:
  :header-args+: :tangle ~/.ssh/config
  :END:

  SSH encryption settings by https://stribika.github.io/2015/01/04/secure-secure-shell.html

  #+BEGIN_SRC conf
    Host *
    KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
    Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com,hmac-sha1
  #+END_SRC

  Machines
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    vorme ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCf2C8j0GFA8eq8Vgva/9KI4cF4Q23v4rBk6zAxoyIJvENGkpDuUba4AOMabUkPiXU76KVbx/h4fOivjrWoUNG6Z0xEOJTQqVwuk7788dwIm49Ba+ZOC/sCtT7dsbshFpzXmkdASsZty0foFSILRADDTlB1MZiN9wJRlnjkmIO9WiSMYnuGzolO2f+Gy6LFrtQF1ZgOOqPToO4u4li3VPh1zdoY5+IQul9BQJGU7tMZrleH09LcOUlip8SHZYuXu/Zlb9GSK7Cj7WfGaR0k+xvs657n41haffQ5CxTjocqZdv7eO4Uo2ryWXn2Ck7DwKH6KMjEJZRbX32zLsTacQNgR
    kub,<<prefix>>.54 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGtY5ERdvH+mAQKfy270I+eEaZ2i6FhhEjG0EuzDxIym
  #+END_SRC
  #+BEGIN_SRC conf
    Host vorme
    User root
    IdentityFile ~/.ssh/kub
    Host kub
    User <<username>>
    IdentityFile ~/.ssh/kub
  #+END_SRC
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'tramp
      '(add-to-list 'tramp-default-proxies-alist '("kub" "root" "/ssh:kub:")))
  #+END_SRC

* KDE
** kwin
   :PROPERTIES:
   :header-args+: :tangle ~/.config/kwinrulesrc
   :END:

   Remove border from firefox
   #+BEGIN_SRC conf
     [1]
     Description=Window settings for firefox
     noborder=true
     noborderrule=2
     shortcut=F5
     shortcutrule=2
     windowrole=browser
     windowrolematch=1
     wmclass=navigator firefox
     wmclasscomplete=true
     wmclassmatch=1
   #+END_SRC

   Put emacs on F4
   #+BEGIN_SRC conf
     [2]
     Description=Application settings for emacs
     shortcut=F4
     shortcutrule=2
     wmclass=emacs
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   Put konsole on F6
   #+BEGIN_SRC conf
     [3]
     Description=Application settings for konsole
     shortcut=F6
     shortcutrule=2
     wmclass=konsole
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   #+BEGIN_SRC conf
     [General]
     count=3
   #+END_SRC

* Git

  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S git
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [user]
    name = Hoàng Đức Hiếu
    email = <<username>>@<<domain>>
    [color]
    ui = auto
    [core]
    eol = lf
    whitespace = trailing-space,space-before-tab
    [alias]
    ml = log --reverse --topo-order ORIG_HEAD..
    [merge]
    conflictstyle = diff3
    [push]
    default = simple
    [pull]
    rebase = true
    [rebase]
    stat = true
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias g git $*
  #+END_SRC

  Code hosting sites:
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
  #+END_SRC
  #+BEGIN_SRC conf :tangle ~/.ssh/config
    Host github.com bitbucket.org
    User git
    IdentityFile ~/.ssh/git
    Host git.kde.org
    User git
    IdentityFile ~/.ssh/kde
    Host heroku.com
    IdentityFile ~/.ssh/heroku
  #+END_SRC

  Magit is awesome.
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package magit :ensure
           :bind ("C-x g" . magit-status))
         (setq magit-save-repository-buffers 'dontask
               magit-push-always-verify nil)))
  #+END_SRC

* ArchLinux
  Pacman config
  #+NAME: pacman_common
  #+BEGIN_SRC conf
    [options]
    VerbosePkgLists
    UseSyslog
    CheckSpace
    HoldPkg = pacman glibc
    SigLevel = Required DatabaseOptional
    LocalFileSigLevel = Optional

    [core]
    Include = /etc/pacman.d/mirrorlist
    [extra]
    Include = /etc/pacman.d/mirrorlist
    [community]
    Include = /etc/pacman.d/mirrorlist
    [blackarch]
    Server = http://f.archlinuxvn.org/$repo/$repo/os/$arch
  #+END_SRC

  Refresh database
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S -y
  #+END_SRC

  AUR helper
  #+BEGIN_SRC yaml :tangle ~/Copy/bin/aur :shebang #!/bin/ansible-playbook
    - hosts: arch
      gather_facts: no
      vars:
        store: /tmp/aur
      vars_prompt:
        - name: package
          private: no
      tasks:
        - file: state=directory path={{store}}
        - get_url: url=https://aur4.archlinux.org/cgit/aur.git/snapshot/{{package}}.tar.gz dest={{store}}/
        - unarchive: copy=no src={{store}}/{{package}}.tar.gz dest={{store}}
        - command: nice makepkg --noconfirm --install --force --syncdeps chdir={{store}}/{{package}}
  #+END_SRC

  Yaourt config
  #+BEGIN_SRC conf :tangle ~/.yaourtrc
    AURUPGRADE=1
    EXPORT=1
    EXPORTDIR=~
    BUILD_NOCONFIRM=1
    EDITFILES=0
  #+END_SRC

  Base utils
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S haveged p7zip parallel pkgfile yaourt
    <<system_ctl>> enable --now haveged
  #+END_SRC

  #+BEGIN_SRC sh
    pkgfile -u
  #+END_SRC

  Dev-env:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S base-devel rust android-tools
  #+END_SRC

  Monitoring:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ethtool lm_sensors net-tools psmisc \
        procps-ng inetutils ltrace sysdig atop iotop
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/Copy/bin/strace :shebang #!/bin/sh :no-expand
    exec /usr/bin/ltrace -CSn2 $@
  #+END_SRC

  Of course emacs is installed, now run it
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S emacs-pkgbuild-mode
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.config/systemd/user/emacs.service
    [Unit]
    Description=Emacs

    [Service]
    ExecStart=/bin/emacs
    Restart=always
    RestartSec=1sec

    [Install]
    WantedBy=default.target
  #+END_SRC

  #+BEGIN_SRC sh :dir ~
    <<user_ctl>> enable --now emacs syncthing pulseaudio
  #+END_SRC

** kub
   :PROPERTIES:
   :header-args+: :dir /sudo:kub:
   :END:
*** Mounts
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/fstab
      LABEL=<<username>> /home/<<username>> auto
      LABEL=var /var auto
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/systemd/network/eth0.network
      [Match]
      Name = eth0

      [Network]
      Address = <<prefix>>.54/24
      Gateway = <<prefix>>.1
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/resolv.conf
      nameserver <<prefix>>.1
    #+END_SRC

*** Pacman
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/pacman.conf
      <<pacman_common>>

      [options]
      Architecture = armv7h

      [alarm]
      Include = /etc/pacman.d/mirrorlist
      [aur]
      Include = /etc/pacman.d/mirrorlist
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/pacman.d/mirrorlist
      Server = http://vn.mirror.archlinuxarm.org/$arch/$repo
    #+END_SRC

*** LED blinking
    #+BEGIN_SRC sh :tangle /sudo:kub:/usr/local/bin/leds :shebang #!/bin/sh
      echo none > /sys/class/leds/cubieboard:green:usr/trigger
      echo mmc0 > /sys/class/leds/cubieboard:blue:usr/trigger
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/systemd/system/leds.service
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/leds
      RemainAfterExit=true

      [Install]
      WantedBy=basic.target
    #+END_SRC

*** Tor
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S tor
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/tor/torrc
      ContactInfo tor at zahe dot me
      Nickname kub
      DirPort 4660
      ORPort 5880
      SOCKSPort <<prefix>>.54:9050
      MaxAdvertisedBandwidth 40 KBytes
      ExitPolicy reject *:*

      DataDirectory /var/lib/tor
      Log notice syslog
    #+END_SRC

*** HTTP
    #+BEGIN_SRC sh
      <<pacman>> -S nginx
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/nginx/nginx.conf
      events {}
      http {
      include       mime.types;
      default_type  text/plain;
      charset utf-8;
      gzip off;

      access_log  off;
      log_not_found off;

      server {
      return 301 https://$host$request_uri;
      }

      ssl_protocols TLSv1.2;
      ssl_ciphers EECDH+CHACHA20:EECDH+AES128;
      ssl_prefer_server_ciphers on;
      add_header Strict-Transport-Security max-age=31536000;

      map $request_uri $dest {
      /_ https://raw.githubusercontent.com/hdhoang/hdhoang/master/config/dotpentadactylrc;
      /c /mirror/caps2ctrl.exe;
      /d http://5digits.org/nightly/pentadactyl-latest.xpi;
      /pe http://live.sysinternals.com/;
      /s https://puttytray.goeswhere.com/download/putty.exe;
      /ws https://www.wosign.com/root/ca1_dv_free_2.crt;

      default "";
      }

      server {
      listen 443 ssl spdy default_server;
      ssl_certificate zahe.me.crt;
      ssl_certificate_key zahe.me.key;
      server_name kub.zahe.me zahe.me;
      root /home/hdhoang/Public/;
      autoindex on;
      if ($dest) {
      return 301 $dest;
      }
      location /ipfs/ {
      proxy_pass http://127.0.0.1:4005;
      }
      location ~ /mirror/(?:.*)\.part {
      return 403 incomplete;
      }
      }

      server {
      listen 443 ssl spdy;
      server_name id.zahe.me;
      root /home/hdhoang/Public/;
      index hdhoang;
      default_type text/html;
      }
      }
    #+END_SRC

*** VPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo:kub:/etc/openvpn/kub.conf
      <<openvpn_common>>

      tls-server
      <pkcs12>
      <<ton_pfx>>
      </pkcs12>
      <dh>
      -----BEGIN DH PARAMETERS-----
      MIIBCAKCAQEAxCjSeYMez/G/bLLHwwlDQAt9fysiJYCV43nSRmgSQoc29zt8/Bhy
      mtrNeH3h0to2KZJ+0nkeGafMPJTOhYjPGjFNeLbhbSU6+A8FptAoTIwEqdFWjpYK
      fen88tKM6pcqXJCiCLVxFFoggRpy7UCdhoc6ej9PVgwrR1vAKq7q/fy4FDgy/roC
      5F9ov0fWSSkG7H5lDFWSu/FgTUPsxJ2hZMFE/8XZyUKup+dNULEqIdyzSmQifs3b
      YbQgP/ULU9TUEcYNSIfESPCZbOsOgxyeREwzfup3xmKXVkt7yiZyr0FkDdY6izPC
      Or3uq5mDQQQTNXAqZ7IePEaeNMl2Y3bwmwIBAg==
      -----END DH PARAMETERS-----
      </dh>
      user nobody
      group nobody

      mode server
      keepalive 10 120

      server 10.255.0.0 255.255.255.0
      push "route <<prefix>>.54"
    #+END_SRC
** ton
*** Mounts
    #+BEGIN_SRC sh
      fallocate -l 2G /swap
      chmod u=rw,go= /swap
      mkswap /swap
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
      LABEL=home /home/<<username>> ntfs-3g noatime,nofail
      LABEL=ESP /boot vfat
      /swap none swap
    #+END_SRC

*** Hosts
    #+BEGIN_SRC conf :tangle /sudo::/etc/hosts
      127.0.0.1 ton
      ::1 ton
      <<prefix>>.1 vorme
      <<prefix>>.54 kub
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/00-bkap.network
      [Match]
      Name = enp4s0

      [Network]
      DNS = 8.8.8.8
      Address = 192.168.0.252/24
      Gateway = 192.168.0.1
      Address = 192.168.1.252/24
      Gateway = 192.168.1.1
      Address = 192.168.4.252/24
      Gateway = 192.168.4.1
      Address = 192.168.5.252/24
      Gateway = 192.168.5.1
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/dhcp.network
      [Network]
      DHCP=ipv4
    #+END_SRC

*** Pacman
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.conf
    <<pacman_common>>

    [options]
    Architecture = auto

    [multilib]
    Include = /etc/pacman.d/mirrorlist
  #+END_SRC
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.d/mirrorlist
    Server = http://f.archlinuxvn.org/archlinux/$repo/os/$arch
  #+END_SRC

*** VPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo::/etc/openvpn/kub.conf
      <<openvpn_common>>

      tls-client
      <pkcs12>
      <<ton_pfx>>
      </pkcs12>

      nobind
      pull

      remote k.<<domain>> 22
      verify-x509-name ton.<<domain>> name
      remote-cert-tls server
      resolv-retry infinite
    #+END_SRC
*** Fonts
    #+BEGIN_SRC sh
      <<pacman>> -S ttf-linux-libertine ttf-inconsolata ttf-hannom
    #+END_SRC

    #+BEGIN_SRC xml :tangle ~/.config/fontconfig/fonts.conf :padline no :comments no
      <?xml version='1.0'?>
      <!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
      <fontconfig>
        <match target="font">
          <edit mode="assign" name="rgba">
            <const>none</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hinting">
            <bool>true</bool>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hintstyle">
            <const>hintmedium</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="antialias">
            <bool>true</bool>
          </edit>
        </match>
        <dir>~/.fonts</dir>
        <match target="pattern">
          <test qual="any" name="family"><string>Arial</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <alias>
          <family>sans-serif</family>
          <prefer>
            <family>Linux Biolinum O</family>
          </prefer>
        </alias>
        <alias>
          <family>serif</family>
          <prefer>
            <family>Linux Libertine O</family>
          </prefer>
        </alias>
        <alias>
          <family>monospace</family>
          <prefer>
            <family>Inconsolata</family>
          </prefer>
        </alias>
        <selectfont>
          <rejectfont>
            <glob>/usr/share/fonts/default/Type1/*</glob>
            <pattern>
              <patelt name="scalable">
                <bool>false</bool>
              </patelt>
            </pattern>
          </rejectfont>
        </selectfont>
      </fontconfig>

*** Desktop
    These DBus services are provided by plasma-workspace-units.
    #+BEGIN_SRC sh :dir /sudo::
      rm /usr/share/dbus-1/services/org.kde.{kded5,kglobalaccel,kuiserver,kwalletd5}.service
    #+END_SRC

*** Picard
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S picard chromaprint
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/MusicBrainz/Picard.conf
      [setting]
      server_host=musicbrainz.org
      server_port=80

      fingerprinting_system=acoustid
      acoustid_apikey=<<acoustid_key>>
      acoustid_fpcalc=/usr/bin/fpcalc

      save_images_to_tags=true
      save_only_front_images_to_tags=true
      save_images_to_files=false
      ca_provider_use_amazon=true
      ca_provider_use_caa=true
      ca_provider_use_caa_release_group_fallback=true
      ca_provider_use_whitelist=true
      caa_image_size=1
      caa_approved_only=true
      caa_restrict_image_types=true
      analyze_new_files=false
      ignore_file_mbids=false
      quit_confirmation=true
      va_name=Various Artists
      nat_name=
      standardize_artists=true

      windows_compatibility=true
      ascii_filenames=false
      rename_files=true
      move_files=true
      file_naming_format="$if2(%albumartist%,%artist%)/$if($ne(%albumartist%,),%album%/)$if($gt(%totaldiscs%,1),%discnumber%-,)$if($ne(%albumartist%,),$num(%tracknumber%,2) ,)$if(%_multiartist%,%artist% - ,)%title%"
      move_files_to=<<fav_music>>/_new
      move_additional_files=true
      move_additional_files_pattern=*.jpg *.png *.jpeg
      delete_empty_dirs=true

      browser_integration=true
      browser_integration_port=8000
      browser_integration_localhost_only=true

      dont_write_tags=false
      preserve_timestamps=false
      write_id3v1=true
      write_id3v23=true
      id3v23_join_with=/
      id3v2_encoding=utf-16
      remove_ape_from_mp3=true
      remove_id3_from_flac=true
    #+END_SRC
*** mpd
    :PROPERTIES:
    :header-args+: :dir ~
    :END:

    Create playlist
    #+BEGIN_SRC sh
      mpc listall > <<fav_music>>/pq.m3u
    #+END_SRC

    Shuffle and play
    #+BEGIN_SRC sh :results raw
      mpc -q clear && mpc load pq && mpc -q shuffle && mpc play
    #+END_SRC

    Delete currently playing track
    #+BEGIN_SRC sh :eval query
      rm -v <<fav_music>>/"$(mpc -f %file% | head -1)"
    #+END_SRC

*** mpv
    #+BEGIN_SRC conf :tangle ~/.config/mpv/mpv.conf
      sub-auto=fuzzy
      hwdec=auto
      hwdec-codecs=all
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/mpv/input.conf
      q quit_watch_later
      MOUSE_BTN0 cycle pause
      MOUSE_BTN1 show_progress
      MOUSE_BTN2 cycle fullscreen
      z set window-scale 0.5
      Z set window-scale 1

      ; show_progress
      f show_text "${filename}"
      d cycle audio
      y add volume 1
      i add volume -1
      g add sub-delay  0.1
      h add sub-delay -0.1
      x cycle mute

      k frame_step
      ' seek +10
      a seek -10
      , seek +60
      o seek -60
      . seek +300
      e seek -300

      u cycle fullscreen
    #+END_SRC
* Emacs
  :PROPERTIES:
  :header-args+: :tangle ~/.emacs
  :END:

  OOBE settings:
  #+BEGIN_SRC elisp
    (server-mode t)
    (desktop-save-mode t)
    (global-set-key (kbd "C-x C-r")
                    (lambda () (interactive)
                      (revert-buffer :noconfirm t)))
    (defalias 'yes-or-no-p #'y-or-n-p)
    (defalias 'dabbrev-expand #'hippie-expand)
    (defalias 'man #'woman)
    (setq auto-save-default nil
          calendar-week-start-day 1
          default-input-method "vietnamese-telex"
          desktop-load-locked-desktop t          
          inhibit-startup-screen t
          make-backup-files nil
          scroll-preserve-screen-position t
          tramp-default-method "ssh"
          undo-tree-mode-lighter "" 
          visible-bell t
          frame-title-format "%b")
    (set-language-environment "UTF-8")
    (setq-default buffer-file-coding-system 'utf-8-unix)
    (setq-default sentence-end-double-space nil)
    (global-set-key (kbd "C-\\") #'toggle-input-method)
    (tool-bar-mode -1)
    (blink-cursor-mode -1)
    (show-paren-mode t)
    (global-hl-line-mode t)
    (winner-mode)
  #+END_SRC

  Package management
  #+BEGIN_SRC elisp
    (package-initialize)
    (setq package-archives
          '(("gnu" . "https://elpa.gnu.org/packages/")
            ("marmalade" . "https://marmalade-repo.org/packages/")
            ("melpa" . "http://melpa.org/packages/")))
    (unless (package-installed-p 'use-package)
      (package-refresh-contents)
      (package-install 'use-package))
    (require 'use-package)
  #+END_SRC

  Color theme
  #+BEGIN_SRC elisp
    (use-package color-theme-sanityinc-solarized :ensure
      :config (load-theme 'sanityinc-solarized-light t))
  #+END_SRC

  Font on Windows
  #+BEGIN_SRC elisp
    (when (eq window-system 'w32)
      (if (> window-system-version 5)
          (set-default-font "Consolas-12" :frames t)
        (set-default-font "Lucida Console-10" :frames t)))
  #+END_SRC

** Editing
   Vim-style
   #+BEGIN_SRC elisp
     (use-package evil :ensure
       :config
       (progn
         (evil-mode t)
         (evil-set-initial-state 'special-mode 'emacs)
         (dolist (state '(normal motion))
           (evil-define-key state global-map
             (kbd "<SPC>") #'evil-scroll-down
             (kbd "S-<SPC>") #'evil-scroll-up))
         (dolist (state '(insert motion normal))
           (evil-define-key state global-map
             (kbd "C-t") #'transpose-chars
             (kbd "C-d") #'delete-char
             (kbd "C-k") #'kill-line
             (kbd "C-y") #'evil-paste-before
             (kbd "C-a") #'beginning-of-line (kbd "C-e") #'end-of-line
             (kbd "C-f") #'forward-char   (kbd "C-b") #'backward-char
             (kbd "C-n") #'next-line      (kbd "C-p") #'previous-line
             (kbd "<down>") #'next-line   (kbd "<up>") #'previous-line
             (kbd "j") #'next-line        (kbd "k") #'previous-line
             (kbd "C-v") #'evil-scroll-down (kbd "M-v") #'evil-scroll-up
             (kbd "C-r") #'isearch-backward))
         (evil-define-key 'insert global-map
           "j" #'self-insert-command "k" #'self-insert-command)
         (evil-define-key 'motion help-mode-map
           (kbd "<tab>") #'forward-button)))
   #+END_SRC

   Automatic parens
   #+BEGIN_SRC elisp
     (use-package smartparens :ensure
       :diminish ""
       :config (progn (require 'smartparens-config)
                      (smartparens-global-mode t)))
   #+END_SRC

   Aggressive indent
   #+BEGIN_SRC elisp
     (use-package aggressive-indent :ensure
       :diminish ""
       :config (global-aggressive-indent-mode))
   #+END_SRC

   Switch window with ace
   #+BEGIN_SRC elisp
     (use-package ace-window :ensure
       :config (ace-window-display-mode 1)
       :bind ("C-x o" . ace-window))
   #+END_SRC

   Do things with helm:
   #+BEGIN_SRC elisp
     (use-package helm :ensure
       :config (progn
                 (helm-mode 1)
                 (define-key shell-mode-map (kbd "M-r") #'helm-comint-input-ring))
       :diminish helm-mode
       :bind (("C-h SPC" . helm-all-mark-rings)
              ("C-x b" . helm-mini)
              ("C-x C-b" . helm-buffers-list)
              ("C-x C-f" . helm-find-files)
              ("C-c g" . helm-do-grep)
              ("M-s o" . helm-occur)
              ("M-x" . helm-M-x)))
     (require 'helm-config)
     (use-package evil
       :config (dolist (state '(insert motion normal))
                 (evil-define-key state global-map
                   (kbd "M-y") #'helm-show-kill-ring)))
   #+END_SRC

** Org
   #+BEGIN_SRC elisp
     (add-hook 'org-mode-hook
               '(lambda ()
                  (add-hook 'before-save-hook 'org-align-all-tags
                            :local t)))
     (org-babel-do-load-languages 'org-babel-load-languages
                                  '((sh .t)))
     (setq org-src-fontify-natively t)
   #+END_SRC

*** Crypt
    #+BEGIN_SRC elisp
      (require 'org-crypt)
      (add-hook 'org-mode-hook
                '(lambda ()
                   (add-hook 'before-save-hook 'org-encrypt-entries
                             :local t)))
      (setq org-tags-exclude-from-inheritance '("crypt"))
      (setq org-crypt-key "<<username>>@keybase.io")
    #+END_SRC

    Make it possible to tangle encrypted block
    #+BEGIN_SRC elisp
      (remove-hook 'org-babel-pre-tangle-hook #'save-buffer)
    #+END_SRC

** Doc-View
   #+BEGIN_SRC elisp
     (setq doc-view-resolution 300
           doc-view-cache-directory (expand-file-name "~/.emacs.d/doc-view"))
     (use-package evil
       :config (add-hook 'view-mode-hook #'evil-emacs-state))
   #+END_SRC

** Dired
   #+BEGIN_SRC elisp
     (use-package dired+ :ensure
       :config (progn (require 'dired+)
                      (global-dired-hide-details-mode -1)))
     (defun dired-open ()
       (interactive)
       (dired-do-shell-command "xdg-open &" :file-list (dired-get-marked-files)))
     (eval-after-load 'dired
       '(progn (define-key dired-mode-map (kbd "RET") #'dired-open)
               (define-key dired-mode-map (kbd "<mouse-2>") #'dired-open)))
     (setq dired-recursive-copies 'always
           dired-recursive-deletes 'always
           dired-listing-switches "-alh"
           dired-guess-shell-alist-user
           '(("\\.cb.\\'" "okular")
             ("." "xdg-open;")))
   #+END_SRC
   
** Eshell
   Put eshell on a convenient binding
   #+BEGIN_SRC elisp
     (global-set-key (kbd "C-x M-m") #'eshell)
   #+END_SRC

   I like the prompt to be on a separate line.
   #+BEGIN_SRC elisp
     (setq eshell-prompt-function
           '(lambda ()
              (concat (eshell/pwd) "\n"
                      (int-to-string eshell-last-command-status) " % "))
           eshell-prompt-regexp "^[[:digit:]]\\{1,3\\} % ")
   #+END_SRC

   These are terminal-manipulating commands
   #+BEGIN_SRC elisp
     (eval-after-load 'em-term
       '(progn
          (dolist (prog '("atop" "systemd-cgls" "journalctl"))
            (add-to-list 'eshell-visual-commands prog))
          (add-to-list 'eshell-visual-options '("ssh" "-t"))))
   #+END_SRC

   Profile:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/profile :no-expand
     addpath ~/Copy/bin
   #+END_SRC

   Aliases:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias vim find-file $1
     alias i yaourt $*
     alias j journalctl -afb $*
     alias sc <<system_ctl>> $*
     alias uc <<user_ctl>> $*
     alias ytdl <<yt-dl>> -a /home/<<username>>/q.txt
     alias fr free -h
   #+END_SRC

* Ansible
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ansible
  #+END_SRC

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package yaml-mode :ensure)
         (use-package ansible-doc :ensure
           :config (add-hook 'yaml-mode-hook #'ansible-doc-mode))))
  #+END_SRC

** Inventory
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible_inventory
   :END:

   Here are the hosts and their variables
   #+BEGIN_SRC conf
     [arch]
     kub ansible_python_interpreter=/usr/bin/python2
     ton ansible_python_interpreter=/usr/bin/python2 ansible_connection=local

     [all:vars]
     user=<<username>>
     home=/home/<<username>>
     h=<<storage>>
     conf="{{h}}/config/{{ansible_hostname}}"
     locale=en_US
     prefix=<<prefix>>
   #+END_SRC

** Config
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible.cfg
   :END:

   Keep the inventory here
   #+BEGIN_SRC conf
     [defaults]
     inventory = ~/.ansible_inventory
   #+END_SRC

   For some reason ControlMaster isn't working
   #+BEGIN_SRC conf
     [ssh_connection]
     ssh_args=-o ControlMaster=no
   #+END_SRC

* Firefox
  :PROPERTIES: 
  :header-args+: :tangle ~/.pentadactylrc
  :END:      
  This file is in vimrc syntax

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(use-package vimrc-mode :ensure))
  #+END_SRC

  Use DuckDuckGo:

  #+BEGIN_SRC vimrc
    silent bmark -keyword ddg -t DDG https://duckduckgo.com/?kn=1&kp=-1&kae=c&q=%s
    set defsearch=ddg
  #+END_SRC

  Use backspace to go back:
  #+BEGIN_SRC vimrc
    set! browser.backspace_action=0
  #+END_SRC

  Don't let middle mouse paste:
  #+BEGIN_SRC vimrc
    set! middlemouse.contentLoadURL=false
  #+END_SRC

  Restore C-j for Downloads:
  #+BEGIN_SRC vimrc
    map <C-j> -ex dialog downloads
  #+END_SRC

  Bind stop to an easy binding:
  #+BEGIN_SRC vimrc
    map s <C-c>
  #+END_SRC

  Make scrolling easier:
  #+BEGIN_SRC vimrc
    map <space> <C-d>
    map <S-space> <C-u>
  #+END_SRC

  Pin tab:
  #+BEGIN_SRC vimrc
    map <A-p> -ex pintab!
  #+END_SRC

  Move to first or last:
  #+BEGIN_SRC vimrc
    map <A-!> -ex tabm 1
    map <A-$> -ex tabm $
  #+END_SRC

  Fast switching:
  #+BEGIN_SRC vimrc
    map -m normal,insert <F1> <C-^>
  #+END_SRC

  Don't raise these openings:
  #+BEGIN_SRC vimrc
    set activate-=diverted,links,tabopen,paste
  #+END_SRC

  Open help in a new tab
  #+BEGIN_SRC vimrc
    set newtab=help
  #+END_SRC

  Keep hint keys under left fingers:
  #+BEGIN_SRC vimrc
    set hintkeys=12345
  #+END_SRC

  Make hint text readable
  #+BEGIN_SRC vimrc
    highlight Hint -append font-size: 14px !important
  #+END_SRC

  Unzoom image:
  #+BEGIN_SRC vimrc
    map <A-t> -js content.document.toggleImageSize()
  #+END_SRC

  Show link in commandline:
  #+BEGIN_SRC vimrc
    set guioptions+=c
    set showstatuslinks=command
  #+END_SRC

  Scroll by one line:
  #+BEGIN_SRC vimrc
    set scrollsteps=1
  #+END_SRC

  Show feeds first in pageinfo:
  #+BEGIN_SRC vimrc
    set pageinfo=fgmse
  #+END_SRC

  Use visual bell:
  #+BEGIN_SRC vimrc
    set visualbell
  #+END_SRC

  Bookmarks and preferences:
  #+BEGIN_SRC vimrc
    map <C-S-s> -ex bmark -keyword ac -t config about:config
    \ bmark -keyword bgp -t BGP http://bgp.he.net/search?search[search]=%s
    \ bmark -keyword v -t valsi http://vlasisku.lojban.org/?query=%s
    \ bmark -keyword c -t camxes http://camxes.lojban.org/?text=%s
    \ bmark -keyword yb -t youtube https://youtube.com/watch?v=%s
    \ bmark -keyword cw -t 'CrawlWiki' http://crawl.chaosforge.org/index.php?title=Special%3ASearch&search=%s
    \ bmark -keyword dw -t 'Dota 2 Wiki' http://dota2.gamepedia.com/index.php?title=Special%3ASearch&search=%s
    \ bmark -keyword dr -t 'Dota 2 Random' http://dota2.gamepedia.com/Special:Random
    \ bmark -keyword df -t 'Dota 2 fix' http://dev.dota2.com/showthread.php?t=28814
    \ bmark -keyword er -t 'POE Random' http://pathofexile.gamepedia.com/Special:Random
    \ bmark -keyword lp -t LP http://lparchive.org/search/%s#results
    \ bmark -keyword ix -t ix -post f:1=%s http://ix.io/
    \ bmark -keyword io -t ixopen http://ix.io/%s/
    \ bmark -keyword bb -t burnbit http://burnbit.com/burn?file=%s
    \ bmark -keyword b -t btdigg https://btdigg.org/search?q=%s&order=0&p=0
    \ bmark -keyword ba -t btdigg https://btdigg.org/search?q=%s&order=2&p=0
    \ bmark -keyword mt -t metasearch http://metasearch.torrentproject.com/#!search=%s
    \ bmark -keyword lf -t last.fm http://last.fm/user/hdh0#recentTracks
    \ bmark -keyword m -t zing http://mp3.zing.vn/tim-kiem/bai-hat.html?q=%s
    \ bmark -keyword ma -t artist http://musicbrainz.org/search?advanced=1&type=artist&tport=8000&query=%s
    \ bmark -keyword mg -t group http://musicbrainz.org/search?advanced=1&type=release_group&tport=8000&query=%s
    \ bmark -keyword mr -t recording http://musicbrainz.org/search?advanced=1&type=recording&tport=8000&query=%s
    \ bmark -keyword ts -t 'tor address' https://atlas.torproject.org/#search/kub
    \ bmark -keyword gm -t gmail https://mail.google.com/mail/#spam
    \ bmark -keyword fb -t facebook https://fb.me/%s
    \ bmark -keyword w -t wallabag https://framabag.org/u/<<username>>/?action=random
    \ set! accessibility.browsewithcaret_shortcut.enabled=false
    \ set! browser.newtabpage.enabled=false
    \ set! browser.privatebrowsing.dont_prompt_on_enter=true
    \ set! browser.sessionstore.restore_pinned_tabs_on_demand=true
    \ set! browser.shell.checkDefaultBrowser=false
    \ set! browser.startup.homepage=about:blank
    \ set! browser.startup.page=3
    \ set! general.warnOnAboutConfig=false
    \ set! security.OCSP.enabled=0
    \ set! security.warn_viewing_mixed=false
    \ set! layout.spellcheckDefault=0
    \ set! middlemouse.paste=true
    \ set! ui.key.menuAccessKey=0
    \ set! browser.anchor_color="#6c71c4"
    \ set! browser.display.background_color="#fdf6e3"
    \ set! browser.display.foreground_color="#657b83"
    \ set! browser.display.use_system_colors=false
    \ set! font.default.x-western="sans-serif"
    \ set! font.minimum-size.x-western=15
    \ if /NT 6/.test(window.navigator.oscpu)
    \     set! font.name.monospace.x-western=Consolas
    \ fi
    \ set! extensions.checkCompatibility.nightly=false
    \ set! extensions.https_everywhere._observatory.alt_roots=true
    \ set! extensions.https_everywhere._observatory.enabled=true
    \ set! extensions.https_everywhere._observatory.priv_dns=true
    \ set! plugins.hide_infobar_for_missing_plugin=true
    \ set! browser.download.manager.alertOnEXEOpen=false
    \ set! browser.download.manager.scanWhenDone=false
    \ set! browser.search.context.loadInBackground=true
    \ set! intl.charset.default=UTF-8
    \ set! network.http.pipelining=true
    \ set! network.http.pipelining.aggressive=true
    \ set! network.http.pipelining.ssl=true
    \ set! network.protocol-handler.expose.magnet=false
    \ set! network.proxy.socks=kub.<<domain>>
    \ set! network.proxy.socks_port=9050
    \ set! network.proxy.socks_remote_dns=true
    \ set! toolkit.telemetry.enabled=true
    \ js services.permissions.add(services.io.newURI("http:depositfiles.com",null,null), 'image', services.permissions.DENY_ACTION)
    \ js services.loginManager.setLoginSavingEnabled("accounts.google.com", false)
  #+END_SRC

  Strip tracker from location, thanks to [[https://userscripts.org/scripts/show/93825][Bruno Barão]] and [[https://github.com/5digits/dactyl/commit/7a1ffa5b555399c5d0925ad599e2640070bd128d][Kris Maglione]].
  #+BEGIN_SRC vimrc
    autocmd DOMLoad (utm|wa)_ -js win.history.replaceState("Remove trackers", '', doc.location.href.replace(/&?(utm|wa)_[^&]+/g,'').replace(/\?$/,''))
  #+END_SRC

  Feedly
  #+BEGIN_SRC vimrc
    map <A-f> -js dactyl.open("https://feedly.com/i/spotlight/" + content.location)
    js services.permissions.add(services.io.newURI("http:feedly.com",null,null), 'popup', services.permissions.ALLOW_ACTION)
    set passkeys+=feedly.com:vjkga
    style feedly.com <<EOS
    .websiteCallForAction { display: none !important }
    EOS
  #+END_SRC

  Pocket
  #+BEGIN_SRC vimrc
    passkeys+=getpocket.com:ajk
    style getpocket.com <<EOS
    ,* { font-family: sans-serif !important }
    code, pre { font-family: monospace !important }
    EOS
  #+END_SRC

  Site keyboard shortcuts:
  #+BEGIN_SRC vimrc
    set passkeys+=tumblr.com:jk
    set passkeys+=mail.google.com/mail/:'#!ms+-/? jknpu'
    set passkeys+=google.com/contacts/:'#jkoux,.'
  #+END_SRC

  Switch to reader mode:
  #+BEGIN_SRC vimrc
    map <A-r> -js dactyl.open("about:reader?url=" + content.location)
  #+END_SRC

* Secrets							      :crypt:
-----BEGIN PGP MESSAGE-----
Version: GnuPG v2

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
=wSPG
-----END PGP MESSAGE-----
