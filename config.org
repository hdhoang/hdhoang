#+STARTUP: showall
#+PROPERTY: header-args+ :cache yes
#+PROPERTY: header-args+ :comments org
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :noweb yes
#+PROPERTY: header-args+ :results silent
#+PROPERTY: header-args+ :tangle-mode 384
#+PROPERTY: header-args:text+ :eval no
* Hoang Duc Hieu
#+EMAIL: 1988 / +84-166-241-9526 / cv@zahe.me
#+OPTIONS: toc:nil date:nil arch:nil num:nil author:nil email:t
#+LATEX_CLASS_OPTIONS: [twocolumn]
#+LATEX_HEADER: \usepackage{titling}
#+LATEX_HEADER: \pretitle{\begin{flushright}\LARGE}
#+LATEX_HEADER: \posttitle{\par\end{flushright}}
#+LATEX_HEADER: \preauthor{\begin{flushright}}
#+LATEX_HEADER: \postauthor{\end{flushright}}
#+LATEX_HEADER: \pagenumbering{gobble}
** Education
  - 2014 - now :: Studying System Administration at Bachkhoa-Aptech
                  (graduating early 2017)
  - 2013 - 2014 :: Finished K12 and completed accounting course at
                   Quang Trung private school
  - 2007 - 2012 :: Self-learned various topics
    - Programming languages (web and backend)
    - History of free software
    - Hanoi GNU/Linux user community
    - Wing-chun martial arts
    - The constructed logical language Lojban
  - 2006 - 2007 :: Freshman in computer programming at Monash College,
                   Australia (earned Distinction and High Distinction
                   in most subjects)
  - 2003 - 2006 :: Chu Van An Highschool, majoring in English (earned
                   2nd place in city-level competition)
#+LATEX: \newpage
** Qualifications and skills
*** IT skills
  - In-depth GNU/Linux usage and administration, experienced in
    self-hosting web sites
  - Comprehensive network understanding
  - Office equipment troubleshooting
  - Familiarity with various OSes
  - Using version control systems, especially git
  - Contributing to free software projects ([[https://github.com/hdhoang][GitHub profile]])
*** Language skills
  - Fluency in English (990 in TOEIC, 2015)
  - Elementary Japanese (striving to acquire N3 in early 2016)
*** Others
  - Self-teaching discipline
  - Strong interest in learning new topics
** Objectives							    :ARCHIVE:
  - What ::
    + Resident technician for an organization
    + System/network administrator at a service provider
  - When :: part-time, until graduation
  - Why :: a challenging field with continual updates, but still have low-stress time for self-improving
  - Who :: NGO, SME
  - Where :: HN - HY - HD
** Interests
  - Exploring science, history, and natural subjects
  - Science-fictional novels, rational fanfictions
  - Electric guitar riffs
  - Frequent blood donor (until no longer eligible)
* Places and names
  #+NAME: username
  #+BEGIN_SRC text
    hdhoang
  #+END_SRC

  #+NAME: domain
  #+BEGIN_SRC text
    zahe.me
  #+END_SRC

  #+BEGIN_SRC emacs-lisp :tangle ~/.emacs
    (setq user-mail-address "<<username>>@<<domain>>")
  #+END_SRC

  #+NAME: storage
  #+BEGIN_SRC text
    /home/<<username>>/Copy
  #+END_SRC

  #+NAME: fav_music
  #+BEGIN_SRC text
    /home/<<username>>/Music
  #+END_SRC

  #+NAME: prefix
  #+BEGIN_SRC text
    10.117.14
  #+END_SRC

  #+NAME: system_ctl
  #+BEGIN_SRC text
    systemctl --system --no-pager
  #+END_SRC

  #+NAME: user_ctl
  #+BEGIN_SRC text
    systemctl --user --no-pager
  #+END_SRC

  #+NAME: pacman
  #+BEGIN_SRC text
    pacman --noconfirm --needed
  #+END_SRC

  #+NAME: ytdl
  #+BEGIN_SRC text
    youtube-dl --format "[height <=? 720]" --output ~/Videos/"%(uploader)s %(upload_date)s %(title)s@%(id)s.%(ext)s"
  #+END_SRC

* VPN
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S openvpn
  #+END_SRC
  #+NAME: openvpn_common
  #+BEGIN_SRC conf
    dev tun
    topology subnet
    persist-key
    persist-tun
    keepalive 10 30
    tls-version-min 1.2
    tls-cipher TLS-DHE-RSA-WITH-AES-128-CBC-SHA
    <tls-auth>
    <<ta_key>>
    </tls-auth>
    <ca>
    -----BEGIN CERTIFICATE-----
    MIIEYTCCA0mgAwIBAgIJAPxrcItU3yz8MA0GCSqGSIb3DQEBCwUAMH0xCzAJBgNV
    BAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFOb2kxDTALBgNVBAoTBHph
    aGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3phaGUubWUxHjAcBgkqhkiG
    9w0BCQEWD2hkaG9hbmdAemFoZS5tZTAeFw0xNTA5MjYxMTM0NTRaFw0yNTA5MjMx
    MTM0NTRaMH0xCzAJBgNVBAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFO
    b2kxDTALBgNVBAoTBHphaGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3ph
    aGUubWUxHjAcBgkqhkiG9w0BCQEWD2hkaG9hbmdAemFoZS5tZTCCASIwDQYJKoZI
    hvcNAQEBBQADggEPADCCAQoCggEBANXOfdISWeotIr3neKpj6IGBlCLMEBNtMB1r
    bTIgkxe9tnNd4jBufq6duLK91ioqcJiAxMLRovYtaRTOpQit5/PnAm2Iwu3u2mGX
    EftWEBSVt437NMVA6L2Jemv1lp81vmzJIODgPQ9elrNteQ3ccAMCpuj/l6PhGeFq
    JvK+dNIJcm2+xM15S6ESwjsZxwijiT3TMJAjXJPC5R3gpULoTHrphPGrS/0RIq9c
    Bd/+4Q7k1MguPK2XSKHiJnUIkQJ/m/XGT2iXVEzhOsHZ8vlaNq1xBzTko10nEb7I
    sOQjuH4GCZMeoYnF3egg534fg+BYPAecuKglqdIpnm4+syJsrR0CAwEAAaOB4zCB
    4DAdBgNVHQ4EFgQUsDCM7/aJ6AjPVQPEbdDTiTa9WIswgbAGA1UdIwSBqDCBpYAU
    sDCM7/aJ6AjPVQPEbdDTiTa9WIuhgYGkfzB9MQswCQYDVQQGEwJWTjELMAkGA1UE
    CBMCSE4xDjAMBgNVBAcTBUhhTm9pMQ0wCwYDVQQKEwR6YWhlMRAwDgYDVQQDEwd6
    YWhlIENBMRAwDgYDVQQpEwd6YWhlLm1lMR4wHAYJKoZIhvcNAQkBFg9oZGhvYW5n
    QHphaGUubWWCCQD8a3CLVN8s/DAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUA
    A4IBAQAKkiDOWmwu1D+qbCSYaSxiMfJ70FyA/o+AuCDeaGxKdFLZ2JQgYK/az3y8
    tGQKBc6AdUY7BoN1Ab/6TOz+hWvmyNOOvq2AMgt2bHHA+JquRZMdgw59OtbB2BjC
    vBs2cxRJWdmv8aSltcqVpm2HNHy3mzcq8i0CdFluxDV+zQmvhGVypAipYTlhdi0l
    KLJlB+3fqS5GQB0wPmkV2N6WJdm0NfoTbBOCXwVb4ChyrgryQaOQi5nu8wO9tzeO
    kK/jQJRFKpdwBYqAe0Q/JP95pVjctyiVFg97ppvQ557QFcY1pHapAwhyBmxYiLak
    W4pz42IduC2pnZ3ut4C7UzpeDMRr
    -----END CERTIFICATE-----
    </ca>
  #+END_SRC

* SSH
  :PROPERTIES:
  :header-args+: :tangle ~/.ssh/config
  :END:

  SSH encryption settings by https://stribika.github.io/2015/01/04/secure-secure-shell.html

  #+BEGIN_SRC conf
    Host *
    KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
    Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com,hmac-sha1
  #+END_SRC

  Machines
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    vorme ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCf2C8j0GFA8eq8Vgva/9KI4cF4Q23v4rBk6zAxoyIJvENGkpDuUba4AOMabUkPiXU76KVbx/h4fOivjrWoUNG6Z0xEOJTQqVwuk7788dwIm49Ba+ZOC/sCtT7dsbshFpzXmkdASsZty0foFSILRADDTlB1MZiN9wJRlnjkmIO9WiSMYnuGzolO2f+Gy6LFrtQF1ZgOOqPToO4u4li3VPh1zdoY5+IQul9BQJGU7tMZrleH09LcOUlip8SHZYuXu/Zlb9GSK7Cj7WfGaR0k+xvs657n41haffQ5CxTjocqZdv7eO4Uo2ryWXn2Ck7DwKH6KMjEJZRbX32zLsTacQNgR
    kub,<<prefix>>.54 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGtY5ERdvH+mAQKfy270I+eEaZ2i6FhhEjG0EuzDxIym
  #+END_SRC
  #+BEGIN_SRC conf
    Host vorme
    User root
    IdentityFile ~/.ssh/kub
    Host kub
    User <<username>>
    IdentityFile ~/.ssh/kub
  #+END_SRC
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'tramp
      '(add-to-list 'tramp-default-proxies-alist '("kub" "root" "/ssh:kub:")))
  #+END_SRC

* KDE
** kwin
   :PROPERTIES:
   :header-args+: :tangle ~/.config/kwinrulesrc
   :END:

   #+BEGIN_SRC conf
     [1]
     Description=Window settings for firefox
     shortcut=F5
     shortcutrule=2
     windowrole=browser
     windowrolematch=1
     wmclass=navigator firefox
     wmclasscomplete=true
     wmclassmatch=1
   #+END_SRC

   Put emacs on F4
   #+BEGIN_SRC conf
     [2]
     Description=Application settings for emacs
     shortcut=F4
     shortcutrule=2
     wmclass=emacs
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   Put konsole on F6
   #+BEGIN_SRC conf
     [3]
     Description=Application settings for konsole
     shortcut=F6
     shortcutrule=2
     wmclass=konsole
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   #+BEGIN_SRC conf
     [4]
     Description=No border on anything
     noborder=true
     noborderrule=2
   #+END_SRC

   #+BEGIN_SRC conf
     [General]
     count=4
   #+END_SRC

* Git
  #+BEGIN_SRC conf :tangle .git/config
    [core]
            repositoryformatversion = 0
            filemode = true
            bare = false
            logallrefupdates = true
    [remote "origin"]
            url = https://gitlab.com/<<username>>/<<username>>
            pushUrl = gitlab.com:<<username>>/<<username>>
            pushUrl = github.com:<<username>>/<<username>>
            pushUrl = bitbucket.org:<<username>>/<<username>>
            fetch = +refs/heads/*:refs/remotes/origin/*
    [branch "master"]
            remote = origin
            merge = refs/heads/master
  #+END_SRC

  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S git
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [user]
    name = Hoàng Đức Hiếu
    email = <<username>>@<<domain>>
    [color]
    ui = auto
    [core]
    eol = lf
    whitespace = trailing-space,space-before-tab
    [alias]
    ml = log --reverse --topo-order ORIG_HEAD..
    [merge]
    conflictstyle = diff3
    [push]
    default = simple
    [pull]
    rebase = true
    [rebase]
    stat = true
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias g git $*
  #+END_SRC

  Code hosting sites:
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
    gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
  #+END_SRC
  #+BEGIN_SRC conf :tangle ~/.ssh/config
    Host gitlab.com github.com bitbucket.org
    User git
    IdentityFile ~/.ssh/git
    Host git.kde.org
    User git
    IdentityFile ~/.ssh/kde
    Host heroku.com
    IdentityFile ~/.ssh/heroku
  #+END_SRC

  Magit is awesome.
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package magit
           :bind ("C-x g" . magit-status)
           :config
           (setq magit-save-repository-buffers 'dontask
                 magit-push-always-verify nil))))
  #+END_SRC

* Crawl
  #+BEGIN_SRC conf :tangle ~/.crawlrc
    tile_full_screen = false
    autopickup_exceptions += <tomahawk, <throwing net, <javelin, <rock, <immol
    autopickup_exceptions += <misc, <ego, <artefact, <mutagenic
  #+END_SRC

* ArchLinux
  Pacman config
  #+NAME: pacman_common
  #+BEGIN_SRC conf
    [options]
    VerbosePkgLists
    UseSyslog
    CheckSpace
    HoldPkg = pacman glibc
    SigLevel = Required DatabaseOptional
    LocalFileSigLevel = Optional

    [core]
    Include = /etc/pacman.d/mirrorlist
    [extra]
    Include = /etc/pacman.d/mirrorlist
    [community]
    Include = /etc/pacman.d/mirrorlist
    [blackarch]
    Server = http://f.archlinuxvn.org/$repo/$repo/os/$arch
  #+END_SRC

  Refresh database
  #+BEGIN_SRC sh :dir /sudo::
    dirmngr --daemon
    pacman-key -r 7533BAFE69A25079
    pacman-key --lsign 7533BAFE69A25079
    <<pacman>> -S -y
  #+END_SRC

  AUR helper
  #+BEGIN_SRC yaml :tangle ~/Copy/bin/aur :shebang #!/bin/ansible-playbook
    - hosts: arch
      gather_facts: no
      vars:
        store: /tmp/aur
      vars_prompt:
        - name: package
          private: no
      tasks:
        - file: state=directory path={{store}}
        - get_url: url=https://aur4.archlinux.org/cgit/aur.git/snapshot/{{package}}.tar.gz dest={{store}}/
        - unarchive: copy=no src={{store}}/{{package}}.tar.gz dest={{store}}
        - command: nice makepkg --noconfirm --install --force --syncdeps chdir={{store}}/{{package}}
  #+END_SRC

  Yaourt config
  #+BEGIN_SRC conf :tangle ~/.yaourtrc
    AURUPGRADE=1
    EXPORT=1
    EXPORTDIR=~
    BUILD_NOCONFIRM=1
    EDITFILES=0
  #+END_SRC

  Base utils
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S haveged p7zip parallel pkgfile yaourt
    <<system_ctl>> enable --now haveged
  #+END_SRC

  #+BEGIN_SRC sh
    pkgfile -u
  #+END_SRC

  Dev-env:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S base-devel rust android-tools
  #+END_SRC

  Monitoring:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ethtool lm_sensors net-tools psmisc \
        procps-ng inetutils ltrace sysdig atop iotop
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/Copy/bin/strace :shebang #!/bin/sh :no-expand
    exec /usr/bin/ltrace -CSn2 $@
  #+END_SRC

  Of course emacs is installed, now run it
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S emacs-pkgbuild-mode
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.config/systemd/user/emacs.service
    [Unit]
    Description=Emacs

    [Service]
    ExecStart=/bin/emacs
    Restart=always
    RestartSec=1sec

    [Install]
    WantedBy=default.target
  #+END_SRC

  #+BEGIN_SRC sh :dir ~
    <<user_ctl>> enable --now emacs syncthing pulseaudio
  #+END_SRC

** kub
   :PROPERTIES:
   :header-args+: :dir /sudo:kub:
   :END:
*** Mounts
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/fstab
      LABEL=<<username>> /home/<<username>> auto
      LABEL=var /var auto
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/systemd/network/eth0.network
      [Match]
      Name = eth0

      [Network]
      Address = <<prefix>>.54/24
      Gateway = <<prefix>>.1
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/resolv.conf
      nameserver <<prefix>>.1
    #+END_SRC

*** Pacman
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/pacman.conf :tangle-mode 260
      <<pacman_common>>

      [options]
      Architecture = armv7h

      [alarm]
      Include = /etc/pacman.d/mirrorlist
      [aur]
      Include = /etc/pacman.d/mirrorlist
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/pacman.d/mirrorlist
      Server = http://vn.mirror.archlinuxarm.org/$arch/$repo
    #+END_SRC

*** LED blinking
    #+BEGIN_SRC sh :tangle /sudo:kub:/usr/local/bin/leds :shebang #!/bin/sh
      echo none > /sys/class/leds/cubieboard:green:usr/trigger
      echo mmc0 > /sys/class/leds/cubieboard:blue:usr/trigger
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/systemd/system/leds.service
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/leds
      RemainAfterExit=true

      [Install]
      WantedBy=basic.target
    #+END_SRC

*** Tor
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S tor
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/tor/torrc
      ContactInfo tor at zahe dot me
      Nickname kub
      DirPort 4660
      ORPort 5880
      SOCKSPort <<prefix>>.54:9050
      MaxAdvertisedBandwidth 40 KBytes
      ExitPolicy reject *:*

      DataDirectory /var/lib/tor
      Log notice syslog
    #+END_SRC

*** HTTP
    #+BEGIN_SRC sh
      <<pacman>> -S nginx
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/nginx/nginx.conf
      events {}
      http {
      include       mime.types;
      default_type  text/plain;
      charset utf-8;
      gzip off;

      access_log  off;
      log_not_found off;

      server {
      return 301 https://$host$request_uri;
      }

      ssl_protocols TLSv1.2;
      ssl_ciphers EECDH+CHACHA20:EECDH+AES128;
      ssl_prefer_server_ciphers on;
      add_header Strict-Transport-Security max-age=31536000;

      map $request_uri $dest {
      /_ https://raw.githubusercontent.com/hdhoang/hdhoang/master/config/dotpentadactylrc;
      /c /mirror/caps2ctrl.exe;
      /d http://5digits.org/nightly/pentadactyl-latest.xpi;
      /pe http://live.sysinternals.com/;
      /s https://puttytray.goeswhere.com/download/putty.exe;
      /ws https://www.wosign.com/root/ca1_dv_free_2.crt;

      default "";
      }

      server {
      listen 443 ssl spdy default_server;
      ssl_certificate zahe.me.crt;
      ssl_certificate_key zahe.me.key;
      server_name kub.zahe.me zahe.me;
      root /home/hdhoang/Public/;
      autoindex on;
      if ($dest) {
      return 301 $dest;
      }
      location /ipfs/ {
      proxy_pass http://127.0.0.1:4005;
      }
      location ~ /mirror/(?:.*)\.part {
      return 403 incomplete;
      }
      }

      server {
      listen 443 ssl spdy;
      server_name id.zahe.me;
      root /home/hdhoang/Public/;
      index hdhoang;
      default_type text/html;
      }
      }
    #+END_SRC

*** DLNA
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S minidlna
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/minidlna.conf
      friendly_name=kub
      port=8200

      media_dir=<<storage>>
      media_dir=A,<<fav_music>>
      media_dir=V,/home/<<username>>/Public/mirror
    #+END_SRC
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<system_ctl>> enable --now minidlna
    #+END_SRC

*** VPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo:kub:/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 0
      tls-server
      <pkcs12>
      <<kub_pfx>>
      </pkcs12>
      <dh>
      -----BEGIN DH PARAMETERS-----
      MIIBCAKCAQEAoioJw6aUXmgBDSw6SzbSZww6i7eH0MC+Eba5qGmYJnKn2zI8dBH6
      JZKnAyz9MbD21loI6KjAnOzZkBp7DKle1cACLS229Olycr22rXWPFuhMV15TohDJ
      ArazVXSJGDL9OXhdHei96K3qXofz/3AzXEVxD0unQd5sRlgNGmunofvgWBechdmn
      YQl44SZ0asC8uUY1uiKjVyQzqeNDi3rjJtTobcPdR6Pb8CnS3cfwoWzXMwUexmfJ
      VQSNaDZIeQcwV5MEHs1XViOTiEvT8IHbJojJri0geUSJ+HkX1JTxGIUj4xxKHQ0j
      AFEjqDYFh3q7U6QgFLRWZffVLgxIZVopIwIBAg==
      -----END DH PARAMETERS-----
      </dh>
      user nobody
      group nobody

      mode server

      server 10.255.0.0 255.255.255.0
      push "route <<prefix>>.54"
    #+END_SRC

*** SSH
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/ssh/sshd_config
      Protocol 2
      HostKey /etc/ssh/ssh_host_ed25519_key
      HostKey /etc/ssh/ssh_host_rsa_key

      KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
      MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com

      AllowGroups wheel
      PasswordAuthentication no
      ChallengeResponseAuthentication no
      UsePrivilegeSeparation sandbox

      Subsystem sftp /usr/lib/ssh/sftp-server
    #+END_SRC

** ton
*** Mounts
    #+BEGIN_SRC sh
      fallocate -l 2G /swap
      chmod u=rw,go= /swap
      mkswap /swap
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
      LABEL=home /home/<<username>> ntfs-3g noatime,nofail
      LABEL=ESP /boot vfat
      /swap none swap
    #+END_SRC

*** Hosts
    #+BEGIN_SRC conf :tangle /sudo::/etc/hosts :tangle-mode 260
      127.0.0.1 ton
      ::1 ton
      <<prefix>>.1 vorme
      <<prefix>>.54 kub
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/00-bkap.network
      [Match]
      Name = enp4s0

      [Network]
      DNS = 8.8.8.8
      Address = 192.168.0.252/24
      Gateway = 192.168.0.1
      Address = 192.168.1.252/24
      Gateway = 192.168.1.1
      Address = 192.168.4.252/24
      Gateway = 192.168.4.1
      Address = 192.168.5.252/24
      Gateway = 192.168.5.1

      [Route]
      Destination=192.168.1.1
      Source=192.168.1.252
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/dhcp.network
      [Network]
      DHCP=ipv4
    #+END_SRC

*** Pacman
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.conf :tangle-mode 260
    <<pacman_common>>

    [options]
    Architecture = auto

    [multilib]
    Include = /etc/pacman.d/mirrorlist
  #+END_SRC
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.d/mirrorlist
    Server = http://f.archlinuxvn.org/archlinux/$repo/os/$arch
  #+END_SRC

*** VPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo::/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 1
      tls-client
      <pkcs12>
      <<ton_pfx>>
      </pkcs12>

      nobind
      pull

      remote k.<<domain>> 22
      verify-x509-name kub.<<domain>> name
      remote-cert-tls server
      resolv-retry infinite
    #+END_SRC

*** Fonts
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S adobe-source-{sans,serif,code}-pro-fonts adobe-source-han-sans-otc-fonts
    #+END_SRC

    #+BEGIN_SRC xml :tangle ~/.config/fontconfig/fonts.conf :padline no :comments no
      <?xml version='1.0'?>
      <!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
      <fontconfig>
        <match target="font">
          <edit mode="assign" name="rgba">
            <const>none</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hinting">
            <bool>true</bool>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hintstyle">
            <const>hintslight</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="antialias">
            <bool>true</bool>
          </edit>
        </match>
        <dir>~/.fonts</dir>
        <match target="pattern">
          <test qual="any" name="family"><string>Arial</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <match target="pattern">
          <test qual="any" name="family"><string>DejaVu Sans</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <alias>
          <family>sans-serif</family>
          <prefer>
            <family>Source Sans Pro</family>
          </prefer>
        </alias>
        <alias>
          <family>serif</family>
          <prefer>
            <family>Source Serif Pro</family>
          </prefer>
        </alias>
        <alias>
          <family>monospace</family>
          <prefer>
            <family>Source Code Pro</family>
          </prefer>
        </alias>
        <selectfont>
          <rejectfont>
            <glob>/usr/share/fonts/default/Type1/*</glob>
            <pattern>
              <patelt name="scalable">
                <bool>false</bool>
              </patelt>
            </pattern>
          </rejectfont>
        </selectfont>
      </fontconfig>
     #+END_SRC

*** Desktop
    These DBus services are provided by plasma-workspace-units.
    #+BEGIN_SRC sh :dir /sudo::
      rm /usr/share/dbus-1/services/org.kde.{kded5,kglobalaccel,kuiserver,kwalletd5}.service
    #+END_SRC

**** Inside VM
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now systemd-networkd-wait-online sshd
     #+END_SRC
     #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
       //192.168.208.1/home /home/<<username>> cifs credentials=/etc/cifs,uid=1000,gid=1000,file_mode=0600
     #+END_SRC
     On the host side, open 445/tcp to this VM, and run emacs over X with MobaXterm:
     #+BEGIN_SRC conf :tangle bin/emacs.moba
       emacs =  #109#0%192.168.208.128%22%<<username>>%%-1%0%cp -r ~/.gnupg /run/user/1000 && chmod -R 700 /run/user/1000/.gnupg && export GNUPGHOME__EQUAL__/run/user/1000/.gnupg && setxkbmap dvorak && gpg-agent --enable-ssh-support --daemon emacs%%22%%0%0%Interactive shell%h:\.ssh\kub%%0%0%0%0%%1080%%0#MobaFont%10%0%0%0%15%236,236,236%0,0,0%180,180,192%0%-1%0%%xterm%-1%0%0,0,0%54,54,54%255,96,96%255,128,128%96,255,96%128,255,128%255,255,54%255,255,128%96,96,255%128,128,255%255,54,255%255,128,255%54,255,255%128,255,255%236,236,236%255,255,255%80%24%0#0
     #+END_SRC
     Remember to quit emacs before suspending.

**** Keyboard
     Use dvorak, swap caps for ctrl
     #+BEGIN_SRC conf :tangle /sudo::/usr/share/kbd/keymaps/caps2ctrl.map
       include "/usr/share/kbd/keymaps/i386/dvorak/dvorak.map.gz"
       keycode 58 = Control
     #+END_SRC
     #+BEGIN_SRC sh
       localectl set-keymap caps2ctrl
     #+END_SRC

     Base Japanese IME on dvorak, swap caps for ctrl
     #+BEGIN_SRC conf
       Windows Registry Editor Version 5.00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]
       "Scancode Map"=hex:00,00,00,00,00,00,00,00,02,00,00,00,1d,00,3a,00,00,00,00,00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layouts\00000411]
       "Layout File"="kbddv.dll"
     #+END_SRC

**** Pointer
     Use evdev for the touchscreen
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Atmel touchscreen"
               MatchProduct "maXTouch"
               Driver "evdev"
       EndSection
     #+END_SRC

     Use natural scrolling on touchpad
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Natural scrolling"
               MatchProduct "TouchPad"
               MatchDriver "libinput"
               Option "NaturalScrolling" "1"
       EndSection
     #+END_SRC

**** Rotation
     #+BEGIN_SRC sh :dir /sudo::
       <<pacman>> -S acpid
     #+END_SRC
     #+BEGIN_SRC text :tangle /sudo::/etc/acpi/events/rotation-button
       event=ibm/hotkey LEN0068:00 00000080 00006020
       action=sudo -u hdhoang DISPLAY=:0 /usr/local/bin/rotate-screen
     #+END_SRC
     #+BEGIN_SRC sh :tangle /sudo::/usr/local/bin/rotate-screen :shebang #!/bin/sh
       case $(xrandr | grep LVDS1 | cut -f 4 -d ' ' | tr -d '(') in
           normal) new="left";;
           left)   new="normal";;
       esac
       xrandr --output LVDS1 --rotate $new

       case $new in
           normal) matrix="1 0 0 0 1 0 0 0 1";;
           left)   matrix="0 -1 1 1 0 0 0 0 1";;
           right)  matrix="0 1 0 -1 0 1 0 0 1";;
           inverted) matrix="-1 0 1 0 -1 1 0 0 1";;
       esac
       for dev in "SynPS/2 Synaptics TouchPad" "TPPS/2 IBM TrackPoint" "Atmel Atmel maXTouch Digitizer"; do
           xinput set-prop "$dev" "Coordinate Transformation Matrix" $matrix
       done
     #+END_SRC
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now acpid
     #+END_SRC

*** Picard
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S picard chromaprint
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/MusicBrainz/Picard.conf
      [setting]
      server_host=musicbrainz.org
      server_port=80

      fingerprinting_system=acoustid
      acoustid_apikey=<<acoustid_key>>
      acoustid_fpcalc=/usr/bin/fpcalc

      save_images_to_tags=true
      save_only_front_images_to_tags=true
      save_images_to_files=false
      ca_provider_use_amazon=true
      ca_provider_use_caa=true
      ca_provider_use_caa_release_group_fallback=true
      ca_provider_use_whitelist=true
      caa_image_size=1
      caa_approved_only=true
      caa_restrict_image_types=true
      analyze_new_files=false
      ignore_file_mbids=false
      quit_confirmation=true
      va_name=Various Artists
      nat_name=
      standardize_artists=true

      windows_compatibility=true
      ascii_filenames=false
      rename_files=true
      move_files=true
      file_naming_format="$if2(%albumartist%,%artist%)/$if($ne(%albumartist%,),%album%/)$if($gt(%totaldiscs%,1),%discnumber%-,)$if($ne(%albumartist%,),$num(%tracknumber%,2) ,)$if(%_multiartist%,%artist% - ,)%title%"
      move_files_to=<<fav_music>>/_new
      move_additional_files=true
      move_additional_files_pattern=*.jpg *.png *.jpeg
      delete_empty_dirs=true

      browser_integration=true
      browser_integration_port=8000
      browser_integration_localhost_only=true

      dont_write_tags=false
      preserve_timestamps=false
      write_id3v1=true
      write_id3v23=true
      id3v23_join_with=/
      id3v2_encoding=utf-16
      remove_ape_from_mp3=true
      remove_id3_from_flac=true
    #+END_SRC
*** mpd
    :PROPERTIES:
    :header-args+: :dir ~
    :END:

    Create playlist
    #+BEGIN_SRC sh
      mpc listall > <<fav_music>>/pq.m3u
    #+END_SRC

    Shuffle and play
    #+BEGIN_SRC sh :results raw
      mpc -q clear && mpc load pq && mpc -q shuffle && mpc play
    #+END_SRC

    Delete currently playing track
    #+BEGIN_SRC sh :eval query
      rm -v <<fav_music>>/"$(mpc -f %file% | head -1)"
    #+END_SRC

*** mpv
    #+BEGIN_SRC conf :tangle ~/.config/mpv/mpv.conf
      sub-auto=fuzzy
      hwdec=auto
      hwdec-codecs=all
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/mpv/input.conf
      q quit_watch_later
      MOUSE_BTN0 cycle pause
      MOUSE_BTN1 show_progress
      MOUSE_BTN2 cycle fullscreen
      z set window-scale 0.5
      Z set window-scale 1

      ; show_progress
      f show_text "${filename}"
      d cycle audio
      y add volume 1
      i add volume -1
      g add sub-delay  0.1
      h add sub-delay -0.1
      x cycle mute

      k frame_step
      ' seek +10
      a seek -10
      , seek +60
      o seek -60
      . seek +300
      e seek -300

      u cycle fullscreen
    #+END_SRC
* Emacs
  :PROPERTIES:
  :header-args+: :tangle ~/.emacs
  :END:

  OOBE settings:
  #+BEGIN_SRC elisp
    (server-mode t)
    (desktop-save-mode t)
    (global-set-key (kbd "C-x C-r")
                    (lambda () (interactive)
                      (revert-buffer :noconfirm t)))
    (defalias 'yes-or-no-p #'y-or-n-p)
    (defalias 'dabbrev-expand #'hippie-expand)
    (setq auto-save-default nil
          calendar-week-start-day 1
          default-input-method "vietnamese-telex"
          desktop-load-locked-desktop t
          inhibit-startup-screen t
          make-backup-files nil
          scroll-preserve-screen-position t
          tramp-default-method "ssh"
          undo-tree-mode-lighter ""
          visible-bell t
          frame-title-format "%b")
    (set-language-environment "UTF-8")
    (setq-default buffer-file-coding-system 'utf-8-unix)
    (setq-default sentence-end-double-space nil)
    (global-set-key (kbd "C-\\") #'toggle-input-method)
    (blink-cursor-mode -1)
    (show-paren-mode t)
    (winner-mode)
  #+END_SRC

  Package management
  #+BEGIN_SRC elisp
    (package-initialize)
    (setq package-archives
          '(("gnu" . "https://elpa.gnu.org/packages/")
            ("marmalade" . "https://marmalade-repo.org/packages/")
            ("melpa" . "http://melpa.org/packages/")))
    (unless (package-installed-p 'use-package)
      (package-refresh-contents)
      (package-install 'use-package))
    (setq use-package-always-ensure t)
    (require 'use-package)
  #+END_SRC

  Color theme
  #+BEGIN_SRC elisp
    (use-package color-theme-sanityinc-solarized
      :config (load-theme 'sanityinc-solarized-light t))
  #+END_SRC

  Font on Windows
  #+BEGIN_SRC elisp
    (when (eq window-system 'w32)
      (if (> window-system-version 5)
          (set-default-font "Consolas-12" :frames t)
        (set-default-font "Lucida Console-10" :frames t)))
  #+END_SRC

** Editing
   Vim-style
   #+BEGIN_SRC elisp
     (use-package evil
       :config
       (evil-mode t)
       (evil-set-initial-state 'special-mode 'emacs)
       (dolist (state '(normal motion))
         (evil-define-key state global-map
           (kbd "<SPC>") #'evil-scroll-down
           (kbd "S-<SPC>") #'evil-scroll-up))
       (dolist (state '(insert motion normal))
         (evil-define-key state global-map
           (kbd "C-t") #'transpose-chars
           (kbd "C-d") #'delete-char
           (kbd "C-k") #'kill-line
           (kbd "C-y") #'evil-paste-before
           (kbd "C-a") #'beginning-of-line (kbd "C-e") #'end-of-line
           (kbd "C-f") #'forward-char   (kbd "C-b") #'backward-char
           (kbd "C-n") #'next-line      (kbd "C-p") #'previous-line
           (kbd "<down>") #'next-line   (kbd "<up>") #'previous-line
           (kbd "j") #'next-line        (kbd "k") #'previous-line
           (kbd "C-v") #'evil-scroll-down (kbd "M-v") #'evil-scroll-up
           (kbd "C-r") #'isearch-backward))
       (evil-define-key 'insert global-map
         "j" #'self-insert-command "k" #'self-insert-command)
       (evil-define-key 'motion help-mode-map
         (kbd "<tab>") #'forward-button))
   #+END_SRC

   Aggressive indent
   #+BEGIN_SRC elisp
     (use-package aggressive-indent
       :diminish ""
       :config (global-aggressive-indent-mode))
   #+END_SRC

   Switch window with ace
   #+BEGIN_SRC elisp
     (use-package ace-window
       :config (ace-window-display-mode 1)
       :bind ("C-x o" . ace-window))
   #+END_SRC

   Do things with helm:
   #+BEGIN_SRC elisp
     (use-package helm
       :config
       (helm-mode 1)
       (define-key shell-mode-map (kbd "M-r") #'helm-comint-input-ring)
       :diminish helm-mode
       :bind (("C-h SPC" . helm-all-mark-rings)
              ("C-x b" . helm-mini)
              ("C-x C-b" . helm-buffers-list)
              ("C-x C-f" . helm-find-files)
              ("C-c g" . helm-do-grep)
              ("C-s" . helm-occur)
              ("M-x" . helm-M-x)))
     (require 'helm-config)
     (use-package evil
       :config (dolist (state '(insert motion normal))
                 (evil-define-key state global-map
                   (kbd "M-y") #'helm-show-kill-ring)))
   #+END_SRC

** Org
   #+BEGIN_SRC elisp
     (add-hook 'org-mode-hook
               '(lambda ()
                  (add-hook 'before-save-hook 'org-align-all-tags
                            :local t)))
     (org-babel-do-load-languages 'org-babel-load-languages
                                  '((sh . t)))
     (setq org-src-fontify-natively t)
   #+END_SRC

*** Crypt
    #+BEGIN_SRC elisp
      (require 'org-crypt)
      (add-hook 'org-mode-hook
                '(lambda ()
                   (add-hook 'before-save-hook 'org-encrypt-entries
                             :local t)))
      (setq org-tags-exclude-from-inheritance '("crypt")
            org-crypt-key "<<username>>@<<domain>>")
    #+END_SRC

    Make it possible to tangle encrypted block
    #+BEGIN_SRC elisp
      (remove-hook 'org-babel-pre-tangle-hook #'save-buffer)
    #+END_SRC

** Doc-View
   #+BEGIN_SRC elisp
     (eval-after-load 'doc-view
       '(bind-key (kbd "<mouse-1>") #'doc-view-scroll-up-or-next-page doc-view-mode-map))
     (setq doc-view-resolution 300
           doc-view-cache-directory (expand-file-name "~/.emacs.d/doc-view"))
     (use-package evil
       :config (add-hook 'view-mode-hook #'evil-emacs-state))
   #+END_SRC

** Dired
   #+BEGIN_SRC elisp
     (use-package dired+
       :config
       (require 'dired+)
       (global-dired-hide-details-mode -1)
       (defun dired-open ()
         (interactive)
         (dired-do-shell-command "xdg-open &" :file-list (dired-get-marked-files)))
       (define-key dired-mode-map (kbd "RET") #'dired-open)
       (define-key dired-mode-map (kbd "<mouse-2>") #'dired-open)
       (setq dired-recursive-copies 'always
             dired-recursive-deletes 'always
             dired-listing-switches "-alh"
             dired-guess-shell-alist-user
             '(("\\.cb.\\'" "okular")
               ("." "xdg-open;"))))
   #+END_SRC

** Eshell
   Put eshell on a convenient binding
   #+BEGIN_SRC elisp
     (global-set-key (kbd "C-x M-m") #'eshell)
   #+END_SRC

   I like the prompt to be on a separate line.
   #+BEGIN_SRC elisp
     (setq eshell-prompt-function
           '(lambda ()
              (concat (eshell/pwd) "\n"
                      (int-to-string eshell-last-command-status) " % "))
           eshell-prompt-regexp "^[[:digit:]]\\{1,3\\} % ")
   #+END_SRC

   These are terminal-manipulating commands
   #+BEGIN_SRC elisp
     (eval-after-load 'em-term
       '(progn
          (dolist (prog '("atop" "systemd-cgls" "journalctl"))
            (add-to-list 'eshell-visual-commands prog))
          (add-to-list 'eshell-visual-options '("ssh" "-t"))))
   #+END_SRC

   Profile:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/profile :no-expand
     addpath ~/Copy/bin
   #+END_SRC

   Aliases:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias vim find-file $1
     alias i yaourt $*
     alias j journalctl -afb $*
     alias sc <<system_ctl>> $*
     alias uc <<user_ctl>> $*
     alias ytdl <<ytdl>> -a /home/<<username>>/q.txt
     alias fr free -h
   #+END_SRC

* Ansible
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ansible
  #+END_SRC

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package yaml-mode)
         (use-package ansible-doc
           :config (add-hook 'yaml-mode-hook #'ansible-doc-mode))))
  #+END_SRC

** Inventory
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible_inventory
   :END:

   Here are the hosts and their variables
   #+BEGIN_SRC conf
     [arch]
     kub ansible_python_interpreter=/usr/bin/python2
     ton ansible_python_interpreter=/usr/bin/python2 ansible_connection=local

     [all:vars]
     user=<<username>>
     home=/home/<<username>>
     h=<<storage>>
     conf="{{h}}/config/{{ansible_hostname}}"
     locale=en_US
     prefix=<<prefix>>
   #+END_SRC

** Config
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible.cfg
   :END:

   Keep the inventory here
   #+BEGIN_SRC conf
     [defaults]
     inventory = ~/.ansible_inventory
   #+END_SRC

   For some reason ControlMaster isn't working
   #+BEGIN_SRC conf
     [ssh_connection]
     ssh_args=-o ControlMaster=no
   #+END_SRC

* Firefox
  :PROPERTIES:
  :header-args+: :tangle ~/.pentadactylrc
  :END:
  This file is in vimrc syntax

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(use-package vimrc-mode))
  #+END_SRC

  Use DuckDuckGo:

  #+BEGIN_SRC vimrc
    silent bmark -keyword ddg -t DDG https://duckduckgo.com/?kn=1&kp=-1&kae=c&q=%s
    set defsearch=ddg
  #+END_SRC

  Use backspace to go back:
  #+BEGIN_SRC vimrc
    set! browser.backspace_action=0
  #+END_SRC

  Don't let middle mouse paste:
  #+BEGIN_SRC vimrc
    set! middlemouse.contentLoadURL=false
  #+END_SRC

  Restore C-j for Downloads:
  #+BEGIN_SRC vimrc
    map <C-j> -ex dialog downloads
  #+END_SRC

  Bind stop to an easy binding:
  #+BEGIN_SRC vimrc
    map s <C-c>
  #+END_SRC

  Make scrolling easier:
  #+BEGIN_SRC vimrc
    map <space> <C-d>
    map <S-space> <C-u>
  #+END_SRC

  Pin tab:
  #+BEGIN_SRC vimrc
    map <A-p> -ex pintab!
  #+END_SRC

  Move to first or last:
  #+BEGIN_SRC vimrc
    map <A-!> -ex tabm 1
    map <A-$> -ex tabm $
  #+END_SRC

  Fast switching:
  #+BEGIN_SRC vimrc
    map -m normal,insert <F1> <C-^>
  #+END_SRC

  Don't raise these openings:
  #+BEGIN_SRC vimrc
    set activate-=diverted,links,tabopen,paste
  #+END_SRC

  Open help in a new tab
  #+BEGIN_SRC vimrc
    set newtab=help
  #+END_SRC

  Keep hint keys under left fingers:
  #+BEGIN_SRC vimrc
    set hintkeys=12345
  #+END_SRC

  Make hint text readable
  #+BEGIN_SRC vimrc
    highlight Hint -append font-size: 14px !important
  #+END_SRC

  Unzoom image:
  #+BEGIN_SRC vimrc
    map <A-t> -js content.document.toggleImageSize()
  #+END_SRC

  Show link in commandline:
  #+BEGIN_SRC vimrc
    set guioptions+=c
    set showstatuslinks=command
  #+END_SRC

  Scroll by one line:
  #+BEGIN_SRC vimrc
    set scrollsteps=1
  #+END_SRC

  Show feeds first in pageinfo:
  #+BEGIN_SRC vimrc
    set pageinfo=fgmse
  #+END_SRC

  Use visual bell:
  #+BEGIN_SRC vimrc
    set visualbell
  #+END_SRC

  Bookmarks and preferences:
  #+BEGIN_SRC vimrc
    map <C-S-s> -ex bmark -keyword ac -t config about:config
    \ bmark -keyword bgp -t BGP http://bgp.he.net/search?search[search]=%s
    \ bmark -keyword v -t valsi http://vlasisku.lojban.org/?query=%s
    \ bmark -keyword c -t camxes http://camxes.lojban.org/?text=%s
    \ bmark -keyword yb -t youtube https://youtube.com/watch?v=%s
    \ bmark -keyword cw -t 'CrawlWiki' http://crawl.chaosforge.org/index.php?title=Special%3ASearch&search=%s
    \ bmark -keyword bb -t burnbit http://burnbit.com/burn?file=%s
    \ bmark -keyword b -t btdigg https://btdigg.org/search?q=%s&order=0&p=0
    \ bmark -keyword ba -t btdigg https://btdigg.org/search?q=%s&order=2&p=0
    \ bmark -keyword m -t zing http://mp3.zing.vn/tim-kiem/bai-hat.html?q=%s
    \ bmark -keyword ma -t artist http://musicbrainz.org/search?advanced=1&type=artist&tport=8000&query=%s
    \ bmark -keyword mg -t group http://musicbrainz.org/search?advanced=1&type=release_group&tport=8000&query=%s
    \ bmark -keyword mr -t recording http://musicbrainz.org/search?advanced=1&type=recording&tport=8000&query=%s
    \ bmark -keyword gm -t gmail https://mail.google.com/mail/#spam
    \ set! accessibility.browsewithcaret_shortcut.enabled=false
    \ set! browser.newtabpage.enabled=false
    \ set! browser.privatebrowsing.dont_prompt_on_enter=true
    \ set! browser.sessionstore.restore_pinned_tabs_on_demand=true
    \ set! browser.shell.checkDefaultBrowser=false
    \ set! browser.startup.homepage=about:blank
    \ set! browser.startup.page=3
    \ set! general.warnOnAboutConfig=false
    \ set! security.OCSP.enabled=0
    \ set! security.warn_viewing_mixed=false
    \ set! layout.spellcheckDefault=0
    \ set! middlemouse.paste=true
    \ set! ui.key.menuAccessKey=0
    \ set! browser.anchor_color="#6c71c4"
    \ set! browser.display.background_color="#fdf6e3"
    \ set! browser.display.foreground_color="#657b83"
    \ set! browser.display.use_system_colors=false
    \ set! font.default.x-western="sans-serif"
    \ if /NT 6/.test(window.navigator.oscpu)
    \     set! font.name.monospace.x-western=Consolas
    \ fi
    \ set! extensions.checkCompatibility.nightly=false
    \ set! extensions.https_everywhere._observatory.alt_roots=true
    \ set! extensions.https_everywhere._observatory.enabled=true
    \ set! extensions.https_everywhere._observatory.priv_dns=true
    \ set! plugins.hide_infobar_for_missing_plugin=true
    \ set! browser.download.manager.alertOnEXEOpen=false
    \ set! browser.download.manager.scanWhenDone=false
    \ set! browser.search.context.loadInBackground=true
    \ set! intl.charset.default=UTF-8
    \ set! network.http.pipelining=true
    \ set! network.http.pipelining.aggressive=true
    \ set! network.http.pipelining.ssl=true
    \ set! network.protocol-handler.expose.magnet=false
    \ set! network.proxy.socks=kub.<<domain>>
    \ set! network.proxy.socks_port=9050
    \ set! network.proxy.socks_remote_dns=true
    \ set! toolkit.telemetry.enabled=true
    \ js services.permissions.add(services.io.newURI("http:depositfiles.com",null,null), 'image', services.permissions.DENY_ACTION)
    \ js services.loginManager.setLoginSavingEnabled("accounts.google.com", false)
  #+END_SRC

  Strip tracker from location, thanks to [[https://userscripts.org/scripts/show/93825][Bruno Barão]] and [[https://github.com/5digits/dactyl/commit/7a1ffa5b555399c5d0925ad599e2640070bd128d][Kris Maglione]].
  #+BEGIN_SRC vimrc
    autocmd DOMLoad (utm|wa)_ -js win.history.replaceState("Remove trackers", '', doc.location.href.replace(/&?(utm|wa)_[^&]+/g,'').replace(/\?$/,''))
  #+END_SRC

  Facebook
  #+BEGIN_SRC vimrc
    bmark -keyword fb -t facebook https://fb.me/%s
    map <A-s> -js dactyl.open("https://www.facebook.com/sharer/sharer.php?u=" + content.location)
  #+END_SRC

  Inoreader
  #+BEGIN_SRC vimrc
    map <A-f> -js dactyl.open("https://www.inoreader.com/?add_feed=" + content.location)
    map <A-w> -js dactyl.open("https://www.inoreader.com/bookmarklet/save_web_page/" + encodeURIComponent(content.location))
    js services.permissions.add(services.io.newURI("http:inoreader.com",null,null), 'popup', services.permissions.ALLOW_ACTION)
    set passkeys+=inoreader.com:jkgafswhq
  #+END_SRC
  Get videos from starred items
  #+BEGIN_SRC sh :tangle /kub:.bashrc
    function videos() {
        <<ytdl>> --ignore-errors $(curl 'https://www.inoreader.com/reader/api/0/stream/contents/user%2F-%2Fstate%2Fcom.google%2Fstarred?n=1000' \
                                        -H 'AppId: 1000001238' -H 'AppKey: <<inoreader_key>>' \
                                        -H 'Authorization: GoogleLogin auth=<<inoreader_auth>>' \
                                          | jq -r '.items|.[]|.canonical[0]|.href' \
                                          | grep -vE rapidgator)
    }
  #+END_SRC

  Site keyboard shortcuts:
  #+BEGIN_SRC vimrc
    set passkeys+=tumblr.com:jk
    set passkeys+=mail.google.com/mail/:'#!ms+-/? jknpux'
    set passkeys+=google.com/contacts/:'#jkoux,.'
  #+END_SRC

  Switch to reader mode:
  #+BEGIN_SRC vimrc
    map <A-r> -js dactyl.open("about:reader?url=" + content.location)
  #+END_SRC

* Secrets							      :crypt:
-----BEGIN PGP MESSAGE-----
Version: GnuPG v2

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
=hAfb
-----END PGP MESSAGE-----
