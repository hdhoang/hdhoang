#+STARTUP: showall
#+PROPERTY: header-args+ :cache yes
#+PROPERTY: header-args+ :comments org
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :noweb yes
#+PROPERTY: header-args+ :results silent
#+PROPERTY: header-args+ :tangle-mode 384
#+PROPERTY: header-args:text+ :eval no
* Hoang Duc Hieu
#+EMAIL: 1988 / +84-166-241-9526 / cv@zahe.me
#+OPTIONS: toc:nil date:nil arch:nil num:nil author:nil email:t
#+LATEX_CLASS_OPTIONS: [twocolumn]
#+LATEX_HEADER: \usepackage{titling}
#+LATEX_HEADER: \pretitle{\begin{flushright}\LARGE}
#+LATEX_HEADER: \posttitle{\par\end{flushright}}
#+LATEX_HEADER: \preauthor{\begin{flushright}}
#+LATEX_HEADER: \postauthor{\end{flushright}}
#+LATEX_HEADER: \pagenumbering{gobble}
** Education
  - 2014 - now :: Studying System Administration at Bachkhoa-Aptech
                  (graduating early 2017)
  - 2013 - 2014 :: Finished K12 and completed accounting course at
                   Quang Trung private school
  - 2007 - 2012 :: Self-learned various topics
    - Programming languages (web and backend)
    - History of free software
    - Hanoi GNU/Linux user community
    - Wing-chun martial arts
    - The constructed logical language Lojban
  - 2006 - 2007 :: Freshman in computer programming at Monash College,
                   Australia (earned Distinction and High Distinction
                   in most subjects)
  - 2003 - 2006 :: Chu Van An Highschool, majoring in English (earned
                   2nd place in city-level competition)
#+LATEX: \newpage
** Qualifications and skills
*** IT skills
  - In-depth GNU/Linux usage and administration, experienced in
    self-hosting web sites
  - Comprehensive network understanding
  - Office equipment troubleshooting
  - Familiarity with various OSes
  - Using version control systems, especially git
  - Contributing to free software projects ([[https://github.com/hdhoang][GitHub profile]])
*** Language skills
  - Fluency in English (990 in TOEIC, 2015)
  - Elementary Japanese (striving to acquire N3 in early 2016)
*** Others
  - Self-teaching discipline
  - Strong interest in learning new topics
** Objectives							    :ARCHIVE:
  - What ::
    + Resident technician for an organization
    + System/network administrator at a service provider
  - When :: part-time, until graduation
  - Why :: a challenging field with continual updates, but still have low-stress time for self-improving
  - Who :: NGO, SME
  - Where :: HN - HY - HD
** Interests
  - Exploring science, history, and natural subjects
  - Science-fictional novels, rational fanfictions
  - Electric guitar riffs
  - Frequent blood donor (until no longer eligible)
* Places and names
  #+NAME: username
  #+BEGIN_SRC text
    hdhoang
  #+END_SRC

  #+NAME: domain
  #+BEGIN_SRC text
    zahe.me
  #+END_SRC

  #+BEGIN_SRC emacs-lisp :tangle ~/.emacs
    (setq user-mail-address "<<username>>@<<domain>>")
  #+END_SRC

  #+NAME: storage
  #+BEGIN_SRC text
    /home/<<username>>/Copy
  #+END_SRC

  #+NAME: fav_music
  #+BEGIN_SRC text
    /home/<<username>>/Music
  #+END_SRC

  #+NAME: prefix
  #+BEGIN_SRC text
    10.117.14
  #+END_SRC

  #+NAME: system_ctl
  #+BEGIN_SRC text
    systemctl --system --no-pager
  #+END_SRC

  #+NAME: user_ctl
  #+BEGIN_SRC text
    systemctl --user --no-pager
  #+END_SRC

  #+NAME: pacman
  #+BEGIN_SRC text
    pacman --noconfirm --needed
  #+END_SRC

  #+NAME: ytdl
  #+BEGIN_SRC text
    youtube-dl --format "[height <=? 720]" --output ~/Videos/"%(uploader)s %(upload_date)s %(title)s@%(id)s.%(ext)s"
  #+END_SRC

* VPN
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S openvpn
  #+END_SRC
  #+NAME: openvpn_common
  #+BEGIN_SRC conf
    dev tun
    topology subnet
    persist-key
    persist-tun
    keepalive 10 30
    tls-version-min 1.2
    tls-cipher TLS-DHE-RSA-WITH-AES-128-CBC-SHA
    <tls-auth>
    <<ta_key>>
    </tls-auth>
    <ca>
    -----BEGIN CERTIFICATE-----
    MIIEYTCCA0mgAwIBAgIJAPxrcItU3yz8MA0GCSqGSIb3DQEBCwUAMH0xCzAJBgNV
    BAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFOb2kxDTALBgNVBAoTBHph
    aGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3phaGUubWUxHjAcBgkqhkiG
    9w0BCQEWD2hkaG9hbmdAemFoZS5tZTAeFw0xNTA5MjYxMTM0NTRaFw0yNTA5MjMx
    MTM0NTRaMH0xCzAJBgNVBAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFO
    b2kxDTALBgNVBAoTBHphaGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3ph
    aGUubWUxHjAcBgkqhkiG9w0BCQEWD2hkaG9hbmdAemFoZS5tZTCCASIwDQYJKoZI
    hvcNAQEBBQADggEPADCCAQoCggEBANXOfdISWeotIr3neKpj6IGBlCLMEBNtMB1r
    bTIgkxe9tnNd4jBufq6duLK91ioqcJiAxMLRovYtaRTOpQit5/PnAm2Iwu3u2mGX
    EftWEBSVt437NMVA6L2Jemv1lp81vmzJIODgPQ9elrNteQ3ccAMCpuj/l6PhGeFq
    JvK+dNIJcm2+xM15S6ESwjsZxwijiT3TMJAjXJPC5R3gpULoTHrphPGrS/0RIq9c
    Bd/+4Q7k1MguPK2XSKHiJnUIkQJ/m/XGT2iXVEzhOsHZ8vlaNq1xBzTko10nEb7I
    sOQjuH4GCZMeoYnF3egg534fg+BYPAecuKglqdIpnm4+syJsrR0CAwEAAaOB4zCB
    4DAdBgNVHQ4EFgQUsDCM7/aJ6AjPVQPEbdDTiTa9WIswgbAGA1UdIwSBqDCBpYAU
    sDCM7/aJ6AjPVQPEbdDTiTa9WIuhgYGkfzB9MQswCQYDVQQGEwJWTjELMAkGA1UE
    CBMCSE4xDjAMBgNVBAcTBUhhTm9pMQ0wCwYDVQQKEwR6YWhlMRAwDgYDVQQDEwd6
    YWhlIENBMRAwDgYDVQQpEwd6YWhlLm1lMR4wHAYJKoZIhvcNAQkBFg9oZGhvYW5n
    QHphaGUubWWCCQD8a3CLVN8s/DAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUA
    A4IBAQAKkiDOWmwu1D+qbCSYaSxiMfJ70FyA/o+AuCDeaGxKdFLZ2JQgYK/az3y8
    tGQKBc6AdUY7BoN1Ab/6TOz+hWvmyNOOvq2AMgt2bHHA+JquRZMdgw59OtbB2BjC
    vBs2cxRJWdmv8aSltcqVpm2HNHy3mzcq8i0CdFluxDV+zQmvhGVypAipYTlhdi0l
    KLJlB+3fqS5GQB0wPmkV2N6WJdm0NfoTbBOCXwVb4ChyrgryQaOQi5nu8wO9tzeO
    kK/jQJRFKpdwBYqAe0Q/JP95pVjctyiVFg97ppvQ557QFcY1pHapAwhyBmxYiLak
    W4pz42IduC2pnZ3ut4C7UzpeDMRr
    -----END CERTIFICATE-----
    </ca>
  #+END_SRC

* SSH
  :PROPERTIES:
  :header-args+: :tangle ~/.ssh/config
  :END:

  SSH encryption settings by https://stribika.github.io/2015/01/04/secure-secure-shell.html

  #+BEGIN_SRC conf
    Host *
    KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256
    Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com,hmac-sha1
  #+END_SRC

  Machines
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    vorme ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCf2C8j0GFA8eq8Vgva/9KI4cF4Q23v4rBk6zAxoyIJvENGkpDuUba4AOMabUkPiXU76KVbx/h4fOivjrWoUNG6Z0xEOJTQqVwuk7788dwIm49Ba+ZOC/sCtT7dsbshFpzXmkdASsZty0foFSILRADDTlB1MZiN9wJRlnjkmIO9WiSMYnuGzolO2f+Gy6LFrtQF1ZgOOqPToO4u4li3VPh1zdoY5+IQul9BQJGU7tMZrleH09LcOUlip8SHZYuXu/Zlb9GSK7Cj7WfGaR0k+xvs657n41haffQ5CxTjocqZdv7eO4Uo2ryWXn2Ck7DwKH6KMjEJZRbX32zLsTacQNgR
    kub,<<prefix>>.54 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGtY5ERdvH+mAQKfy270I+eEaZ2i6FhhEjG0EuzDxIym
  #+END_SRC
  #+BEGIN_SRC conf
    Host vorme
    User root
    IdentityFile ~/.ssh/kub
    Host kub
    User <<username>>
    IdentityFile ~/.ssh/kub
  #+END_SRC
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'tramp
      '(add-to-list 'tramp-default-proxies-alist '("kub" "root" "/ssh:kub:")))
  #+END_SRC

* KDE
** kwin
   :PROPERTIES:
   :header-args+: :tangle ~/.config/kwinrulesrc
   :END:

   #+BEGIN_SRC conf
     [1]
     Description=Window settings for firefox
     shortcut=F5
     shortcutrule=2
     windowrole=browser
     windowrolematch=1
     wmclass=navigator firefox
     wmclasscomplete=true
     wmclassmatch=1
   #+END_SRC

   Put emacs on F4
   #+BEGIN_SRC conf
     [2]
     Description=Application settings for emacs
     shortcut=F4
     shortcutrule=2
     wmclass=emacs
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   Put konsole on F6
   #+BEGIN_SRC conf
     [3]
     Description=Application settings for konsole
     shortcut=F6
     shortcutrule=2
     wmclass=konsole
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   #+BEGIN_SRC conf
     [4]
     Description=No border on anything
     noborder=true
     noborderrule=2
   #+END_SRC

   #+BEGIN_SRC conf
     [General]
     count=4
   #+END_SRC

* Git
  #+BEGIN_SRC conf :tangle .git/config
    [core]
            repositoryformatversion = 0
            filemode = true
            bare = false
            logallrefupdates = true
    [remote "origin"]
            url = https://gitlab.com/<<username>>/<<username>>
            pushUrl = gitlab.com:<<username>>/<<username>>
            pushUrl = github.com:<<username>>/<<username>>
            pushUrl = bitbucket.org:<<username>>/<<username>>
            fetch = +refs/heads/*:refs/remotes/origin/*
    [branch "master"]
            remote = origin
            merge = refs/heads/master
  #+END_SRC

  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S git
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [user]
    name = Hoàng Đức Hiếu
    email = <<username>>@<<domain>>
    [color]
    ui = auto
    [core]
    eol = lf
    whitespace = trailing-space,space-before-tab
    [alias]
    ml = log --reverse --topo-order ORIG_HEAD..
    [merge]
    conflictstyle = diff3
    [push]
    default = simple
    [pull]
    rebase = true
    [rebase]
    stat = true
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias g git $*
  #+END_SRC

  Code hosting sites:
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
    gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
  #+END_SRC
  #+BEGIN_SRC conf :tangle ~/.ssh/config
    Host gitlab.com github.com bitbucket.org
    User git
    IdentityFile ~/.ssh/git
    Host git.kde.org
    User git
    IdentityFile ~/.ssh/kde
    Host heroku.com
    IdentityFile ~/.ssh/heroku
  #+END_SRC

  Magit is awesome.
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package magit
           :bind ("C-x g" . magit-status)
           :config
           (setq magit-save-repository-buffers 'dontask
                 magit-push-always-verify nil))))
  #+END_SRC

* Crawl
  #+BEGIN_SRC conf :tangle ~/.crawlrc
    tile_full_screen = false
    autopickup_exceptions += <tomahawk, <throwing net, <javelin, <rock, <immol
    autopickup_exceptions += <misc, <ego, <artefact, <mutagenic
  #+END_SRC

* ArchLinux
  Pacman config
  #+NAME: pacman_common
  #+BEGIN_SRC conf
    [options]
    VerbosePkgLists
    UseSyslog
    CheckSpace
    HoldPkg = pacman glibc
    SigLevel = Required DatabaseOptional
    LocalFileSigLevel = Optional

    [core]
    Include = /etc/pacman.d/mirrorlist
    [extra]
    Include = /etc/pacman.d/mirrorlist
    [community]
    Include = /etc/pacman.d/mirrorlist
    [blackarch]
    Server = http://f.archlinuxvn.org/$repo/$repo/os/$arch
  #+END_SRC

  Refresh database
  #+BEGIN_SRC sh :dir /sudo::
    dirmngr --daemon
    pacman-key -r 7533BAFE69A25079
    pacman-key --lsign 7533BAFE69A25079
    <<pacman>> -S -y
  #+END_SRC

  AUR helper
  #+BEGIN_SRC yaml :tangle ~/Copy/bin/aur :shebang #!/bin/ansible-playbook
    - hosts: arch
      gather_facts: no
      vars:
        store: /tmp/aur
      vars_prompt:
        - name: package
          private: no
      tasks:
        - file: state=directory path={{store}}
        - get_url: url=https://aur4.archlinux.org/cgit/aur.git/snapshot/{{package}}.tar.gz dest={{store}}/
        - unarchive: copy=no src={{store}}/{{package}}.tar.gz dest={{store}}
        - command: nice makepkg --noconfirm --install --force --syncdeps chdir={{store}}/{{package}}
  #+END_SRC

  Yaourt config
  #+BEGIN_SRC conf :tangle ~/.yaourtrc
    AURUPGRADE=1
    EXPORT=1
    EXPORTDIR=~
    BUILD_NOCONFIRM=1
    EDITFILES=0
  #+END_SRC

  Base utils
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S haveged p7zip parallel pkgfile yaourt
    <<system_ctl>> enable --now haveged
  #+END_SRC

  #+BEGIN_SRC sh
    pkgfile -u
  #+END_SRC

  Dev-env:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S base-devel rust android-tools
  #+END_SRC

  Monitoring:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ethtool lm_sensors net-tools psmisc \
        procps-ng inetutils ltrace sysdig atop iotop
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/Copy/bin/strace :shebang #!/bin/sh :no-expand
    exec /usr/bin/ltrace -CSn2 $@
  #+END_SRC

  Of course emacs is installed, now run it
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S emacs-pkgbuild-mode
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.config/systemd/user/emacs.service
    [Unit]
    Description=Emacs

    [Service]
    ExecStart=/bin/emacs
    Restart=always
    RestartSec=1sec

    [Install]
    WantedBy=default.target
  #+END_SRC

  #+BEGIN_SRC sh :dir ~
    <<user_ctl>> enable --now emacs syncthing pulseaudio
  #+END_SRC

** kub
   :PROPERTIES:
   :header-args+: :dir /sudo:kub:
   :END:
*** Mounts
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/fstab
      LABEL=<<username>> /home/<<username>> auto
      LABEL=var /var auto
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/systemd/network/eth0.network
      [Match]
      Name = eth0

      [Network]
      Address = <<prefix>>.54/24
      Gateway = <<prefix>>.1
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/resolv.conf
      nameserver <<prefix>>.1
    #+END_SRC

*** Pacman
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/pacman.conf :tangle-mode 260
      <<pacman_common>>

      [options]
      Architecture = armv7h

      [alarm]
      Include = /etc/pacman.d/mirrorlist
      [aur]
      Include = /etc/pacman.d/mirrorlist
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/pacman.d/mirrorlist
      Server = http://vn.mirror.archlinuxarm.org/$arch/$repo
    #+END_SRC

*** LED blinking
    #+BEGIN_SRC sh :tangle /sudo:kub:/usr/local/bin/leds :shebang #!/bin/sh
      echo none > /sys/class/leds/cubieboard:green:usr/trigger
      echo mmc0 > /sys/class/leds/cubieboard:blue:usr/trigger
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/systemd/system/leds.service
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/leds
      RemainAfterExit=true

      [Install]
      WantedBy=basic.target
    #+END_SRC

*** Tor
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S tor
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/tor/torrc
      ContactInfo tor at zahe dot me
      Nickname kub
      DirPort 4660
      ORPort 5880
      SOCKSPort <<prefix>>.54:9050
      MaxAdvertisedBandwidth 40 KBytes
      ExitPolicy reject *:*

      DataDirectory /var/lib/tor
      Log notice syslog
    #+END_SRC

*** HTTP
    #+BEGIN_SRC sh
      <<pacman>> -S nginx
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/nginx/nginx.conf
      events {}
      http {
      include       mime.types;
      default_type  text/plain;
      charset utf-8;
      gzip off;

      access_log  off;
      log_not_found off;

      server {
      return 301 https://$host$request_uri;
      }

      ssl_protocols TLSv1.2;
      ssl_ciphers EECDH+CHACHA20:EECDH+AES128;
      ssl_prefer_server_ciphers on;
      add_header Strict-Transport-Security max-age=31536000;

      map $request_uri $dest {
      /_ https://raw.githubusercontent.com/hdhoang/hdhoang/master/config/dotpentadactylrc;
      /c /mirror/caps2ctrl.exe;
      /d http://5digits.org/nightly/pentadactyl-latest.xpi;
      /pe http://live.sysinternals.com/;
      /s https://puttytray.goeswhere.com/download/putty.exe;
      /ws https://www.wosign.com/root/ca1_dv_free_2.crt;

      default "";
      }

      server {
      listen 443 ssl spdy default_server;
      ssl_certificate zahe.me.crt;
      ssl_certificate_key zahe.me.key;
      server_name kub.zahe.me zahe.me;
      root /home/hdhoang/Public/;
      autoindex on;
      if ($dest) {
      return 301 $dest;
      }
      location /ipfs/ {
      proxy_pass http://127.0.0.1:4005;
      }
      location ~ /mirror/(?:.*)\.part {
      return 403 incomplete;
      }
      }

      server {
      listen 443 ssl spdy;
      server_name id.zahe.me;
      root /home/hdhoang/Public/;
      index hdhoang;
      default_type text/html;
      }
      }
    #+END_SRC

*** DLNA
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S minidlna
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/minidlna.conf
      friendly_name=kub
      port=8200

      media_dir=<<storage>>
      media_dir=A,<<fav_music>>
      media_dir=V,/home/<<username>>/Public/mirror
    #+END_SRC
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<system_ctl>> enable --now minidlna
    #+END_SRC

*** VPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo:kub:/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 0
      tls-server
      <pkcs12>
      <<kub_pfx>>
      </pkcs12>
      <dh>
      -----BEGIN DH PARAMETERS-----
      MIIBCAKCAQEAoioJw6aUXmgBDSw6SzbSZww6i7eH0MC+Eba5qGmYJnKn2zI8dBH6
      JZKnAyz9MbD21loI6KjAnOzZkBp7DKle1cACLS229Olycr22rXWPFuhMV15TohDJ
      ArazVXSJGDL9OXhdHei96K3qXofz/3AzXEVxD0unQd5sRlgNGmunofvgWBechdmn
      YQl44SZ0asC8uUY1uiKjVyQzqeNDi3rjJtTobcPdR6Pb8CnS3cfwoWzXMwUexmfJ
      VQSNaDZIeQcwV5MEHs1XViOTiEvT8IHbJojJri0geUSJ+HkX1JTxGIUj4xxKHQ0j
      AFEjqDYFh3q7U6QgFLRWZffVLgxIZVopIwIBAg==
      -----END DH PARAMETERS-----
      </dh>
      user nobody
      group nobody

      mode server

      server 10.255.0.0 255.255.255.0
      push "route <<prefix>>.54"
    #+END_SRC

*** SSH
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/ssh/sshd_config
      Protocol 2
      HostKey /etc/ssh/ssh_host_ed25519_key
      HostKey /etc/ssh/ssh_host_rsa_key

      KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
      MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com

      AllowGroups wheel
      PasswordAuthentication no
      ChallengeResponseAuthentication no
      UsePrivilegeSeparation sandbox

      Subsystem sftp /usr/lib/ssh/sftp-server
    #+END_SRC

** ton
*** Mounts
    #+BEGIN_SRC sh
      fallocate -l 2G /swap
      chmod u=rw,go= /swap
      mkswap /swap
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
      LABEL=home /home/<<username>> ntfs-3g noatime,nofail
      LABEL=ESP /boot vfat
      /swap none swap
    #+END_SRC

*** Hosts
    #+BEGIN_SRC conf :tangle /sudo::/etc/hosts :tangle-mode 260
      127.0.0.1 ton
      ::1 ton
      <<prefix>>.1 vorme
      <<prefix>>.54 kub
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/00-bkap.network
      [Match]
      Name = enp4s0

      [Network]
      DNS = 8.8.8.8
      Address = 192.168.0.252/24
      Gateway = 192.168.0.1
      Address = 192.168.1.252/24
      Gateway = 192.168.1.1
      Address = 192.168.4.252/24
      Gateway = 192.168.4.1
      Address = 192.168.5.252/24
      Gateway = 192.168.5.1

      [Route]
      Destination=192.168.1.1
      Source=192.168.1.252
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/dhcp.network
      [Network]
      DHCP=ipv4
    #+END_SRC

*** Pacman
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.conf :tangle-mode 260
    <<pacman_common>>

    [options]
    Architecture = auto

    [multilib]
    Include = /etc/pacman.d/mirrorlist
  #+END_SRC
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.d/mirrorlist
    Server = http://f.archlinuxvn.org/archlinux/$repo/os/$arch
  #+END_SRC

*** VPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo::/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 1
      tls-client
      <pkcs12>
      <<ton_pfx>>
      </pkcs12>

      nobind
      pull

      remote k.<<domain>> 22
      verify-x509-name kub.<<domain>> name
      remote-cert-tls server
      resolv-retry infinite
    #+END_SRC

*** Fonts
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S adobe-source-{sans,serif,code}-pro-fonts adobe-source-han-sans-otc-fonts
    #+END_SRC

    #+BEGIN_SRC xml :tangle ~/.config/fontconfig/fonts.conf :padline no :comments no
      <?xml version='1.0'?>
      <!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
      <fontconfig>
        <match target="font">
          <edit mode="assign" name="rgba">
            <const>none</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hinting">
            <bool>true</bool>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hintstyle">
            <const>hintslight</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="antialias">
            <bool>true</bool>
          </edit>
        </match>
        <dir>~/.fonts</dir>
        <match target="pattern">
          <test qual="any" name="family"><string>Arial</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <match target="pattern">
          <test qual="any" name="family"><string>DejaVu Sans</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <alias>
          <family>sans-serif</family>
          <prefer>
            <family>Source Sans Pro</family>
          </prefer>
        </alias>
        <alias>
          <family>serif</family>
          <prefer>
            <family>Source Serif Pro</family>
          </prefer>
        </alias>
        <alias>
          <family>monospace</family>
          <prefer>
            <family>Source Code Pro</family>
          </prefer>
        </alias>
        <selectfont>
          <rejectfont>
            <glob>/usr/share/fonts/default/Type1/*</glob>
            <pattern>
              <patelt name="scalable">
                <bool>false</bool>
              </patelt>
            </pattern>
          </rejectfont>
        </selectfont>
      </fontconfig>
     #+END_SRC

*** Desktop
    These DBus services are provided by plasma-workspace-units.
    #+BEGIN_SRC sh :dir /sudo::
      rm /usr/share/dbus-1/services/org.kde.{kded5,kglobalaccel,kuiserver,kwalletd5}.service
    #+END_SRC

**** Inside VM
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now systemd-networkd-wait-online sshd
     #+END_SRC
     #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
       //192.168.208.1/home /home/<<username>> cifs credentials=/etc/cifs,uid=1000,gid=1000,file_mode=0600
     #+END_SRC
     On the host side, open 445/tcp to this VM, and run emacs over X as
     #+BEGIN_SRC sh
       setxkbmap dvorak && emacs
     #+END_SRC

**** Keyboard
     Use dvorak, swap caps for ctrl
     #+BEGIN_SRC conf :tangle /sudo::/usr/share/kbd/keymaps/caps2ctrl.map
       include "/usr/share/kbd/keymaps/i386/dvorak/dvorak.map.gz"
       keycode 58 = Control
     #+END_SRC
     #+BEGIN_SRC sh
       localectl set-keymap caps2ctrl
     #+END_SRC

     Base Japanese IME on dvorak, swap caps for ctrl
     #+BEGIN_SRC conf
       Windows Registry Editor Version 5.00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]
       "Scancode Map"=hex:00,00,00,00,00,00,00,00,02,00,00,00,1d,00,3a,00,00,00,00,00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layouts\00000411]
       "Layout File"="kbddv.dll"
     #+END_SRC

**** Pointer
     Use evdev for the touchscreen
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Atmel touchscreen"
               MatchProduct "maXTouch"
               Driver "evdev"
       EndSection
     #+END_SRC

     Use natural scrolling on touchpad
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Natural scrolling"
               MatchProduct "TouchPad"
               MatchDriver "libinput"
               Option "NaturalScrolling" "1"
       EndSection
     #+END_SRC

**** Rotation
     #+BEGIN_SRC sh :dir /sudo::
       <<pacman>> -S acpid
     #+END_SRC
     #+BEGIN_SRC text :tangle /sudo::/etc/acpi/events/rotation-button
       event=ibm/hotkey LEN0068:00 00000080 00006020
       action=sudo -u hdhoang DISPLAY=:0 /usr/local/bin/rotate-screen
     #+END_SRC
     #+BEGIN_SRC sh :tangle /sudo::/usr/local/bin/rotate-screen :shebang #!/bin/sh
       case $(xrandr | grep LVDS1 | cut -f 4 -d ' ' | tr -d '(') in
           normal) new="left";;
           left)   new="normal";;
       esac
       xrandr --output LVDS1 --rotate $new

       case $new in
           normal) matrix="1 0 0 0 1 0 0 0 1";;
           left)   matrix="0 -1 1 1 0 0 0 0 1";;
           right)  matrix="0 1 0 -1 0 1 0 0 1";;
           inverted) matrix="-1 0 1 0 -1 1 0 0 1";;
       esac
       for dev in "SynPS/2 Synaptics TouchPad" "TPPS/2 IBM TrackPoint" "Atmel Atmel maXTouch Digitizer"; do
           xinput set-prop "$dev" "Coordinate Transformation Matrix" $matrix
       done
     #+END_SRC
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now acpid
     #+END_SRC

*** Picard
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S picard chromaprint
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/MusicBrainz/Picard.conf
      [setting]
      server_host=musicbrainz.org
      server_port=80

      fingerprinting_system=acoustid
      acoustid_apikey=<<acoustid_key>>
      acoustid_fpcalc=/usr/bin/fpcalc

      save_images_to_tags=true
      save_only_front_images_to_tags=true
      save_images_to_files=false
      ca_provider_use_amazon=true
      ca_provider_use_caa=true
      ca_provider_use_caa_release_group_fallback=true
      ca_provider_use_whitelist=true
      caa_image_size=1
      caa_approved_only=true
      caa_restrict_image_types=true
      analyze_new_files=false
      ignore_file_mbids=false
      quit_confirmation=true
      va_name=Various Artists
      nat_name=
      standardize_artists=true

      windows_compatibility=true
      ascii_filenames=false
      rename_files=true
      move_files=true
      file_naming_format="$if2(%albumartist%,%artist%)/$if($ne(%albumartist%,),%album%/)$if($gt(%totaldiscs%,1),%discnumber%-,)$if($ne(%albumartist%,),$num(%tracknumber%,2) ,)$if(%_multiartist%,%artist% - ,)%title%"
      move_files_to=<<fav_music>>/_new
      move_additional_files=true
      move_additional_files_pattern=*.jpg *.png *.jpeg
      delete_empty_dirs=true

      browser_integration=true
      browser_integration_port=8000
      browser_integration_localhost_only=true

      dont_write_tags=false
      preserve_timestamps=false
      write_id3v1=true
      write_id3v23=true
      id3v23_join_with=/
      id3v2_encoding=utf-16
      remove_ape_from_mp3=true
      remove_id3_from_flac=true
    #+END_SRC
*** mpd
    :PROPERTIES:
    :header-args+: :dir ~
    :END:

    Create playlist
    #+BEGIN_SRC sh
      mpc listall > <<fav_music>>/pq.m3u
    #+END_SRC

    Shuffle and play
    #+BEGIN_SRC sh :results raw
      mpc -q clear && mpc load pq && mpc -q shuffle && mpc play
    #+END_SRC

    Delete currently playing track
    #+BEGIN_SRC sh :eval query
      rm -v <<fav_music>>/"$(mpc -f %file% | head -1)"
    #+END_SRC

*** mpv
    #+BEGIN_SRC conf :tangle ~/.config/mpv/mpv.conf
      sub-auto=fuzzy
      hwdec=auto
      hwdec-codecs=all
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/mpv/input.conf
      q quit_watch_later
      MOUSE_BTN0 cycle pause
      MOUSE_BTN1 show_progress
      MOUSE_BTN2 cycle fullscreen
      z set window-scale 0.5
      Z set window-scale 1

      ; show_progress
      f show_text "${filename}"
      d cycle audio
      y add volume 1
      i add volume -1
      g add sub-delay  0.1
      h add sub-delay -0.1
      x cycle mute

      k frame_step
      ' seek +10
      a seek -10
      , seek +60
      o seek -60
      . seek +300
      e seek -300

      u cycle fullscreen
    #+END_SRC
* Emacs
  :PROPERTIES:
  :header-args+: :tangle ~/.emacs
  :END:

  OOBE settings:
  #+BEGIN_SRC elisp
    (server-mode t)
    (desktop-save-mode t)
    (global-set-key (kbd "C-x C-r")
                    (lambda () (interactive)
                      (revert-buffer :noconfirm t)))
    (defalias 'yes-or-no-p #'y-or-n-p)
    (defalias 'dabbrev-expand #'hippie-expand)
    (setq auto-save-default nil
          calendar-week-start-day 1
          default-input-method "vietnamese-telex"
          desktop-load-locked-desktop t
          inhibit-startup-screen t
          make-backup-files nil
          scroll-preserve-screen-position t
          tramp-default-method "ssh"
          undo-tree-mode-lighter ""
          visible-bell t
          frame-title-format "%b")
    (set-language-environment "UTF-8")
    (setq-default buffer-file-coding-system 'utf-8-unix)
    (setq-default sentence-end-double-space nil)
    (global-set-key (kbd "C-\\") #'toggle-input-method)
    (blink-cursor-mode -1)
    (show-paren-mode t)
    (winner-mode)
  #+END_SRC

  Package management
  #+BEGIN_SRC elisp
    (package-initialize)
    (setq package-archives
          '(("gnu" . "https://elpa.gnu.org/packages/")
            ("marmalade" . "https://marmalade-repo.org/packages/")
            ("melpa" . "http://melpa.org/packages/")))
    (unless (package-installed-p 'use-package)
      (package-refresh-contents)
      (package-install 'use-package))
    (setq use-package-always-ensure t)
    (require 'use-package)
  #+END_SRC

  Color theme
  #+BEGIN_SRC elisp
    (use-package color-theme-sanityinc-solarized
      :config (load-theme 'sanityinc-solarized-light t))
  #+END_SRC

  Font on Windows
  #+BEGIN_SRC elisp
    (when (eq window-system 'w32)
      (if (> window-system-version 5)
          (set-default-font "Consolas-12" :frames t)
        (set-default-font "Lucida Console-10" :frames t)))
  #+END_SRC

** Editing
   Vim-style
   #+BEGIN_SRC elisp
     (use-package evil
       :config
       (evil-mode t)
       (evil-set-initial-state 'special-mode 'emacs)
       (dolist (state '(normal motion))
         (evil-define-key state global-map
           (kbd "<SPC>") #'evil-scroll-down
           (kbd "S-<SPC>") #'evil-scroll-up))
       (dolist (state '(insert motion normal))
         (evil-define-key state global-map
           (kbd "C-t") #'transpose-chars
           (kbd "C-d") #'delete-char
           (kbd "C-k") #'kill-line
           (kbd "C-y") #'evil-paste-before
           (kbd "C-a") #'beginning-of-line (kbd "C-e") #'end-of-line
           (kbd "C-f") #'forward-char   (kbd "C-b") #'backward-char
           (kbd "C-n") #'next-line      (kbd "C-p") #'previous-line
           (kbd "<down>") #'next-line   (kbd "<up>") #'previous-line
           (kbd "j") #'next-line        (kbd "k") #'previous-line
           (kbd "C-v") #'evil-scroll-down (kbd "M-v") #'evil-scroll-up
           (kbd "C-r") #'isearch-backward))
       (evil-define-key 'insert global-map
         "j" #'self-insert-command "k" #'self-insert-command)
       (evil-define-key 'motion help-mode-map
         (kbd "<tab>") #'forward-button))
   #+END_SRC

   Aggressive indent
   #+BEGIN_SRC elisp
     (use-package aggressive-indent
       :diminish ""
       :config (global-aggressive-indent-mode))
   #+END_SRC

   Switch window with ace
   #+BEGIN_SRC elisp
     (use-package ace-window
       :config (ace-window-display-mode 1)
       :bind ("C-x o" . ace-window))
   #+END_SRC

   Do things with helm:
   #+BEGIN_SRC elisp
     (use-package helm
       :config
       (helm-mode 1)
       (define-key shell-mode-map (kbd "M-r") #'helm-comint-input-ring)
       :diminish helm-mode
       :bind (("C-h SPC" . helm-all-mark-rings)
              ("C-x b" . helm-mini)
              ("C-x C-b" . helm-buffers-list)
              ("C-x C-f" . helm-find-files)
              ("C-c g" . helm-do-grep)
              ("C-s" . helm-occur)
              ("M-x" . helm-M-x)))
     (require 'helm-config)
     (use-package evil
       :config (dolist (state '(insert motion normal))
                 (evil-define-key state global-map
                   (kbd "M-y") #'helm-show-kill-ring)))
   #+END_SRC

** Org
   #+BEGIN_SRC elisp
     (add-hook 'org-mode-hook
               '(lambda ()
                  (add-hook 'before-save-hook 'org-align-all-tags
                            :local t)))
     (org-babel-do-load-languages 'org-babel-load-languages
                                  '((sh . t)))
     (setq org-src-fontify-natively t)
   #+END_SRC

*** Crypt
    #+BEGIN_SRC elisp
      (require 'org-crypt)
      (add-hook 'org-mode-hook
                '(lambda ()
                   (add-hook 'before-save-hook 'org-encrypt-entries
                             :local t)))
      (setq org-tags-exclude-from-inheritance '("crypt"))
    #+END_SRC

    Make it possible to tangle encrypted block
    #+BEGIN_SRC elisp
      (remove-hook 'org-babel-pre-tangle-hook #'save-buffer)
    #+END_SRC

** Doc-View
   #+BEGIN_SRC elisp
     (eval-after-load 'doc-view
       '(bind-key (kbd "<mouse-1>") #'doc-view-scroll-up-or-next-page doc-view-mode-map))
     (setq doc-view-resolution 300
           doc-view-cache-directory (expand-file-name "~/.emacs.d/doc-view"))
     (use-package evil
       :config (add-hook 'view-mode-hook #'evil-emacs-state))
   #+END_SRC

** Dired
   #+BEGIN_SRC elisp
     (use-package dired+
       :config
       (require 'dired+)
       (global-dired-hide-details-mode -1)
       (defun dired-open ()
         (interactive)
         (dired-do-shell-command "xdg-open &" :file-list (dired-get-marked-files)))
       (define-key dired-mode-map (kbd "RET") #'dired-open)
       (define-key dired-mode-map (kbd "<mouse-2>") #'dired-open)
       (setq dired-recursive-copies 'always
             dired-recursive-deletes 'always
             dired-listing-switches "-alh"
             dired-guess-shell-alist-user
             '(("\\.cb.\\'" "okular")
               ("." "xdg-open;"))))
   #+END_SRC

** Eshell
   Put eshell on a convenient binding
   #+BEGIN_SRC elisp
     (global-set-key (kbd "C-x M-m") #'eshell)
   #+END_SRC

   I like the prompt to be on a separate line.
   #+BEGIN_SRC elisp
     (setq eshell-prompt-function
           '(lambda ()
              (concat (eshell/pwd) "\n"
                      (int-to-string eshell-last-command-status) " % "))
           eshell-prompt-regexp "^[[:digit:]]\\{1,3\\} % ")
   #+END_SRC

   These are terminal-manipulating commands
   #+BEGIN_SRC elisp
     (eval-after-load 'em-term
       '(progn
          (dolist (prog '("atop" "systemd-cgls" "journalctl"))
            (add-to-list 'eshell-visual-commands prog))
          (add-to-list 'eshell-visual-options '("ssh" "-t"))))
   #+END_SRC

   Profile:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/profile :no-expand
     addpath ~/Copy/bin
   #+END_SRC

   Aliases:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias vim find-file $1
     alias i yaourt $*
     alias j journalctl -afb $*
     alias sc <<system_ctl>> $*
     alias uc <<user_ctl>> $*
     alias ytdl <<ytdl>> -a /home/<<username>>/q.txt
     alias fr free -h
   #+END_SRC

* Ansible
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ansible
  #+END_SRC

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package yaml-mode)
         (use-package ansible-doc
           :config (add-hook 'yaml-mode-hook #'ansible-doc-mode))))
  #+END_SRC

** Inventory
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible_inventory
   :END:

   Here are the hosts and their variables
   #+BEGIN_SRC conf
     [arch]
     kub ansible_python_interpreter=/usr/bin/python2
     ton ansible_python_interpreter=/usr/bin/python2 ansible_connection=local

     [all:vars]
     user=<<username>>
     home=/home/<<username>>
     h=<<storage>>
     conf="{{h}}/config/{{ansible_hostname}}"
     locale=en_US
     prefix=<<prefix>>
   #+END_SRC

** Config
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible.cfg
   :END:

   Keep the inventory here
   #+BEGIN_SRC conf
     [defaults]
     inventory = ~/.ansible_inventory
   #+END_SRC

   For some reason ControlMaster isn't working
   #+BEGIN_SRC conf
     [ssh_connection]
     ssh_args=-o ControlMaster=no
   #+END_SRC

* Firefox
  :PROPERTIES:
  :header-args+: :tangle ~/.pentadactylrc
  :END:
  This file is in vimrc syntax

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(use-package vimrc-mode))
  #+END_SRC

  Use DuckDuckGo:

  #+BEGIN_SRC vimrc
    silent bmark -keyword ddg -t DDG https://duckduckgo.com/?kn=1&kp=-1&kae=c&q=%s
    set defsearch=ddg
  #+END_SRC

  Use backspace to go back:
  #+BEGIN_SRC vimrc
    set! browser.backspace_action=0
  #+END_SRC

  Don't let middle mouse paste:
  #+BEGIN_SRC vimrc
    set! middlemouse.contentLoadURL=false
  #+END_SRC

  Restore C-j for Downloads:
  #+BEGIN_SRC vimrc
    map <C-j> -ex dialog downloads
  #+END_SRC

  Bind stop to an easy binding:
  #+BEGIN_SRC vimrc
    map s <C-c>
  #+END_SRC

  Make scrolling easier:
  #+BEGIN_SRC vimrc
    map <space> <C-d>
    map <S-space> <C-u>
  #+END_SRC

  Pin tab:
  #+BEGIN_SRC vimrc
    map <A-p> -ex pintab!
  #+END_SRC

  Move to first or last:
  #+BEGIN_SRC vimrc
    map <A-!> -ex tabm 1
    map <A-$> -ex tabm $
  #+END_SRC

  Fast switching:
  #+BEGIN_SRC vimrc
    map -m normal,insert <F1> <C-^>
  #+END_SRC

  Don't raise these openings:
  #+BEGIN_SRC vimrc
    set activate-=diverted,links,tabopen,paste
  #+END_SRC

  Open help in a new tab
  #+BEGIN_SRC vimrc
    set newtab=help
  #+END_SRC

  Keep hint keys under left fingers:
  #+BEGIN_SRC vimrc
    set hintkeys=12345
  #+END_SRC

  Make hint text readable
  #+BEGIN_SRC vimrc
    highlight Hint -append font-size: 14px !important
  #+END_SRC

  Unzoom image:
  #+BEGIN_SRC vimrc
    map <A-t> -js content.document.toggleImageSize()
  #+END_SRC

  Show link in commandline:
  #+BEGIN_SRC vimrc
    set guioptions+=c
    set showstatuslinks=command
  #+END_SRC

  Scroll by one line:
  #+BEGIN_SRC vimrc
    set scrollsteps=1
  #+END_SRC

  Show feeds first in pageinfo:
  #+BEGIN_SRC vimrc
    set pageinfo=fgmse
  #+END_SRC

  Use visual bell:
  #+BEGIN_SRC vimrc
    set visualbell
  #+END_SRC

  Bookmarks and preferences:
  #+BEGIN_SRC vimrc
    map <C-S-s> -ex bmark -keyword ac -t config about:config
    \ bmark -keyword bgp -t BGP http://bgp.he.net/search?search[search]=%s
    \ bmark -keyword v -t valsi http://vlasisku.lojban.org/?query=%s
    \ bmark -keyword c -t camxes http://camxes.lojban.org/?text=%s
    \ bmark -keyword yb -t youtube https://youtube.com/watch?v=%s
    \ bmark -keyword cw -t 'CrawlWiki' http://crawl.chaosforge.org/index.php?title=Special%3ASearch&search=%s
    \ bmark -keyword bb -t burnbit http://burnbit.com/burn?file=%s
    \ bmark -keyword b -t btdigg https://btdigg.org/search?q=%s&order=0&p=0
    \ bmark -keyword ba -t btdigg https://btdigg.org/search?q=%s&order=2&p=0
    \ bmark -keyword m -t zing http://mp3.zing.vn/tim-kiem/bai-hat.html?q=%s
    \ bmark -keyword ma -t artist http://musicbrainz.org/search?advanced=1&type=artist&tport=8000&query=%s
    \ bmark -keyword mg -t group http://musicbrainz.org/search?advanced=1&type=release_group&tport=8000&query=%s
    \ bmark -keyword mr -t recording http://musicbrainz.org/search?advanced=1&type=recording&tport=8000&query=%s
    \ bmark -keyword gm -t gmail https://mail.google.com/mail/#spam
    \ set! accessibility.browsewithcaret_shortcut.enabled=false
    \ set! browser.newtabpage.enabled=false
    \ set! browser.privatebrowsing.dont_prompt_on_enter=true
    \ set! browser.sessionstore.restore_pinned_tabs_on_demand=true
    \ set! browser.shell.checkDefaultBrowser=false
    \ set! browser.startup.homepage=about:blank
    \ set! browser.startup.page=3
    \ set! general.warnOnAboutConfig=false
    \ set! security.OCSP.enabled=0
    \ set! security.warn_viewing_mixed=false
    \ set! layout.spellcheckDefault=0
    \ set! middlemouse.paste=true
    \ set! ui.key.menuAccessKey=0
    \ set! browser.anchor_color="#6c71c4"
    \ set! browser.display.background_color="#fdf6e3"
    \ set! browser.display.foreground_color="#657b83"
    \ set! browser.display.use_system_colors=false
    \ set! font.default.x-western="sans-serif"
    \ set! font.minimum-size.x-western=15
    \ if /NT 6/.test(window.navigator.oscpu)
    \     set! font.name.monospace.x-western=Consolas
    \ fi
    \ set! extensions.checkCompatibility.nightly=false
    \ set! extensions.https_everywhere._observatory.alt_roots=true
    \ set! extensions.https_everywhere._observatory.enabled=true
    \ set! extensions.https_everywhere._observatory.priv_dns=true
    \ set! plugins.hide_infobar_for_missing_plugin=true
    \ set! browser.download.manager.alertOnEXEOpen=false
    \ set! browser.download.manager.scanWhenDone=false
    \ set! browser.search.context.loadInBackground=true
    \ set! intl.charset.default=UTF-8
    \ set! network.http.pipelining=true
    \ set! network.http.pipelining.aggressive=true
    \ set! network.http.pipelining.ssl=true
    \ set! network.protocol-handler.expose.magnet=false
    \ set! network.proxy.socks=kub.<<domain>>
    \ set! network.proxy.socks_port=9050
    \ set! network.proxy.socks_remote_dns=true
    \ set! toolkit.telemetry.enabled=true
    \ js services.permissions.add(services.io.newURI("http:depositfiles.com",null,null), 'image', services.permissions.DENY_ACTION)
    \ js services.loginManager.setLoginSavingEnabled("accounts.google.com", false)
  #+END_SRC

  Strip tracker from location, thanks to [[https://userscripts.org/scripts/show/93825][Bruno Barão]] and [[https://github.com/5digits/dactyl/commit/7a1ffa5b555399c5d0925ad599e2640070bd128d][Kris Maglione]].
  #+BEGIN_SRC vimrc
    autocmd DOMLoad (utm|wa)_ -js win.history.replaceState("Remove trackers", '', doc.location.href.replace(/&?(utm|wa)_[^&]+/g,'').replace(/\?$/,''))
  #+END_SRC

  Facebook
  #+BEGIN_SRC vimrc
    bmark -keyword fb -t facebook https://fb.me/%s
    map <A-s> -js dactyl.open("https://www.facebook.com/sharer/sharer.php?u=" + content.location)
  #+END_SRC

  Inoreader
  #+BEGIN_SRC vimrc
    map <A-f> -js dactyl.open("https://www.inoreader.com/?add_feed=" + content.location)
    map <A-w> -js dactyl.open("https://www.inoreader.com/bookmarklet/save_web_page/" + encodeURIComponent(content.location))
    js services.permissions.add(services.io.newURI("http:inoreader.com",null,null), 'popup', services.permissions.ALLOW_ACTION)
    set passkeys+=inoreader.com:jkgafswhq
  #+END_SRC
  Get videos from starred items
  #+BEGIN_SRC sh :tangle /kub:.bashrc
    function videos() {
        <<ytdl>> --ignore-errors https://www.inoreader.com/stream/user/1005933915/tag/user-favorites
    }
  #+END_SRC

  Site keyboard shortcuts:
  #+BEGIN_SRC vimrc
    set passkeys+=tumblr.com:jk
    set passkeys+=mail.google.com/mail/:'#!ms+-/? jknpux'
    set passkeys+=google.com/contacts/:'#jkoux,.'
  #+END_SRC

  Switch to reader mode:
  #+BEGIN_SRC vimrc
    map <A-r> -js dactyl.open("about:reader?url=" + content.location)
  #+END_SRC

* Secrets							      :crypt:
-----BEGIN PGP MESSAGE-----
Version: GnuPG v2

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
U4hpox5+YhtMwEdQNFB9lWGMn4nXBpfLIdeutBrDBO88bjwDBU7MPb17hsWSgyj4
xjJst+oKPQaIwWFEciz9AbtFX5Kp8Kmq222IhVegdvU60pA6n6NEiyTh00IJWxpE
NNdZWpsiJDlut02vXlT9kc0Q8pavxdlb28flQJquOJ2nLyWFOQTQ0tegh1GYrcVq
1FVaXcRL+XE3xNlmmSCw5kEKDU36CbGL+Pxm1bQvGcDnSXRAzYPL9Y+4ZxjZqMNn
k2bDo6DdIcRHJrW3GQsi85kL9J1WF2jZPyT+8MBNfytGj8lzZVPcbcbvqDsw8Znx
aEbaijkk4mhwRyId8NYBbIUSTUxU0c7woR38ZERRTmz2FfVjmP6ACQ5H7BLN4j7L
2zaadOUb4zLikavAkkFVG5NdaP/CjFdoaCAZ1F6DRj9V1tXUW2knY6g0aLmKHL23
bh7eypGW0JOin+se0LXUl+BVT1Iww0feYsNynyCyhUsm+c/kOn18T9f4G2qg/N1U
x2Pel7DXXvQAws163orEcKHba/VbsaIMapRQbzMLLWSQVgOjwFUCDWmL0MC3AP2j
xDvXW6TgNPdynuL0vtS+lpO5QD/8qHq8nP6fVLw2Y77c4pKoQLaSyYzS7tkFayT8
8XK7CPYWkX2WQnf+1FxZAao7gVzceqm9DN5spcoFobEE/rADFbPl+FWW/7+7nh8j
XkXwv8FSvbf55ahoUgGyzPuB3cq+XcsDmAd8hkojDMM5/ADTL5/ZCQjuSe7j6zFb
QutAetNTsdqogdLkRgld5PzpNUBwv6+XnqnZtVaZfkkKQVb80GqbU7+bNmIpvCYl
sayiSHzivv5SD+CYrd9uufzqWIHsHF4shaTzYFI++JRk7/Ms5GCG1+mQBv6asJ9c
ol1dmDl3nONShtRQfz/8kVTf/GBt9WynL/lO7S6poPxustiXhjrQi8feX5RIlio0
8oFpyxcufFVhOmPMcZ0T+nGcZU8I8fKr+2nscXlZYNu10rrXUtxO182OtCCg3qcK
OQ5AChg0aHRo5UIYPrTriCyDSnxC6kKMh2br96nVvXqNl6VRuXQMUc4tdfmcow4F
oAGiTrykJ2fnYf6JflyNkqtG6rag6L/nA7CtRsdgDrHQ/ok5zR/V/UU3FAPqK+mV
HdKNbz5qz8S3z4tmWaQVvulNa+gVbuhqHQg/YBORAYtH8fuFlKE2UsU2l0W6ee5e
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
=Nc5G
-----END PGP MESSAGE-----
