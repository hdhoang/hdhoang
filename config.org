#+STARTUP: showall
#+PROPERTY: header-args+ :cache yes
#+PROPERTY: header-args+ :comments org
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :noweb yes
#+PROPERTY: header-args+ :results silent
#+PROPERTY: header-args+ :tangle-mode 384
#+PROPERTY: header-args:text+ :eval no
* Places and names
  #+NAME: username
  #+BEGIN_SRC text
    hdhoang
  #+END_SRC

  #+NAME: storage
  #+BEGIN_SRC text
    /home/<<username>>/Copy
  #+END_SRC

  #+NAME: fav_music
  #+BEGIN_SRC text
    /home/<<username>>/Music
  #+END_SRC

  #+NAME: prefix
  #+BEGIN_SRC text
    10.117.14
  #+END_SRC

  #+NAME: domain
  #+BEGIN_SRC text
    zahe.me
  #+END_SRC

  #+NAME: system_ctl
  #+BEGIN_SRC text
    systemctl --system --no-pager
  #+END_SRC

  #+NAME: user_ctl
  #+BEGIN_SRC text
    systemctl --user --no-pager
  #+END_SRC

  #+NAME: pacman
  #+BEGIN_SRC text
    pacman --noconfirm --needed
  #+END_SRC

  #+NAME: ytdl
  #+BEGIN_SRC text
    youtube-dl --format "[height <=? 720]" --output ~/Videos/"%(uploader)s %(upload_date)s %(title)s@%(id)s.%(ext)s"
  #+END_SRC

* VPN
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S openvpn
  #+END_SRC
  #+NAME: openvpn_common
  #+BEGIN_SRC conf
    dev tun
    topology subnet
    persist-key
    persist-tun
    keepalive 10 30
    tls-version-min 1.2
    tls-cipher TLS-DHE-RSA-WITH-AES-128-CBC-SHA
    <tls-auth>
    <<ta_key>>
    </tls-auth>
    <ca>
    -----BEGIN CERTIFICATE-----
    MIIEYTCCA0mgAwIBAgIJAPxrcItU3yz8MA0GCSqGSIb3DQEBCwUAMH0xCzAJBgNV
    BAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFOb2kxDTALBgNVBAoTBHph
    aGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3phaGUubWUxHjAcBgkqhkiG
    9w0BCQEWD2hkaG9hbmdAemFoZS5tZTAeFw0xNTA5MjYxMTM0NTRaFw0yNTA5MjMx
    MTM0NTRaMH0xCzAJBgNVBAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFO
    b2kxDTALBgNVBAoTBHphaGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3ph
    aGUubWUxHjAcBgkqhkiG9w0BCQEWD2hkaG9hbmdAemFoZS5tZTCCASIwDQYJKoZI
    hvcNAQEBBQADggEPADCCAQoCggEBANXOfdISWeotIr3neKpj6IGBlCLMEBNtMB1r
    bTIgkxe9tnNd4jBufq6duLK91ioqcJiAxMLRovYtaRTOpQit5/PnAm2Iwu3u2mGX
    EftWEBSVt437NMVA6L2Jemv1lp81vmzJIODgPQ9elrNteQ3ccAMCpuj/l6PhGeFq
    JvK+dNIJcm2+xM15S6ESwjsZxwijiT3TMJAjXJPC5R3gpULoTHrphPGrS/0RIq9c
    Bd/+4Q7k1MguPK2XSKHiJnUIkQJ/m/XGT2iXVEzhOsHZ8vlaNq1xBzTko10nEb7I
    sOQjuH4GCZMeoYnF3egg534fg+BYPAecuKglqdIpnm4+syJsrR0CAwEAAaOB4zCB
    4DAdBgNVHQ4EFgQUsDCM7/aJ6AjPVQPEbdDTiTa9WIswgbAGA1UdIwSBqDCBpYAU
    sDCM7/aJ6AjPVQPEbdDTiTa9WIuhgYGkfzB9MQswCQYDVQQGEwJWTjELMAkGA1UE
    CBMCSE4xDjAMBgNVBAcTBUhhTm9pMQ0wCwYDVQQKEwR6YWhlMRAwDgYDVQQDEwd6
    YWhlIENBMRAwDgYDVQQpEwd6YWhlLm1lMR4wHAYJKoZIhvcNAQkBFg9oZGhvYW5n
    QHphaGUubWWCCQD8a3CLVN8s/DAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUA
    A4IBAQAKkiDOWmwu1D+qbCSYaSxiMfJ70FyA/o+AuCDeaGxKdFLZ2JQgYK/az3y8
    tGQKBc6AdUY7BoN1Ab/6TOz+hWvmyNOOvq2AMgt2bHHA+JquRZMdgw59OtbB2BjC
    vBs2cxRJWdmv8aSltcqVpm2HNHy3mzcq8i0CdFluxDV+zQmvhGVypAipYTlhdi0l
    KLJlB+3fqS5GQB0wPmkV2N6WJdm0NfoTbBOCXwVb4ChyrgryQaOQi5nu8wO9tzeO
    kK/jQJRFKpdwBYqAe0Q/JP95pVjctyiVFg97ppvQ557QFcY1pHapAwhyBmxYiLak
    W4pz42IduC2pnZ3ut4C7UzpeDMRr
    -----END CERTIFICATE-----
    </ca>
  #+END_SRC

* SSH
  :PROPERTIES:
  :header-args+: :tangle ~/.ssh/config
  :END:

  SSH encryption settings by https://stribika.github.io/2015/01/04/secure-secure-shell.html

  #+BEGIN_SRC conf
    Host *
    KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256
    Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com,hmac-sha1
  #+END_SRC

  Machines
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    vorme ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCf2C8j0GFA8eq8Vgva/9KI4cF4Q23v4rBk6zAxoyIJvENGkpDuUba4AOMabUkPiXU76KVbx/h4fOivjrWoUNG6Z0xEOJTQqVwuk7788dwIm49Ba+ZOC/sCtT7dsbshFpzXmkdASsZty0foFSILRADDTlB1MZiN9wJRlnjkmIO9WiSMYnuGzolO2f+Gy6LFrtQF1ZgOOqPToO4u4li3VPh1zdoY5+IQul9BQJGU7tMZrleH09LcOUlip8SHZYuXu/Zlb9GSK7Cj7WfGaR0k+xvs657n41haffQ5CxTjocqZdv7eO4Uo2ryWXn2Ck7DwKH6KMjEJZRbX32zLsTacQNgR
    kub,<<prefix>>.54 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGtY5ERdvH+mAQKfy270I+eEaZ2i6FhhEjG0EuzDxIym
  #+END_SRC
  #+BEGIN_SRC conf
    Host vorme
    User root
    IdentityFile ~/.ssh/kub
    Host kub
    User <<username>>
    IdentityFile ~/.ssh/kub
  #+END_SRC
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'tramp
      '(add-to-list 'tramp-default-proxies-alist '("kub" "root" "/ssh:kub:")))
  #+END_SRC

* KDE
** kwin
   :PROPERTIES:
   :header-args+: :tangle ~/.config/kwinrulesrc
   :END:

   #+BEGIN_SRC conf
     [1]
     Description=Window settings for firefox
     shortcut=F5
     shortcutrule=2
     windowrole=browser
     windowrolematch=1
     wmclass=navigator firefox
     wmclasscomplete=true
     wmclassmatch=1
   #+END_SRC

   Put emacs on F4
   #+BEGIN_SRC conf
     [2]
     Description=Application settings for emacs
     shortcut=F4
     shortcutrule=2
     wmclass=emacs
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   Put konsole on F6
   #+BEGIN_SRC conf
     [3]
     Description=Application settings for konsole
     shortcut=F6
     shortcutrule=2
     wmclass=konsole
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   #+BEGIN_SRC conf
     [4]
     Description=No border on anything
     noborder=true
     noborderrule=2
   #+END_SRC

   #+BEGIN_SRC conf
     [General]
     count=4
   #+END_SRC

* Git

  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S git
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [user]
    name = Hoàng Đức Hiếu
    email = <<username>>@<<domain>>
    [color]
    ui = auto
    [core]
    eol = lf
    whitespace = trailing-space,space-before-tab
    [alias]
    ml = log --reverse --topo-order ORIG_HEAD..
    [merge]
    conflictstyle = diff3
    [push]
    default = simple
    [pull]
    rebase = true
    [rebase]
    stat = true
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias g git $*
  #+END_SRC

  Code hosting sites:
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
  #+END_SRC
  #+BEGIN_SRC conf :tangle ~/.ssh/config
    Host github.com bitbucket.org
    User git
    IdentityFile ~/.ssh/git
    Host git.kde.org
    User git
    IdentityFile ~/.ssh/kde
    Host heroku.com
    IdentityFile ~/.ssh/heroku
  #+END_SRC

  Magit is awesome.
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package magit
           :bind ("C-x g" . magit-status)
           :config
           (setq magit-save-repository-buffers 'dontask
                 magit-push-always-verify nil))))
  #+END_SRC

* ArchLinux
  Pacman config
  #+NAME: pacman_common
  #+BEGIN_SRC conf
    [options]
    VerbosePkgLists
    UseSyslog
    CheckSpace
    HoldPkg = pacman glibc
    SigLevel = Required DatabaseOptional
    LocalFileSigLevel = Optional

    [core]
    Include = /etc/pacman.d/mirrorlist
    [extra]
    Include = /etc/pacman.d/mirrorlist
    [community]
    Include = /etc/pacman.d/mirrorlist
    [blackarch]
    Server = http://f.archlinuxvn.org/$repo/$repo/os/$arch
  #+END_SRC

  Refresh database
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S -y
  #+END_SRC

  AUR helper
  #+BEGIN_SRC yaml :tangle ~/Copy/bin/aur :shebang #!/bin/ansible-playbook
    - hosts: arch
      gather_facts: no
      vars:
        store: /tmp/aur
      vars_prompt:
        - name: package
          private: no
      tasks:
        - file: state=directory path={{store}}
        - get_url: url=https://aur4.archlinux.org/cgit/aur.git/snapshot/{{package}}.tar.gz dest={{store}}/
        - unarchive: copy=no src={{store}}/{{package}}.tar.gz dest={{store}}
        - command: nice makepkg --noconfirm --install --force --syncdeps chdir={{store}}/{{package}}
  #+END_SRC

  Yaourt config
  #+BEGIN_SRC conf :tangle ~/.yaourtrc
    AURUPGRADE=1
    EXPORT=1
    EXPORTDIR=~
    BUILD_NOCONFIRM=1
    EDITFILES=0
  #+END_SRC

  Base utils
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S haveged p7zip parallel pkgfile yaourt
    <<system_ctl>> enable --now haveged
  #+END_SRC

  #+BEGIN_SRC sh
    pkgfile -u
  #+END_SRC

  Dev-env:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S base-devel rust android-tools
  #+END_SRC

  Monitoring:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ethtool lm_sensors net-tools psmisc \
        procps-ng inetutils ltrace sysdig atop iotop
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/Copy/bin/strace :shebang #!/bin/sh :no-expand
    exec /usr/bin/ltrace -CSn2 $@
  #+END_SRC

  Of course emacs is installed, now run it
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S emacs-pkgbuild-mode
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.config/systemd/user/emacs.service
    [Unit]
    Description=Emacs

    [Service]
    ExecStart=/bin/emacs
    Restart=always
    RestartSec=1sec

    [Install]
    WantedBy=default.target
  #+END_SRC

  #+BEGIN_SRC sh :dir ~
    <<user_ctl>> enable --now emacs syncthing pulseaudio
  #+END_SRC

** kub
   :PROPERTIES:
   :header-args+: :dir /sudo:kub:
   :END:
*** Mounts
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/fstab
      LABEL=<<username>> /home/<<username>> auto
      LABEL=var /var auto
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/systemd/network/eth0.network
      [Match]
      Name = eth0

      [Network]
      Address = <<prefix>>.54/24
      Gateway = <<prefix>>.1
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/resolv.conf
      nameserver <<prefix>>.1
    #+END_SRC

*** Pacman
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/pacman.conf
      <<pacman_common>>

      [options]
      Architecture = armv7h

      [alarm]
      Include = /etc/pacman.d/mirrorlist
      [aur]
      Include = /etc/pacman.d/mirrorlist
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/pacman.d/mirrorlist
      Server = http://vn.mirror.archlinuxarm.org/$arch/$repo
    #+END_SRC

*** LED blinking
    #+BEGIN_SRC sh :tangle /sudo:kub:/usr/local/bin/leds :shebang #!/bin/sh
      echo none > /sys/class/leds/cubieboard:green:usr/trigger
      echo mmc0 > /sys/class/leds/cubieboard:blue:usr/trigger
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/systemd/system/leds.service
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/leds
      RemainAfterExit=true

      [Install]
      WantedBy=basic.target
    #+END_SRC

*** Tor
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S tor
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/tor/torrc
      ContactInfo tor at zahe dot me
      Nickname kub
      DirPort 4660
      ORPort 5880
      SOCKSPort <<prefix>>.54:9050
      MaxAdvertisedBandwidth 40 KBytes
      ExitPolicy reject *:*

      DataDirectory /var/lib/tor
      Log notice syslog
    #+END_SRC

*** HTTP
    #+BEGIN_SRC sh
      <<pacman>> -S nginx
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/nginx/nginx.conf
      events {}
      http {
      include       mime.types;
      default_type  text/plain;
      charset utf-8;
      gzip off;

      access_log  off;
      log_not_found off;

      server {
      return 301 https://$host$request_uri;
      }

      ssl_protocols TLSv1.2;
      ssl_ciphers EECDH+CHACHA20:EECDH+AES128;
      ssl_prefer_server_ciphers on;
      add_header Strict-Transport-Security max-age=31536000;

      map $request_uri $dest {
      /_ https://raw.githubusercontent.com/hdhoang/hdhoang/master/config/dotpentadactylrc;
      /c /mirror/caps2ctrl.exe;
      /d http://5digits.org/nightly/pentadactyl-latest.xpi;
      /pe http://live.sysinternals.com/;
      /s https://puttytray.goeswhere.com/download/putty.exe;
      /ws https://www.wosign.com/root/ca1_dv_free_2.crt;

      default "";
      }

      server {
      listen 443 ssl spdy default_server;
      ssl_certificate zahe.me.crt;
      ssl_certificate_key zahe.me.key;
      server_name kub.zahe.me zahe.me;
      root /home/hdhoang/Public/;
      autoindex on;
      if ($dest) {
      return 301 $dest;
      }
      location /ipfs/ {
      proxy_pass http://127.0.0.1:4005;
      }
      location ~ /mirror/(?:.*)\.part {
      return 403 incomplete;
      }
      }

      server {
      listen 443 ssl spdy;
      server_name id.zahe.me;
      root /home/hdhoang/Public/;
      index hdhoang;
      default_type text/html;
      }
      }
    #+END_SRC

*** DLNA
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S minidlna
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/minidlna.conf
      friendly_name=kub
      port=8200

      media_dir=<<storage>>
      media_dir=A,<<fav_music>>
      media_dir=V,/home/<<username>>/Videos
      media_dir=V,/home/<<username>>/Public/mirror
    #+END_SRC
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<system_ctl>> enable --now minidlna
    #+END_SRC

*** VPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo:kub:/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 0
      tls-server
      <pkcs12>
      <<kub_pfx>>
      </pkcs12>
      <dh>
      -----BEGIN DH PARAMETERS-----
      MIIBCAKCAQEAoioJw6aUXmgBDSw6SzbSZww6i7eH0MC+Eba5qGmYJnKn2zI8dBH6
      JZKnAyz9MbD21loI6KjAnOzZkBp7DKle1cACLS229Olycr22rXWPFuhMV15TohDJ
      ArazVXSJGDL9OXhdHei96K3qXofz/3AzXEVxD0unQd5sRlgNGmunofvgWBechdmn
      YQl44SZ0asC8uUY1uiKjVyQzqeNDi3rjJtTobcPdR6Pb8CnS3cfwoWzXMwUexmfJ
      VQSNaDZIeQcwV5MEHs1XViOTiEvT8IHbJojJri0geUSJ+HkX1JTxGIUj4xxKHQ0j
      AFEjqDYFh3q7U6QgFLRWZffVLgxIZVopIwIBAg==
      -----END DH PARAMETERS-----
      </dh>
      user nobody
      group nobody

      mode server

      server 10.255.0.0 255.255.255.0
      push "route <<prefix>>.54"
    #+END_SRC

*** SSH
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/ssh/sshd_config
      Protocol 2
      HostKey /etc/ssh/ssh_host_ed25519_key
      HostKey /etc/ssh/ssh_host_rsa_key

      KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
      MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com

      AllowGroups wheel
      PasswordAuthentication no
      ChallengeResponseAuthentication no
      UsePrivilegeSeparation sandbox

      Subsystem sftp /usr/lib/ssh/sftp-server
    #+END_SRC

** ton
*** Mounts
    #+BEGIN_SRC sh
      fallocate -l 2G /swap
      chmod u=rw,go= /swap
      mkswap /swap
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
      LABEL=home /home/<<username>> ntfs-3g noatime,nofail
      LABEL=ESP /boot vfat
      /swap none swap
    #+END_SRC

*** Hosts
    #+BEGIN_SRC conf :tangle /sudo::/etc/hosts
      127.0.0.1 ton
      ::1 ton
      <<prefix>>.1 vorme
      <<prefix>>.54 kub
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/00-bkap.network
      [Match]
      Name = enp4s0

      [Network]
      DNS = 8.8.8.8
      Address = 192.168.0.252/24
      Gateway = 192.168.0.1
      Address = 192.168.1.252/24
      Gateway = 192.168.1.1
      Address = 192.168.4.252/24
      Gateway = 192.168.4.1
      Address = 192.168.5.252/24
      Gateway = 192.168.5.1

      [Route]
      Destination=192.168.1.1
      Source=192.168.1.252
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/dhcp.network
      [Network]
      DHCP=ipv4
    #+END_SRC

*** Pacman
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.conf
    <<pacman_common>>

    [options]
    Architecture = auto

    [multilib]
    Include = /etc/pacman.d/mirrorlist
  #+END_SRC
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.d/mirrorlist
    Server = http://f.archlinuxvn.org/archlinux/$repo/os/$arch
  #+END_SRC

*** VPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo::/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 1
      tls-client
      <pkcs12>
      <<ton_pfx>>
      </pkcs12>

      nobind
      pull

      remote k.<<domain>> 22
      verify-x509-name kub.<<domain>> name
      remote-cert-tls server
      resolv-retry infinite
    #+END_SRC

*** Fonts
    #+BEGIN_SRC sh
      <<pacman>> -S adobe-source-{sans,serif,code}-pro-fonts adobe-source-han-sans-otc-fonts
    #+END_SRC

    #+BEGIN_SRC xml :tangle ~/.config/fontconfig/fonts.conf :padline no :comments no
      <?xml version='1.0'?>
      <!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
      <fontconfig>
        <match target="font">
          <edit mode="assign" name="rgba">
            <const>none</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hinting">
            <bool>true</bool>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hintstyle">
            <const>hintslight</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="antialias">
            <bool>true</bool>
          </edit>
        </match>
        <dir>~/.fonts</dir>
        <match target="pattern">
          <test qual="any" name="family"><string>Arial</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <match target="pattern">
          <test qual="any" name="family"><string>DejaVu Sans</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <alias>
          <family>sans-serif</family>
          <prefer>
            <family>Source Sans Pro</family>
          </prefer>
        </alias>
        <alias>
          <family>serif</family>
          <prefer>
            <family>Source Serif Pro</family>
          </prefer>
        </alias>
        <alias>
          <family>monospace</family>
          <prefer>
            <family>Source Code Pro</family>
          </prefer>
        </alias>
        <selectfont>
          <rejectfont>
            <glob>/usr/share/fonts/default/Type1/*</glob>
            <pattern>
              <patelt name="scalable">
                <bool>false</bool>
              </patelt>
            </pattern>
          </rejectfont>
        </selectfont>
      </fontconfig>
     #+END_SRC

*** Desktop
    These DBus services are provided by plasma-workspace-units.
    #+BEGIN_SRC sh :dir /sudo::
      rm /usr/share/dbus-1/services/org.kde.{kded5,kglobalaccel,kuiserver,kwalletd5}.service
    #+END_SRC

**** Inside VirtualBox
     #+BEGIN_SRC sh :dir /sudo::
       <<pacman>> -S virtualbox-guest-{modules,utils}
     #+END_SRC
     #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
       home /home/<<username>> vboxsf uid=1000,gid=100,dmode=700,fmode=600
     #+END_SRC
     #+BEGIN_SRC sh :tangle ~/.xinitrc
       VBoxClient-all&
       cp -r ~/.gnupg $XDG_RUNTIME_DIR
       chmod 700 $XDG_RUNTIME_DIR/.gnupg
       export GNUPGHOME=$XDG_RUNTIME_DIR/.gnupg
       exec gpg-agent --enable-ssh-support --daemon emacs
     #+END_SRC
     #+BEGIN_SRC sh
       XAUTHORITY=/run/user/1000/xauth startx
     #+END_SRC

**** Keyboard
     Use dvorak, swap caps for ctrl
     #+BEGIN_SRC conf :tangle /sudo::/usr/share/kbd/keymaps/caps2ctrl.map
       include "/usr/share/kbd/keymaps/i386/dvorak/dvorak.map.gz"
       keycode 58 = Control
     #+END_SRC
     #+BEGIN_SRC sh
       localectl set-keymap caps2ctrl
     #+END_SRC

     Base Japanese IME on dvorak, swap caps for ctrl
     #+BEGIN_SRC conf
       Windows Registry Editor Version 5.00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]
       "Scancode Map"=hex:00,00,00,00,00,00,00,00,02,00,00,00,1d,00,3a,00,00,00,00,00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layouts\00000411]
       "Layout File"="kbddv.dll"
     #+END_SRC

**** Pointer
     Use evdev for the touchscreen
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Atmel touchscreen"
               MatchProduct "maXTouch"
               Driver "evdev"
       EndSection
     #+END_SRC

     Use natural scrolling on touchpad
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Natural scrolling"
               MatchProduct "TouchPad"
               MatchDriver "libinput"
               Option "NaturalScrolling" "1"
       EndSection
     #+END_SRC

**** Rotation
     #+BEGIN_SRC sh :dir /sudo::
       <<pacman>> -S acpid
     #+END_SRC
     #+BEGIN_SRC text :tangle /sudo::/etc/acpi/events/rotation-button
       event=ibm/hotkey LEN0068:00 00000080 00006020
       action=sudo -u hdhoang DISPLAY=:0 /usr/local/bin/rotate-screen
     #+END_SRC
     #+BEGIN_SRC sh :tangle /sudo::/usr/local/bin/rotate-screen :shebang #!/bin/sh
       case $(xrandr | grep LVDS1 | cut -f 4 -d ' ' | tr -d '(') in
           normal) new="left";;
           left)   new="normal";;
       esac
       xrandr --output LVDS1 --rotate $new

       case $new in
           normal) matrix="1 0 0 0 1 0 0 0 1";;
           left)   matrix="0 -1 1 1 0 0 0 0 1";;
           right)  matrix="0 1 0 -1 0 1 0 0 1";;
           inverted) matrix="-1 0 1 0 -1 1 0 0 1";;
       esac
       for dev in "SynPS/2 Synaptics TouchPad" "TPPS/2 IBM TrackPoint" "Atmel Atmel maXTouch Digitizer"; do
           xinput set-prop "$dev" "Coordinate Transformation Matrix" $matrix
       done
     #+END_SRC
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now acpid
     #+END_SRC

*** Picard
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S picard chromaprint
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/MusicBrainz/Picard.conf
      [setting]
      server_host=musicbrainz.org
      server_port=80

      fingerprinting_system=acoustid
      acoustid_apikey=<<acoustid_key>>
      acoustid_fpcalc=/usr/bin/fpcalc

      save_images_to_tags=true
      save_only_front_images_to_tags=true
      save_images_to_files=false
      ca_provider_use_amazon=true
      ca_provider_use_caa=true
      ca_provider_use_caa_release_group_fallback=true
      ca_provider_use_whitelist=true
      caa_image_size=1
      caa_approved_only=true
      caa_restrict_image_types=true
      analyze_new_files=false
      ignore_file_mbids=false
      quit_confirmation=true
      va_name=Various Artists
      nat_name=
      standardize_artists=true

      windows_compatibility=true
      ascii_filenames=false
      rename_files=true
      move_files=true
      file_naming_format="$if2(%albumartist%,%artist%)/$if($ne(%albumartist%,),%album%/)$if($gt(%totaldiscs%,1),%discnumber%-,)$if($ne(%albumartist%,),$num(%tracknumber%,2) ,)$if(%_multiartist%,%artist% - ,)%title%"
      move_files_to=<<fav_music>>/_new
      move_additional_files=true
      move_additional_files_pattern=*.jpg *.png *.jpeg
      delete_empty_dirs=true

      browser_integration=true
      browser_integration_port=8000
      browser_integration_localhost_only=true

      dont_write_tags=false
      preserve_timestamps=false
      write_id3v1=true
      write_id3v23=true
      id3v23_join_with=/
      id3v2_encoding=utf-16
      remove_ape_from_mp3=true
      remove_id3_from_flac=true
    #+END_SRC
*** mpd
    :PROPERTIES:
    :header-args+: :dir ~
    :END:

    Create playlist
    #+BEGIN_SRC sh
      mpc listall > <<fav_music>>/pq.m3u
    #+END_SRC

    Shuffle and play
    #+BEGIN_SRC sh :results raw
      mpc -q clear && mpc load pq && mpc -q shuffle && mpc play
    #+END_SRC

    Delete currently playing track
    #+BEGIN_SRC sh :eval query
      rm -v <<fav_music>>/"$(mpc -f %file% | head -1)"
    #+END_SRC

*** mpv
    #+BEGIN_SRC conf :tangle ~/.config/mpv/mpv.conf
      sub-auto=fuzzy
      hwdec=auto
      hwdec-codecs=all
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/mpv/input.conf
      q quit_watch_later
      MOUSE_BTN0 cycle pause
      MOUSE_BTN1 show_progress
      MOUSE_BTN2 cycle fullscreen
      z set window-scale 0.5
      Z set window-scale 1

      ; show_progress
      f show_text "${filename}"
      d cycle audio
      y add volume 1
      i add volume -1
      g add sub-delay  0.1
      h add sub-delay -0.1
      x cycle mute

      k frame_step
      ' seek +10
      a seek -10
      , seek +60
      o seek -60
      . seek +300
      e seek -300

      u cycle fullscreen
    #+END_SRC
* Emacs
  :PROPERTIES:
  :header-args+: :tangle ~/.emacs
  :END:

  OOBE settings:
  #+BEGIN_SRC elisp
    (server-mode t)
    (desktop-save-mode t)
    (global-set-key (kbd "C-x C-r")
                    (lambda () (interactive)
                      (revert-buffer :noconfirm t)))
    (defalias 'yes-or-no-p #'y-or-n-p)
    (defalias 'dabbrev-expand #'hippie-expand)
    (setq auto-save-default nil
          calendar-week-start-day 1
          default-input-method "vietnamese-telex"
          desktop-load-locked-desktop t
          inhibit-startup-screen t
          make-backup-files nil
          scroll-preserve-screen-position t
          tramp-default-method "ssh"
          undo-tree-mode-lighter ""
          visible-bell t
          frame-title-format "%b")
    (set-language-environment "UTF-8")
    (setq-default buffer-file-coding-system 'utf-8-unix)
    (setq-default sentence-end-double-space nil)
    (global-set-key (kbd "C-\\") #'toggle-input-method)
    (blink-cursor-mode -1)
    (show-paren-mode t)
    (winner-mode)
  #+END_SRC

  Package management
  #+BEGIN_SRC elisp
    (package-initialize)
    (setq package-archives
          '(("gnu" . "https://elpa.gnu.org/packages/")
            ("marmalade" . "https://marmalade-repo.org/packages/")
            ("melpa" . "http://melpa.org/packages/")))
    (unless (package-installed-p 'use-package)
      (package-refresh-contents)
      (package-install 'use-package))
    (setq use-package-always-ensure t)
    (require 'use-package)
  #+END_SRC

  Color theme
  #+BEGIN_SRC elisp
    (use-package color-theme-sanityinc-solarized
      :config (load-theme 'sanityinc-solarized-light t))
  #+END_SRC

  Font on Windows
  #+BEGIN_SRC elisp
    (when (eq window-system 'w32)
      (if (> window-system-version 5)
          (set-default-font "Consolas-12" :frames t)
        (set-default-font "Lucida Console-10" :frames t)))
  #+END_SRC

** Editing
   Vim-style
   #+BEGIN_SRC elisp
     (use-package evil
       :config
       (evil-mode t)
       (evil-set-initial-state 'special-mode 'emacs)
       (dolist (state '(normal motion))
         (evil-define-key state global-map
           (kbd "<SPC>") #'evil-scroll-down
           (kbd "S-<SPC>") #'evil-scroll-up))
       (dolist (state '(insert motion normal))
         (evil-define-key state global-map
           (kbd "C-t") #'transpose-chars
           (kbd "C-d") #'delete-char
           (kbd "C-k") #'kill-line
           (kbd "C-y") #'evil-paste-before
           (kbd "C-a") #'beginning-of-line (kbd "C-e") #'end-of-line
           (kbd "C-f") #'forward-char   (kbd "C-b") #'backward-char
           (kbd "C-n") #'next-line      (kbd "C-p") #'previous-line
           (kbd "<down>") #'next-line   (kbd "<up>") #'previous-line
           (kbd "j") #'next-line        (kbd "k") #'previous-line
           (kbd "C-v") #'evil-scroll-down (kbd "M-v") #'evil-scroll-up
           (kbd "C-r") #'isearch-backward))
       (evil-define-key 'insert global-map
         "j" #'self-insert-command "k" #'self-insert-command)
       (evil-define-key 'motion help-mode-map
         (kbd "<tab>") #'forward-button))
   #+END_SRC

   Aggressive indent
   #+BEGIN_SRC elisp
     (use-package aggressive-indent
       :diminish ""
       :config (global-aggressive-indent-mode))
   #+END_SRC

   Switch window with ace
   #+BEGIN_SRC elisp
     (use-package ace-window
       :config (ace-window-display-mode 1)
       :bind ("C-x o" . ace-window))
   #+END_SRC

   Do things with helm:
   #+BEGIN_SRC elisp
     (use-package helm
       :config
       (helm-mode 1)
       (define-key shell-mode-map (kbd "M-r") #'helm-comint-input-ring)
       :diminish helm-mode
       :bind (("C-h SPC" . helm-all-mark-rings)
              ("C-x b" . helm-mini)
              ("C-x C-b" . helm-buffers-list)
              ("C-x C-f" . helm-find-files)
              ("C-c g" . helm-do-grep)
              ("C-s" . helm-occur)
              ("M-x" . helm-M-x)))
     (require 'helm-config)
     (use-package evil
       :config (dolist (state '(insert motion normal))
                 (evil-define-key state global-map
                   (kbd "M-y") #'helm-show-kill-ring)))
   #+END_SRC

** Org
   #+BEGIN_SRC elisp
     (add-hook 'org-mode-hook
               '(lambda ()
                  (add-hook 'before-save-hook 'org-align-all-tags
                            :local t)))
     (org-babel-do-load-languages 'org-babel-load-languages
                                  '((sh . t)))
     (setq org-src-fontify-natively t)
   #+END_SRC

*** Crypt
    #+BEGIN_SRC elisp
      (require 'org-crypt)
      (add-hook 'org-mode-hook
                '(lambda ()
                   (add-hook 'before-save-hook 'org-encrypt-entries
                             :local t)))
      (setq org-tags-exclude-from-inheritance '("crypt"))
      (setq org-crypt-key "<<username>>@keybase.io")
    #+END_SRC

    Make it possible to tangle encrypted block
    #+BEGIN_SRC elisp
      (remove-hook 'org-babel-pre-tangle-hook #'save-buffer)
    #+END_SRC

** Doc-View
   #+BEGIN_SRC elisp
     (eval-after-load 'doc-view
       '(bind-key (kbd "<mouse-1>") #'doc-view-scroll-up-or-next-page doc-view-mode-map))
     (setq doc-view-resolution 300
           doc-view-cache-directory (expand-file-name "~/.emacs.d/doc-view"))
     (use-package evil
       :config (add-hook 'view-mode-hook #'evil-emacs-state))
   #+END_SRC

** Dired
   #+BEGIN_SRC elisp
     (use-package dired+
       :config
       (require 'dired+)
       (global-dired-hide-details-mode -1)
       (defun dired-open ()
         (interactive)
         (dired-do-shell-command "xdg-open &" :file-list (dired-get-marked-files)))
       (define-key dired-mode-map (kbd "RET") #'dired-open)
       (define-key dired-mode-map (kbd "<mouse-2>") #'dired-open)
       (setq dired-recursive-copies 'always
             dired-recursive-deletes 'always
             dired-listing-switches "-alh"
             dired-guess-shell-alist-user
             '(("\\.cb.\\'" "okular")
               ("." "xdg-open;"))))
   #+END_SRC

** Eshell
   Put eshell on a convenient binding
   #+BEGIN_SRC elisp
     (global-set-key (kbd "C-x M-m") #'eshell)
   #+END_SRC

   I like the prompt to be on a separate line.
   #+BEGIN_SRC elisp
     (setq eshell-prompt-function
           '(lambda ()
              (concat (eshell/pwd) "\n"
                      (int-to-string eshell-last-command-status) " % "))
           eshell-prompt-regexp "^[[:digit:]]\\{1,3\\} % ")
   #+END_SRC

   These are terminal-manipulating commands
   #+BEGIN_SRC elisp
     (eval-after-load 'em-term
       '(progn
          (dolist (prog '("atop" "systemd-cgls" "journalctl"))
            (add-to-list 'eshell-visual-commands prog))
          (add-to-list 'eshell-visual-options '("ssh" "-t"))))
   #+END_SRC

   Profile:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/profile :no-expand
     addpath ~/Copy/bin
   #+END_SRC

   Aliases:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias vim find-file $1
     alias i yaourt $*
     alias j journalctl -afb $*
     alias sc <<system_ctl>> $*
     alias uc <<user_ctl>> $*
     alias ytdl <<ytdl>> -a /home/<<username>>/q.txt
     alias fr free -h
   #+END_SRC

* Ansible
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ansible
  #+END_SRC

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package yaml-mode :ensure)
         (use-package ansible-doc :ensure
           :config (add-hook 'yaml-mode-hook #'ansible-doc-mode))))
  #+END_SRC

** Inventory
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible_inventory
   :END:

   Here are the hosts and their variables
   #+BEGIN_SRC conf
     [arch]
     kub ansible_python_interpreter=/usr/bin/python2
     ton ansible_python_interpreter=/usr/bin/python2 ansible_connection=local

     [all:vars]
     user=<<username>>
     home=/home/<<username>>
     h=<<storage>>
     conf="{{h}}/config/{{ansible_hostname}}"
     locale=en_US
     prefix=<<prefix>>
   #+END_SRC

** Config
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible.cfg
   :END:

   Keep the inventory here
   #+BEGIN_SRC conf
     [defaults]
     inventory = ~/.ansible_inventory
   #+END_SRC

   For some reason ControlMaster isn't working
   #+BEGIN_SRC conf
     [ssh_connection]
     ssh_args=-o ControlMaster=no
   #+END_SRC

* Firefox
  :PROPERTIES:
  :header-args+: :tangle ~/.pentadactylrc
  :END:
  This file is in vimrc syntax

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(use-package vimrc-mode))
  #+END_SRC

  Use DuckDuckGo:

  #+BEGIN_SRC vimrc
    silent bmark -keyword ddg -t DDG https://duckduckgo.com/?kn=1&kp=-1&kae=c&q=%s
    set defsearch=ddg
  #+END_SRC

  Use backspace to go back:
  #+BEGIN_SRC vimrc
    set! browser.backspace_action=0
  #+END_SRC

  Don't let middle mouse paste:
  #+BEGIN_SRC vimrc
    set! middlemouse.contentLoadURL=false
  #+END_SRC

  Restore C-j for Downloads:
  #+BEGIN_SRC vimrc
    map <C-j> -ex dialog downloads
  #+END_SRC

  Bind stop to an easy binding:
  #+BEGIN_SRC vimrc
    map s <C-c>
  #+END_SRC

  Make scrolling easier:
  #+BEGIN_SRC vimrc
    map <space> <C-d>
    map <S-space> <C-u>
  #+END_SRC

  Pin tab:
  #+BEGIN_SRC vimrc
    map <A-p> -ex pintab!
  #+END_SRC

  Move to first or last:
  #+BEGIN_SRC vimrc
    map <A-!> -ex tabm 1
    map <A-$> -ex tabm $
  #+END_SRC

  Fast switching:
  #+BEGIN_SRC vimrc
    map -m normal,insert <F1> <C-^>
  #+END_SRC

  Don't raise these openings:
  #+BEGIN_SRC vimrc
    set activate-=diverted,links,tabopen,paste
  #+END_SRC

  Open help in a new tab
  #+BEGIN_SRC vimrc
    set newtab=help
  #+END_SRC

  Keep hint keys under left fingers:
  #+BEGIN_SRC vimrc
    set hintkeys=12345
  #+END_SRC

  Make hint text readable
  #+BEGIN_SRC vimrc
    highlight Hint -append font-size: 14px !important
  #+END_SRC

  Unzoom image:
  #+BEGIN_SRC vimrc
    map <A-t> -js content.document.toggleImageSize()
  #+END_SRC

  Show link in commandline:
  #+BEGIN_SRC vimrc
    set guioptions+=c
    set showstatuslinks=command
  #+END_SRC

  Scroll by one line:
  #+BEGIN_SRC vimrc
    set scrollsteps=1
  #+END_SRC

  Show feeds first in pageinfo:
  #+BEGIN_SRC vimrc
    set pageinfo=fgmse
  #+END_SRC

  Use visual bell:
  #+BEGIN_SRC vimrc
    set visualbell
  #+END_SRC

  Bookmarks and preferences:
  #+BEGIN_SRC vimrc
    map <C-S-s> -ex bmark -keyword ac -t config about:config
    \ bmark -keyword bgp -t BGP http://bgp.he.net/search?search[search]=%s
    \ bmark -keyword v -t valsi http://vlasisku.lojban.org/?query=%s
    \ bmark -keyword c -t camxes http://camxes.lojban.org/?text=%s
    \ bmark -keyword yb -t youtube https://youtube.com/watch?v=%s
    \ bmark -keyword cw -t 'CrawlWiki' http://crawl.chaosforge.org/index.php?title=Special%3ASearch&search=%s
    \ bmark -keyword bb -t burnbit http://burnbit.com/burn?file=%s
    \ bmark -keyword b -t btdigg https://btdigg.org/search?q=%s&order=0&p=0
    \ bmark -keyword ba -t btdigg https://btdigg.org/search?q=%s&order=2&p=0
    \ bmark -keyword m -t zing http://mp3.zing.vn/tim-kiem/bai-hat.html?q=%s
    \ bmark -keyword ma -t artist http://musicbrainz.org/search?advanced=1&type=artist&tport=8000&query=%s
    \ bmark -keyword mg -t group http://musicbrainz.org/search?advanced=1&type=release_group&tport=8000&query=%s
    \ bmark -keyword mr -t recording http://musicbrainz.org/search?advanced=1&type=recording&tport=8000&query=%s
    \ bmark -keyword gm -t gmail https://mail.google.com/mail/#spam
    \ set! accessibility.browsewithcaret_shortcut.enabled=false
    \ set! browser.newtabpage.enabled=false
    \ set! browser.privatebrowsing.dont_prompt_on_enter=true
    \ set! browser.sessionstore.restore_pinned_tabs_on_demand=true
    \ set! browser.shell.checkDefaultBrowser=false
    \ set! browser.startup.homepage=about:blank
    \ set! browser.startup.page=3
    \ set! general.warnOnAboutConfig=false
    \ set! security.OCSP.enabled=0
    \ set! security.warn_viewing_mixed=false
    \ set! layout.spellcheckDefault=0
    \ set! middlemouse.paste=true
    \ set! ui.key.menuAccessKey=0
    \ set! browser.anchor_color="#6c71c4"
    \ set! browser.display.background_color="#fdf6e3"
    \ set! browser.display.foreground_color="#657b83"
    \ set! browser.display.use_system_colors=false
    \ set! font.default.x-western="sans-serif"
    \ set! font.minimum-size.x-western=15
    \ if /NT 6/.test(window.navigator.oscpu)
    \     set! font.name.monospace.x-western=Consolas
    \ fi
    \ set! extensions.checkCompatibility.nightly=false
    \ set! extensions.https_everywhere._observatory.alt_roots=true
    \ set! extensions.https_everywhere._observatory.enabled=true
    \ set! extensions.https_everywhere._observatory.priv_dns=true
    \ set! plugins.hide_infobar_for_missing_plugin=true
    \ set! browser.download.manager.alertOnEXEOpen=false
    \ set! browser.download.manager.scanWhenDone=false
    \ set! browser.search.context.loadInBackground=true
    \ set! intl.charset.default=UTF-8
    \ set! network.http.pipelining=true
    \ set! network.http.pipelining.aggressive=true
    \ set! network.http.pipelining.ssl=true
    \ set! network.protocol-handler.expose.magnet=false
    \ set! network.proxy.socks=kub.<<domain>>
    \ set! network.proxy.socks_port=9050
    \ set! network.proxy.socks_remote_dns=true
    \ set! toolkit.telemetry.enabled=true
    \ js services.permissions.add(services.io.newURI("http:depositfiles.com",null,null), 'image', services.permissions.DENY_ACTION)
    \ js services.loginManager.setLoginSavingEnabled("accounts.google.com", false)
  #+END_SRC

  Strip tracker from location, thanks to [[https://userscripts.org/scripts/show/93825][Bruno Barão]] and [[https://github.com/5digits/dactyl/commit/7a1ffa5b555399c5d0925ad599e2640070bd128d][Kris Maglione]].
  #+BEGIN_SRC vimrc
    autocmd DOMLoad (utm|wa)_ -js win.history.replaceState("Remove trackers", '', doc.location.href.replace(/&?(utm|wa)_[^&]+/g,'').replace(/\?$/,''))
  #+END_SRC

  Facebook
  #+BEGIN_SRC vimrc
    bmark -keyword fb -t facebook https://fb.me/%s
    map <A-s> -js dactyl.open("https://www.facebook.com/sharer/sharer.php?u=" + content.location)
  #+END_SRC

  Feedly
  #+BEGIN_SRC vimrc
    map <A-f> -js dactyl.open("https://feedly.com/i/spotlight/" + content.location)
    js services.permissions.add(services.io.newURI("http:feedly.com",null,null), 'popup', services.permissions.ALLOW_ACTION)
    set passkeys+=feedly.com:vjkga
    style feedly.com <<EOS
    .websiteCallForAction { display: none !important }
    EOS
  #+END_SRC

  Pocket
  #+BEGIN_SRC vimrc
    js services.permissions.add(services.io.newURI("http:getpocket.com",null,null), 'popup', services.permissions.ALLOW_ACTION)
    set passkeys+=getpocket.com:aojk
    style getpocket.com <<EOS
    ,* { font-family: sans-serif !important }
    code, pre { font-family: monospace !important }
    EOS
  #+END_SRC

  #+BEGIN_SRC sh :dir /sudo:kub:
    <<pacman>> -S jq
  #+END_SRC
  Get videos from saved pages
  #+BEGIN_SRC sh :tangle /kub:.bashrc
    function pocket_videos {
        curl https://getpocket.com/v3/get \
             -d consumer_key=<<pocket_consumer_key>> \
             -d access_token=<<pocket_access_token>> \
             -d contentType=video \
            | jq -r ".list|.[]|.resolved_url" \
            | xargs -n1 <<ytdl>> --ignore-errors
    }
  #+END_SRC

  Site keyboard shortcuts:
  #+BEGIN_SRC vimrc
    set passkeys+=tumblr.com:jk
    set passkeys+=mail.google.com/mail/:'#!ms+-/? jknpu'
    set passkeys+=google.com/contacts/:'#jkoux,.'
  #+END_SRC

  Switch to reader mode:
  #+BEGIN_SRC vimrc
    map <A-r> -js dactyl.open("about:reader?url=" + content.location)
  #+END_SRC

* Secrets							      :crypt:
-----BEGIN PGP MESSAGE-----
Version: GnuPG v2

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
hPGnjPkkElQDfl3v1jiYjH35v5lhyWVPaQ==
=irAA
-----END PGP MESSAGE-----
