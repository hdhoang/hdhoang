#+PROPERTY: header-args+ :cache yes
#+PROPERTY: header-args+ :comments org
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :noweb yes
#+PROPERTY: header-args+ :results drawer
#+PROPERTY: header-args:text+ :eval no
* Places and names
  #+NAME: username
  #+BEGIN_SRC text
    hdhoang
  #+END_SRC

  #+NAME: storage
  #+BEGIN_SRC text
    /home/<<username>>/Copy
  #+END_SRC

  #+NAME: fav_music
  #+BEGIN_SRC text
    /home/<<username>>/Music
  #+END_SRC

  #+NAME: network
  #+BEGIN_SRC text
    10.117.14
  #+END_SRC

  #+NAME: domain
  #+BEGIN_SRC text
    zahe.me
  #+END_SRC

  #+NAME: system_ctl
  #+BEGIN_SRC text
    systemctl --system --no-pager
  #+END_SRC

  #+NAME: user_ctl
  #+BEGIN_SRC text
    systemctl --user --no-pager
  #+END_SRC

  #+NAME: pacman
  #+BEGIN_SRC text
    pacman --noconfirm --needed
  #+END_SRC

  #+NAME: yt-dl
  #+BEGIN_SRC text
    youtube-dl --format "[height <=? 720]" --output ~/Videos/"%(uploader)s %(upload_date)s %(title)s@%(id)s.%(ext)s"
  #+END_SRC

* SSH
  :PROPERTIES:
  :header-args+: :tangle ~/.ssh/config
  :END:

  SSH encryption settings by https://stribika.github.io/2015/01/04/secure-secure-shell.html
  #+BEGIN_SRC conf
    Host *
    KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
    Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com,hmac-sha1
  #+END_SRC

  Code hosting sites:
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
  #+END_SRC
  #+BEGIN_SRC conf
    Host github.com bitbucket.org
    User git
    IdentityFile ~/.ssh/git
    Host git.kde.org
    User git
    IdentityFile ~/.ssh/kde
    Host heroku.com
    IdentityFile ~/.ssh/heroku
  #+END_SRC

  Machines
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    vorme ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCf2C8j0GFA8eq8Vgva/9KI4cF4Q23v4rBk6zAxoyIJvENGkpDuUba4AOMabUkPiXU76KVbx/h4fOivjrWoUNG6Z0xEOJTQqVwuk7788dwIm49Ba+ZOC/sCtT7dsbshFpzXmkdASsZty0foFSILRADDTlB1MZiN9wJRlnjkmIO9WiSMYnuGzolO2f+Gy6LFrtQF1ZgOOqPToO4u4li3VPh1zdoY5+IQul9BQJGU7tMZrleH09LcOUlip8SHZYuXu/Zlb9GSK7Cj7WfGaR0k+xvs657n41haffQ5CxTjocqZdv7eO4Uo2ryWXn2Ck7DwKH6KMjEJZRbX32zLsTacQNgR
    kub,<<network>>.54 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGtY5ERdvH+mAQKfy270I+eEaZ2i6FhhEjG0EuzDxIym
  #+END_SRC
  #+BEGIN_SRC conf
    Host vorme
    User root
    IdentityFile ~/.ssh/kub
    Host kub
    User <<username>>
    IdentityFile ~/.ssh/kub
  #+END_SRC
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'tramp
      '(add-to-list 'tramp-default-proxies-alist '("kub" "root" "/ssh:kub:")))
  #+END_SRC

* KDE
** kwin
   :PROPERTIES:
   :header-args+: :tangle ~/.config/kwinrulesrc
   :END:

   Remove border from firefox
   #+BEGIN_SRC conf
     [1]
     Description=Window settings for firefox
     noborder=true
     noborderrule=2
     windowrole=browser
     windowrolematch=1
     wmclass=navigator firefox
     wmclasscomplete=true
     wmclassmatch=1
   #+END_SRC

   Put emacs on F4
   #+BEGIN_SRC conf
     [2]
     Description=Application settings for emacs
     shortcut=F4
     shortcutrule=2
     wmclass=emacs
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   #+BEGIN_SRC conf
     [General]
     count=2
   #+END_SRC

* Git
  :PROPERTIES:
  :header-args+: :tangle ~/.gitconfig
  :END:

  #+BEGIN_SRC conf
    [user]
    name = Hoàng Đức Hiếu
    email = <<username>>@<<domain>>
    [color]
    ui = auto
    [core]
    eol = lf
    whitespace = trailing-space,space-before-tab

    [alias]
    pr = pull --rebase
    ml = log --reverse --topo-order ORIG_HEAD..
    l = log -p --word-diff
    s = status -s
    ap = add -p
    c = commit -v
    d = diff --word-diff=porcelain
    [push]
    default = simple
    [pull]
    rebase = true
    [rebase]
    stat = true
  #+END_SRC

* ArchLinux
  :PROPERTIES: 
  :header-args+: :dir /sudo::
  :END:

  Pacman config
  #+NAME: pacman_common
  #+BEGIN_SRC conf
    [options]
    VerbosePkgLists
    UseSyslog
    CheckSpace
    HoldPkg = pacman glibc
    SigLevel = Required DatabaseOptional
    LocalFileSigLevel = Optional

    [core]
    Include = /etc/pacman.d/mirrorlist
    [extra]
    Include = /etc/pacman.d/mirrorlist
    [community]
    Include = /etc/pacman.d/mirrorlist
    [blackarch]
    Server = http://f.archlinuxvn.org/$repo/$repo/os/$arch
  #+END_SRC

  Refresh database
  #+BEGIN_SRC sh
    <<pacman>> -S -y
  #+END_SRC

  AUR helper
  #+BEGIN_SRC yaml :tangle ~/Copy/bin/aur :shebang #!/bin/ansible-playbook
    - hosts: arch
      gather_facts: no
      vars:
        store: /tmp/aur
      vars_prompt:
        - name: package
          private: no
      tasks:
        - file: state=directory path={{store}}
        - get_url: url=https://aur4.archlinux.org/cgit/aur.git/snapshot/{{package}}.tar.gz dest={{store}}/
        - unarchive: copy=no src={{store}}/{{package}}.tar.gz dest={{store}}
        - command: nice makepkg --noconfirm --install --force --syncdeps chdir={{store}}/{{package}}
  #+END_SRC

  Yaourt config
  #+BEGIN_SRC conf :tangle ~/.yaourtrc
    AURUPGRADE=1
    EXPORT=1
    EXPORTDIR=~
    BUILD_NOCONFIRM=1
    EDITFILES=0
  #+END_SRC

  Base utils
  #+BEGIN_SRC sh
    <<pacman>> -S haveged p7zip parallel pkgfile yaourt
    <<system_ctl>> enable --now haveged
  #+END_SRC

  #+RESULTS[246fb5edf56c8a65956c76a771142cccc9311c1e]:
  :RESULTS:
:END:

  #+BEGIN_SRC sh
    pkgfile -u
  #+END_SRC

  #+RESULTS[8f89a1af0eb151631a2621870940a147b4f44e9e]:
  :RESULTS:
  :: Updating 5 repos...
    multilib is up to date
    core is up to date
    blackarch is up to date
    download complete: extra                [     7.2 MiB   222K/s  1 remaining]
    download complete: community            [    11.2 MiB   261K/s  0 remaining]
  :: download complete in 44.07s            <    18.5 MiB   429K/s  2 files    >
  :: waiting for 1 process to finish repacking repos...
  :END:

  Dev-env:
  #+BEGIN_SRC sh
    <<pacman>> -S base-devel rust git ansible android-tools
  #+END_SRC

  #+RESULTS[5914114f3903afb69671b48693628b05faf8ec87]:
  :RESULTS:
  :: There are 25 members in group base-devel:
  :: Repository core
     1) autoconf  2) automake  3) binutils  4) bison  5) fakeroot  6) file
     7) findutils  8) flex  9) gawk  10) gcc  11) gettext  12) grep  13) groff
     14) gzip  15) libtool  16) m4  17) make  18) pacman  19) patch
     20) pkg-config  21) sed  22) sudo  23) texinfo  24) util-linux  25) which

  Enter a selection (default=all): 
   there is nothing to do
  :END:

  Monitoring:
  #+BEGIN_SRC sh
    <<pacman>> -S ethtool lm_sensors net-tools psmisc \
        procps-ng inetutils ltrace sysdig atop iotop
  #+END_SRC

  #+RESULTS[b8c88e933f247b67dbfa621d0608345d81b56289]:
  :RESULTS:
   there is nothing to do
  :END:

  #+BEGIN_SRC sh :tangle ~/Copy/bin/strace :shebang #!/bin/sh :no-expand
    exec /usr/bin/ltrace -CSn2 $@
  #+END_SRC

  Of course emacs is installed, now run it
  #+BEGIN_SRC sh
    <<pacman>> -S emacs-pkgbuild-mode
  #+END_SRC

  #+RESULTS[08377acfb195390b89f5301beb348f82b480e180]:
  :RESULTS:
   there is nothing to do
  :END:

  #+BEGIN_SRC conf :tangle ~/.config/systemd/user/emacs.service
    [Unit]
    Description=Emacs

    [Service]
    ExecStart=/bin/emacs
    Restart=always
    RestartSec=1sec

    [Install]
    WantedBy=default.target
  #+END_SRC

  #+BEGIN_SRC sh :dir ~
    <<user_ctl>> enable --now emacs syncthing pulseaudio
  #+END_SRC

  #+RESULTS:

** kub
   :PROPERTIES:
   :header-args+: :dir /sudo:kub:
   :END:
*** Mounts
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/fstab
      LABEL=<<username>> /home/<<username>> auto
      LABEL=var /var auto
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/systemd/network/eth0.network
      [Match]
      Name = eth0

      [Network]
      Address = <<network>>.54/24
      Gateway = <<network>>.1
      IPForward = yes
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/resolv.conf
      nameserver <<network>>.1 
    #+END_SRC

*** Pacman
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/pacman.conf
      <<pacman_common>>

      [options]
      Architecture = armv7h

      [alarm]
      Include = /etc/pacman.d/mirrorlist
      [aur]
      Include = /etc/pacman.d/mirrorlist
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/pacman.d/mirrorlist
      Server = http://vn.mirror.archlinuxarm.org/$arch/$repo
    #+END_SRC

*** LED blinking
    #+BEGIN_SRC sh :tangle /sudo:kub:/usr/local/bin/leds :shebang #!/bin/sh
      echo none > /sys/class/leds/cubieboard:green:usr/trigger
      echo mmc0 > /sys/class/leds/cubieboard:blue:usr/trigger
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/systemd/system/leds.service
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/leds
      RemainAfterExit=true

      [Install]
      WantedBy=basic.target
    #+END_SRC

*** Get starred youtube videos
    #+BEGIN_SRC sh :tangle /kub:~/Copy/bin/starred_youtube :shebang #!/bin/sh
      pkill youtube-dl
      for u in $(mysql -Ne 'select url from oc.oc_news_items where status=4 and url like "%youtube%";'); do
          <<yt-dl>> "$u" && mysql -e "update oc.oc_news_items set status=0 where status=4 and url like '$u';";
      done
    #+END_SRC

** ton
*** Mounts
    #+BEGIN_SRC sh
      fallocate -l 2G /swap
      chmod u=rw,go= /swap
      mkswap /swap
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
      LABEL=home /home/<<username>> ntfs-3g noatime,nofail
      LABEL=ESP /boot vfat
      /swap none swap
    #+END_SRC

*** Pacman
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.conf
    <<pacman_common>>

    [options]
    Architecture = auto

    [multilib]
    Include = /etc/pacman.d/mirrorlist
  #+END_SRC
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.d/mirrorlist
    Server = http://f.archlinuxvn.org/archlinux/$repo/os/$arch
  #+END_SRC

*** Fonts
    #+BEGIN_SRC sh
      <<pacman>> -S ttf-linux-libertine ttf-inconsolata ttf-hannom
    #+END_SRC

    #+BEGIN_SRC xml :tangle ~/.config/fontconfig/fonts.conf :padline no :comments no
      <?xml version='1.0'?>
      <!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
      <fontconfig>
        <match target="font">
          <edit mode="assign" name="rgba">
            <const>none</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hinting">
            <bool>true</bool>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hintstyle">
            <const>hintmedium</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="antialias">
            <bool>true</bool>
          </edit>
        </match>
        <dir>~/.fonts</dir>
        <match target="pattern">
          <test qual="any" name="family"><string>Arial</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <alias>
          <family>sans-serif</family>
          <prefer>
            <family>Linux Biolinum O</family>
          </prefer>
        </alias>
        <alias>
          <family>serif</family>
          <prefer>
            <family>Linux Libertine O</family>
          </prefer>
        </alias>
        <alias>
          <family>monospace</family>
          <prefer>
            <family>Inconsolata</family>
          </prefer>
        </alias>
        <selectfont>
          <rejectfont>
            <glob>/usr/share/fonts/default/Type1/*</glob>
            <pattern>
              <patelt name="scalable">
                <bool>false</bool>
              </patelt>
            </pattern>
          </rejectfont>
        </selectfont>
      </fontconfig>
    #+END_SRC

*** Ethernet routing
   Route through ethernet
   #+BEGIN_SRC sh
     ip route add default via 192.168.5.1
   #+END_SRC

   #+RESULTS:

   Delete that route
   #+BEGIN_SRC sh
     ip route del default via 192.168.0.1
   #+END_SRC

*** mpd
    :PROPERTIES:
    :header-args+: :dir ~
    :END:

    Shuffle and play
    #+BEGIN_SRC sh :results silent
      mpc listall | shuf > $fm/pq.m3u && mpc clear && mpc load pq && mpc play
    #+END_SRC

    Delete currently playing track
    #+BEGIN_SRC sh :eval query
      rm -v $fm/"$(mpc -f %file% | head -1)"
    #+END_SRC

    #+RESULTS:

*** mpv
    #+BEGIN_SRC conf :tangle ~/.config/mpv/mpv.conf
      sub-auto=fuzzy
      hwdec=auto
      hwdec-codecs=all
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/mpv/input.conf
      q quit_watch_later
      MOUSE_BTN0 cycle pause
      MOUSE_BTN1 show_progress
      MOUSE_BTN2 cycle fullscreen
      z set window-scale 0.5
      Z set window-scale 1

      ; show_progress
      f show_text "${filename}"
      d cycle audio
      y add volume 1
      i add volume -1
      g add sub-delay  0.1
      h add sub-delay -0.1
      x cycle mute

      k frame_step
      ' seek +10
      a seek -10
      , seek +60
      o seek -60
      . seek +300
      e seek -300

      u cycle fullscreen
    #+END_SRC
* Emacs
  :PROPERTIES:
  :header-args+: :tangle ~/.emacs :results silent
  :END:

  OOBE settings:
  #+BEGIN_SRC elisp
    (server-mode t)
    (desktop-save-mode t)
    (global-set-key (kbd "C-x C-r")
                    (lambda () (interactive)
                      (revert-buffer :noconfirm t)))
    (defalias 'yes-or-no-p #'y-or-n-p)
    (defalias 'dabbrev-expand #'hippie-expand)
    (defalias 'man #'woman)
    (setq auto-save-default nil
          calendar-week-start-day 1
          default-input-method "vietnamese-telex"
          desktop-load-locked-desktop t          
          inhibit-startup-screen t
          make-backup-files nil
          scroll-preserve-screen-position t
          tramp-default-method "ssh"
          undo-tree-mode-lighter "" 
          magit-auto-revert-mode-lighter ""
          visible-bell t
          frame-title-format "%b")
    (set-language-environment "UTF-8")
    (setq-default buffer-file-coding-system 'utf-8-unix)
    (setq-default sentence-end-double-space nil)
    (global-set-key (kbd "C-\\") #'toggle-input-method)
    (tool-bar-mode -1)
    (blink-cursor-mode -1)
    (show-paren-mode t)
    (global-hl-line-mode t)
    (winner-mode)
  #+END_SRC

  Package management
  #+BEGIN_SRC elisp
    (package-initialize)
    (setq package-archives
          '(("gnu" . "https://elpa.gnu.org/packages/")
            ("marmalade" . "https://marmalade-repo.org/packages/")
            ("melpa" . "http://melpa.org/packages/")))
    (unless (package-installed-p 'use-package)
      (package-refresh-contents)
      (package-install 'use-package))
    (require 'use-package)
  #+END_SRC

  Color theme
  #+BEGIN_SRC elisp
    (use-package color-theme-sanityinc-solarized
      :ensure
      :config (load-theme 'sanityinc-solarized-light t))
  #+END_SRC

  Font on Windows
  #+BEGIN_SRC elisp
    (when (eq window-system 'w32)
      (if (> window-system-version 5)
          (set-default-font "Consolas-12" :frames t)
        (set-default-font "Lucida Console-10" :frames t)))
  #+END_SRC

** Editing
   Vim-style
   #+BEGIN_SRC elisp
     (use-package evil
       :ensure
       :bind (("C-v" . evil-scroll-down)
              ("M-v" . evil-scroll-up))
       :config
       (progn
         (evil-mode t)
         (evil-set-initial-state 'special-mode 'emacs)
         (dolist (state '(normal motion))
           (evil-define-key state global-map
             (kbd "<SPC>") #'evil-scroll-down
             (kbd "S-<SPC>") #'evil-scroll-up))
         (dolist (state '(insert motion normal))
           (evil-define-key state global-map
             (kbd "C-t") #'transpose-chars
             (kbd "C-d") #'delete-char
             (kbd "C-k") #'kill-line
             (kbd "C-y") #'evil-paste-before
             (kbd "C-a") #'beginning-of-line (kbd "C-e") #'end-of-line
             (kbd "C-f") #'forward-char   (kbd "C-b") #'backward-char
             (kbd "C-n") #'next-line      (kbd "C-p") #'previous-line
             (kbd "<down>") #'next-line   (kbd "<up>") #'previous-line
             (kbd "j") #'next-line        (kbd "k") #'previous-line
             (kbd "C-r") #'isearch-backward))
         (evil-define-key 'insert global-map
           "j" #'self-insert-command "k" #'self-insert-command)
         (evil-define-key 'motion help-mode-map
           (kbd "<tab>") #'forward-button)))
   #+END_SRC

   Automatic parens
   #+BEGIN_SRC elisp
     (use-package smartparens
       :ensure
       :diminish ""
       :config (progn (require 'smartparens-config)
                      (smartparens-global-mode t)))
   #+END_SRC

   Aggressive indent
   #+BEGIN_SRC elisp
     (use-package aggressive-indent
       :ensure
       :diminish ""
       :config (global-aggressive-indent-mode))
   #+END_SRC

   Switch window with ace
   #+BEGIN_SRC elisp
     (use-package ace-window
       :ensure
       :config (ace-window-display-mode 1)
       :bind ("C-x o" . ace-window))
   #+END_SRC

   Do things with helm:
   #+BEGIN_SRC elisp
     (use-package helm
       :ensure
       :config (progn
                 (helm-mode 1)
                 (define-key shell-mode-map (kbd "M-r") #'helm-comint-input-ring))
       :diminish helm-mode
       :bind (("C-h SPC" . helm-all-mark-rings)
              ("C-x b" . helm-mini)
              ("C-x C-b" . helm-buffers-list)
              ("C-x C-f" . helm-find-files)
              ("C-c g" . helm-do-grep)
              ("M-s o" . helm-occur)
              ("M-x" . helm-M-x)))
     (require 'helm-config)
     (use-package evil
       :config (dolist (state '(insert motion normal))
                 (evil-define-key state global-map
                   (kbd "M-y") #'helm-show-kill-ring)))
   #+END_SRC

** Org
   #+BEGIN_SRC elisp
     (add-hook 'org-mode-hook
               '(lambda ()
                  (add-hook 'before-save-hook 'org-align-all-tags
                            :local t)))
     (org-babel-do-load-languages 'org-babel-load-languages
                                  '((sh .t)))
     (setq org-src-fontify-natively t)
   #+END_SRC

*** Crypt
    #+BEGIN_SRC elisp
      (require 'org-crypt)
      (add-hook 'org-mode-hook
                '(lambda ()
                   (add-hook 'before-save-hook 'org-encrypt-entries
                             :local t)))
      (setq org-tags-exclude-from-inheritance '("crypt"))
      (setq org-crypt-key "hdhoang@keybase.io")
    #+END_SRC

    Make it possible to tangle encrypted block
    #+BEGIN_SRC elisp
      (remove-hook 'org-babel-pre-tangle-hook #'save-buffer)
    #+END_SRC

** Magit
   #+BEGIN_SRC elisp
     (use-package magit
       :ensure
       :bind ("C-x g" . magit-status))
     (setq magit-save-repository-buffers 'dontask)
   #+END_SRC

** Dired
   #+BEGIN_SRC elisp
     (use-package dired+
       :ensure
       :config (progn (require 'dired+)
                      (global-dired-hide-details-mode -1)))
     (defun dired-open ()
       (interactive)
       (dired-do-shell-command "xdg-open &" :file-list (dired-get-marked-files)))
     (eval-after-load "dired"
       '(progn (define-key dired-mode-map (kbd "RET") #'dired-open)
               (define-key dired-mode-map (kbd "<mouse-2>") #'dired-open)))
     (setq dired-recursive-copies 'always
           dired-recursive-deletes 'always
           dired-listing-switches "-alh"
           dired-guess-shell-alist-user
           '(("\\.cb.\\'" "okular")
             ("." "xdg-open;")))
   #+END_SRC

   
** Eshell
   Put eshell on a convenient binding
   #+BEGIN_SRC elisp
     (global-set-key (kbd "C-x M-m") #'eshell)
   #+END_SRC

   I like the prompt to be on a separate line.
   #+BEGIN_SRC elisp
     (setq eshell-prompt-function
           '(lambda ()
              (concat (eshell/pwd) "\n"
                      (int-to-string eshell-last-command-status) "% "))
           eshell-prompt-regexp "^[[:digit:]]+% ")
   #+END_SRC

   These are terminal-manipulating commands
   #+BEGIN_SRC elisp
     (eval-after-load 'em-term
       '(progn
          (dolist (prog '("atop" "systemd-cgls" "journalctl"))
            (add-to-list 'eshell-visual-commands prog))
          (add-to-list 'eshell-visual-options '("ssh" "-t"))))
   #+END_SRC

   Profile:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/profile :no-expand
     addpath ~/Copy/bin
   #+END_SRC

   Aliases:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias vim find-file $1
     alias g git $*
     alias i yaourt $*
     alias j journalctl $*
     alias sc <<system_ctl>> $*
     alias uc <<user_ctl>> $*
     alias ytdl <<yt-dl>> $*
     alias fr free -h
   #+END_SRC

* Ansible
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (use-package yaml-mode :ensure)
    (use-package ansible-doc :ensure
      :config (add-hook 'yaml-mode-hook #'ansible-doc-mode))
  #+END_SRC

** Inventory
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible_inventory
   :END:

   Here are the hosts and their variables
   #+BEGIN_SRC conf
     [arch]
     kub ansible_python_interpreter=/usr/bin/python2
     ton ansible_python_interpreter=/usr/bin/python2 ansible_connection=local

     [all:vars]
     user=<<username>>
     home=/home/{{user}}
     h="{{home}}/Copy"
     conf="{{h}}/config/{{ansible_hostname}}"
     locale=en_US
     network=<<network>>
   #+END_SRC

   Ansible 2 doesn't accept host_vars here, create a dummy group
   #+BEGIN_SRC conf
     [kub]
     kub
     [kub:vars]
     address={{network}}.54
     ports={ owncloud: 4004, ipfs: 4001, torDir: 4660, torOr: 5880 }
   #+END_SRC

** Config
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible.cfg
   :END:

   Keep the inventory here
   #+BEGIN_SRC conf
     [defaults]
     inventory = ~/.ansible_inventory
   #+END_SRC

   For some reason ControlMaster isn't working
   #+BEGIN_SRC conf
     [ssh_connection]
     ssh_args=-o ControlMaster=no
   #+END_SRC
* Firefox
  :PROPERTIES: 
  :header-args+: :tangle ~/.pentadactylrc
  :END:      
  This file is in vimrc syntax
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (use-package vimrc-mode :ensure)
  #+END_SRC

  Use DuckDuckGo:
  #+BEGIN_SRC vimrc
    silent bmark -keyword ddg -t DDG https://duckduckgo.com/?kn=1&kp=-1&kae=c&q=%s
    set defsearch=ddg
  #+END_SRC

  Use backspace to go back:
  #+BEGIN_SRC vimrc
    set! browser.backspace_action=0
  #+END_SRC

  Don't let middle mouse paste:
  #+BEGIN_SRC vimrc
    set! middlemouse.contentLoadURL=false
  #+END_SRC

  Restore C-j for Downloads:
  #+BEGIN_SRC vimrc
    map <C-j> -ex dialog downloads
  #+END_SRC

  Bind stop to an easy binding:
  #+BEGIN_SRC vimrc
    map s <C-c>
  #+END_SRC

  Make scrolling easier:
  #+BEGIN_SRC vimrc
    map <space> <C-d>
    map <S-space> <C-u>
  #+END_SRC

  Pin tab:
  #+BEGIN_SRC vimrc
    map <A-p> -ex pintab!
  #+END_SRC

  Move to first or last:
  #+BEGIN_SRC vimrc
    map <A-!> -ex tabm 1
    map <A-$> -ex tabm $
  #+END_SRC

  Fast switching:
  #+BEGIN_SRC vimrc
    map -m normal,insert <F1> <C-^>
  #+END_SRC

  Don't raise these openings:
  #+BEGIN_SRC vimrc
    set activate-=diverted,links,tabopen,paste
  #+END_SRC

  Open help in a new tab
  #+BEGIN_SRC vimrc
    set newtab=help
  #+END_SRC

  Keep hint keys under left fingers:
  #+BEGIN_SRC vimrc
    set hintkeys=12345
  #+END_SRC

  Make hint text readable
  #+BEGIN_SRC vimrc
    highlight Hint -append font-size: 14px !important
  #+END_SRC

  Unzoom image:
  #+BEGIN_SRC vimrc
    map <A-t> -js content.document.toggleImageSize()
  #+END_SRC

  Show link in commandline:
  #+BEGIN_SRC vimrc
    set guioptions+=c
    set showstatuslinks=command
  #+END_SRC

  Scroll by one line:
  #+BEGIN_SRC vimrc
    set scrollsteps=1
  #+END_SRC

  Show feeds first in pageinfo:
  #+BEGIN_SRC vimrc
    set pageinfo=fgmse
  #+END_SRC

  Use visual bell:
  #+BEGIN_SRC vimrc
    set visualbell
  #+END_SRC

  Bookmarks and preferences:
  #+BEGIN_SRC vimrc
    map <C-S-s> -ex bmark -keyword ac -t config about:config
    \ bmark -keyword bgp -t BGP http://bgp.he.net/search?search[search]=%s
    \ bmark -keyword v -t valsi http://vlasisku.lojban.org/?query=%s
    \ bmark -keyword c -t camxes http://camxes.lojban.org/?text=%s
    \ bmark -keyword yb -t youtube https://youtube.com/watch?v=%s
    \ bmark -keyword cw -t 'CrawlWiki' http://crawl.chaosforge.org/index.php?title=Special%3ASearch&search=%s
    \ bmark -keyword dw -t 'Dota 2 Wiki' http://dota2.gamepedia.com/index.php?title=Special%3ASearch&search=%s
    \ bmark -keyword dr -t 'Dota 2 Random' http://dota2.gamepedia.com/Special:Random
    \ bmark -keyword df -t 'Dota 2 fix' http://dev.dota2.com/showthread.php?t=28814
    \ bmark -keyword er -t 'POE Random' http://pathofexile.gamepedia.com/Special:Random
    \ bmark -keyword lp -t LP http://lparchive.org/search/%s#results
    \ bmark -keyword ix -t ix -post f:1=%s http://ix.io/
    \ bmark -keyword io -t ixopen http://ix.io/%s/
    \ bmark -keyword bb -t burnbit http://burnbit.com/burn?file=%s
    \ bmark -keyword b -t btdigg https://btdigg.org/search?q=%s&order=0&p=0
    \ bmark -keyword ba -t btdigg https://btdigg.org/search?q=%s&order=2&p=0
    \ bmark -keyword mt -t metasearch http://metasearch.torrentproject.com/#!search=%s
    \ bmark -keyword lf -t last.fm http://last.fm/user/hdh0#recentTracks
    \ bmark -keyword m -t zing http://mp3.zing.vn/tim-kiem/bai-hat.html?q=%s
    \ bmark -keyword ma -t artist http://musicbrainz.org/search?advanced=1&type=artist&tport=8000&query=%s
    \ bmark -keyword mg -t group http://musicbrainz.org/search?advanced=1&type=release_group&tport=8000&query=%s
    \ bmark -keyword mr -t recording http://musicbrainz.org/search?advanced=1&type=recording&tport=8000&query=%s
    \ bmark -keyword ts -t 'tor address' https://atlas.torproject.org/#search/kub
    \ bmark -keyword gm -t gmail https://mail.google.com/mail/#spam
    \ bmark -keyword fb -t facebook https://fb.me/%s
    \ bmark -keyword w -t wallabag https://framabag.org/u/<<username>>/?action=random
    \ set! accessibility.browsewithcaret_shortcut.enabled=false
    \ set! browser.newtabpage.enabled=false
    \ set! browser.privatebrowsing.dont_prompt_on_enter=true
    \ set! browser.sessionstore.restore_pinned_tabs_on_demand=true
    \ set! browser.shell.checkDefaultBrowser=false
    \ set! browser.startup.homepage=about:blank
    \ set! browser.startup.page=3
    \ set! general.warnOnAboutConfig=false
    \ set! security.OCSP.enabled=0
    \ set! security.warn_viewing_mixed=false
    \ set! layout.spellcheckDefault=0
    \ set! middlemouse.paste=true
    \ set! ui.key.menuAccessKey=0
    \ set! browser.anchor_color="#6c71c4"
    \ set! browser.display.background_color="#fdf6e3"
    \ set! browser.display.foreground_color="#657b83"
    \ set! browser.display.use_system_colors=false
    \ set! font.default.x-western="sans-serif"
    \ set! font.minimum-size.x-western=15
    \ if /NT 6/.test(window.navigator.oscpu)
    \     set! font.name.monospace.x-western=Consolas
    \ fi
    \ set! extensions.checkCompatibility.nightly=false
    \ set! extensions.https_everywhere._observatory.alt_roots=true
    \ set! extensions.https_everywhere._observatory.enabled=true
    \ set! extensions.https_everywhere._observatory.priv_dns=true
    \ set! plugins.hide_infobar_for_missing_plugin=true
    \ set! browser.download.manager.alertOnEXEOpen=false
    \ set! browser.download.manager.scanWhenDone=false
    \ set! browser.search.context.loadInBackground=true
    \ set! intl.charset.default=UTF-8
    \ set! network.http.pipelining=true
    \ set! network.http.pipelining.aggressive=true
    \ set! network.http.pipelining.ssl=true
    \ set! network.protocol-handler.expose.magnet=false
    \ set! network.proxy.socks=kub.<<domain>>
    \ set! network.proxy.socks_port=9050
    \ set! network.proxy.socks_remote_dns=true
    \ set! toolkit.telemetry.enabled=true
    \ js services.permissions.add(services.io.newURI("http:depositfiles.com",null,null), 'image', services.permissions.DENY_ACTION)
    \ js services.permissions.add(services.io.newURI("http:kuf.<<domain>>",null,null), 'popup', services.permissions.ALLOW_ACTION)
    \ js services.loginManager.setLoginSavingEnabled("accounts.google.com", false)
  #+END_SRC

  Framabag's service:
  #+BEGIN_SRC vimrc
    silent bmark -keyword wa -t 'add to wallabag' http://framabag.org/u/<<username>>/index.php?plainurl=%s
    javascript <<EOS
    hints.addMode("a", "add to wallabag",
    function(e) { util.fetchUrl(bookmarks.getSearchURL("wa") + e.href) })
    EOS
    set eht+=[a]:a
    style -n "framabag" framabag.org <<EOS
    pre { font-family: monospace !important }
    EOS
  #+END_SRC

  Strip tracker from location, thanks to by [[https://userscripts.org/scripts/show/93825][Bruno Barão]] and [[https://github.com/5digits/dactyl/commit/7a1ffa5b555399c5d0925ad599e2640070bd128d][Kris Maglione]].
  #+BEGIN_SRC vimrc
    autocmd DOMLoad (utm|wa)_ -js win.history.replaceState("Remove trackers", '', doc.location.href.replace(/&?(utm|wa)_[^&]+/g,'').replace(/\?$/,''))
  #+END_SRC

  OwnCloud News:
  #+BEGIN_SRC vimrc
    set passkeys+=kuf.<<domain>>/index.php/apps/news/:opnse
    style -n "ownCloud" kuf.<<domain>> <<EOS
    .icon-rss  { display: block !important }
    body, button { font-family: sans !important }
    EOS
  #+END_SRC

  Site keyboard shortcuts:
  #+BEGIN_SRC vimrc
    set passkeys+=tumblr.com:jk
    set passkeys+=mail.google.com/mail/:'#!ms+-/? jknpu'
    set passkeys+=google.com/contacts/:'#jkoux,.'
  #+END_SRC

* Secrets							      :crypt:
-----BEGIN PGP MESSAGE-----
Version: GnuPG v2

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
7E5VQTNfavlRqAp3ke6QcIXojGQ=
=IeVI
-----END PGP MESSAGE-----
