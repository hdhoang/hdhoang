#+STARTUP: showall
#+PROPERTY: header-args+ :cache yes
#+PROPERTY: header-args+ :comments org
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :noweb yes
#+PROPERTY: header-args+ :results silent
#+PROPERTY: header-args:text+ :eval no
* Places and names
  #+NAME: username
  #+BEGIN_SRC text
    hdhoang
  #+END_SRC

  #+NAME: storage
  #+BEGIN_SRC text
    /home/<<username>>/Copy
  #+END_SRC

  #+NAME: fav_music
  #+BEGIN_SRC text
    /home/<<username>>/Music
  #+END_SRC

  #+NAME: prefix
  #+BEGIN_SRC text
    10.117.14
  #+END_SRC

  #+NAME: domain
  #+BEGIN_SRC text
    zahe.me
  #+END_SRC

  #+NAME: system_ctl
  #+BEGIN_SRC text
    systemctl --system --no-pager
  #+END_SRC

  #+NAME: user_ctl
  #+BEGIN_SRC text
    systemctl --user --no-pager
  #+END_SRC

  #+NAME: pacman
  #+BEGIN_SRC text
    pacman --noconfirm --needed
  #+END_SRC

  #+NAME: yt-dl
  #+BEGIN_SRC text
    youtube-dl --format "[height <=? 720]" --output ~/Videos/"%(uploader)s %(upload_date)s %(title)s@%(id)s.%(ext)s"
  #+END_SRC

* VPN
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S openvpn
  #+END_SRC
  #+NAME: openvpn_common
  #+BEGIN_SRC conf
    dev tun
    topology subnet
    persist-key
    persist-tun
    keepalive 10 30
    tls-version-min 1.2
    tls-cipher TLS-DHE-RSA-WITH-AES-128-CBC-SHA
    <tls-auth>
    <<ta_key>>
    </tls-auth>
    <ca>
    -----BEGIN CERTIFICATE-----
    MIIEYTCCA0mgAwIBAgIJAPxrcItU3yz8MA0GCSqGSIb3DQEBCwUAMH0xCzAJBgNV
    BAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFOb2kxDTALBgNVBAoTBHph
    aGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3phaGUubWUxHjAcBgkqhkiG
    9w0BCQEWD2hkaG9hbmdAemFoZS5tZTAeFw0xNTA5MjYxMTM0NTRaFw0yNTA5MjMx
    MTM0NTRaMH0xCzAJBgNVBAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFO
    b2kxDTALBgNVBAoTBHphaGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3ph
    aGUubWUxHjAcBgkqhkiG9w0BCQEWD2hkaG9hbmdAemFoZS5tZTCCASIwDQYJKoZI
    hvcNAQEBBQADggEPADCCAQoCggEBANXOfdISWeotIr3neKpj6IGBlCLMEBNtMB1r
    bTIgkxe9tnNd4jBufq6duLK91ioqcJiAxMLRovYtaRTOpQit5/PnAm2Iwu3u2mGX
    EftWEBSVt437NMVA6L2Jemv1lp81vmzJIODgPQ9elrNteQ3ccAMCpuj/l6PhGeFq
    JvK+dNIJcm2+xM15S6ESwjsZxwijiT3TMJAjXJPC5R3gpULoTHrphPGrS/0RIq9c
    Bd/+4Q7k1MguPK2XSKHiJnUIkQJ/m/XGT2iXVEzhOsHZ8vlaNq1xBzTko10nEb7I
    sOQjuH4GCZMeoYnF3egg534fg+BYPAecuKglqdIpnm4+syJsrR0CAwEAAaOB4zCB
    4DAdBgNVHQ4EFgQUsDCM7/aJ6AjPVQPEbdDTiTa9WIswgbAGA1UdIwSBqDCBpYAU
    sDCM7/aJ6AjPVQPEbdDTiTa9WIuhgYGkfzB9MQswCQYDVQQGEwJWTjELMAkGA1UE
    CBMCSE4xDjAMBgNVBAcTBUhhTm9pMQ0wCwYDVQQKEwR6YWhlMRAwDgYDVQQDEwd6
    YWhlIENBMRAwDgYDVQQpEwd6YWhlLm1lMR4wHAYJKoZIhvcNAQkBFg9oZGhvYW5n
    QHphaGUubWWCCQD8a3CLVN8s/DAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUA
    A4IBAQAKkiDOWmwu1D+qbCSYaSxiMfJ70FyA/o+AuCDeaGxKdFLZ2JQgYK/az3y8
    tGQKBc6AdUY7BoN1Ab/6TOz+hWvmyNOOvq2AMgt2bHHA+JquRZMdgw59OtbB2BjC
    vBs2cxRJWdmv8aSltcqVpm2HNHy3mzcq8i0CdFluxDV+zQmvhGVypAipYTlhdi0l
    KLJlB+3fqS5GQB0wPmkV2N6WJdm0NfoTbBOCXwVb4ChyrgryQaOQi5nu8wO9tzeO
    kK/jQJRFKpdwBYqAe0Q/JP95pVjctyiVFg97ppvQ557QFcY1pHapAwhyBmxYiLak
    W4pz42IduC2pnZ3ut4C7UzpeDMRr
    -----END CERTIFICATE-----
    </ca>
  #+END_SRC

* SSH
  :PROPERTIES:
  :header-args+: :tangle ~/.ssh/config
  :END:

  SSH encryption settings by https://stribika.github.io/2015/01/04/secure-secure-shell.html

  #+BEGIN_SRC conf
    Host *
    KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256
    Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com,hmac-sha1
  #+END_SRC

  Machines
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    vorme ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCf2C8j0GFA8eq8Vgva/9KI4cF4Q23v4rBk6zAxoyIJvENGkpDuUba4AOMabUkPiXU76KVbx/h4fOivjrWoUNG6Z0xEOJTQqVwuk7788dwIm49Ba+ZOC/sCtT7dsbshFpzXmkdASsZty0foFSILRADDTlB1MZiN9wJRlnjkmIO9WiSMYnuGzolO2f+Gy6LFrtQF1ZgOOqPToO4u4li3VPh1zdoY5+IQul9BQJGU7tMZrleH09LcOUlip8SHZYuXu/Zlb9GSK7Cj7WfGaR0k+xvs657n41haffQ5CxTjocqZdv7eO4Uo2ryWXn2Ck7DwKH6KMjEJZRbX32zLsTacQNgR
    kub,<<prefix>>.54 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGtY5ERdvH+mAQKfy270I+eEaZ2i6FhhEjG0EuzDxIym
  #+END_SRC
  #+BEGIN_SRC conf
    Host vorme
    User root
    IdentityFile ~/.ssh/kub
    Host kub
    User <<username>>
    IdentityFile ~/.ssh/kub
  #+END_SRC
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'tramp
      '(add-to-list 'tramp-default-proxies-alist '("kub" "root" "/ssh:kub:")))
  #+END_SRC

* KDE
** kwin
   :PROPERTIES:
   :header-args+: :tangle ~/.config/kwinrulesrc
   :END:

   Remove border from firefox
   #+BEGIN_SRC conf
     [1]
     Description=Window settings for firefox
     noborder=true
     noborderrule=2
     shortcut=F5
     shortcutrule=2
     windowrole=browser
     windowrolematch=1
     wmclass=navigator firefox
     wmclasscomplete=true
     wmclassmatch=1
   #+END_SRC

   Put emacs on F4
   #+BEGIN_SRC conf
     [2]
     Description=Application settings for emacs
     noborder=true
     noborderrule=2
     shortcut=F4
     shortcutrule=2
     wmclass=emacs
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   Put konsole on F6
   #+BEGIN_SRC conf
     [3]
     Description=Application settings for konsole
     noborder=true
     noborderrule=2
     shortcut=F6
     shortcutrule=2
     wmclass=konsole
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   #+BEGIN_SRC conf
     [General]
     count=3
   #+END_SRC

* Git

  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S git
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [user]
    name = Hoàng Đức Hiếu
    email = <<username>>@<<domain>>
    [color]
    ui = auto
    [core]
    eol = lf
    whitespace = trailing-space,space-before-tab
    [alias]
    ml = log --reverse --topo-order ORIG_HEAD..
    [merge]
    conflictstyle = diff3
    [push]
    default = simple
    [pull]
    rebase = true
    [rebase]
    stat = true
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias g git $*
  #+END_SRC

  Code hosting sites:
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
  #+END_SRC
  #+BEGIN_SRC conf :tangle ~/.ssh/config
    Host github.com bitbucket.org
    User git
    IdentityFile ~/.ssh/git
    Host git.kde.org
    User git
    IdentityFile ~/.ssh/kde
    Host heroku.com
    IdentityFile ~/.ssh/heroku
  #+END_SRC

  Magit is awesome.
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package magit :ensure
           :bind ("C-x g" . magit-status))
         (setq magit-save-repository-buffers 'dontask
               magit-push-always-verify nil)))
  #+END_SRC

* ArchLinux
  Pacman config
  #+NAME: pacman_common
  #+BEGIN_SRC conf
    [options]
    VerbosePkgLists
    UseSyslog
    CheckSpace
    HoldPkg = pacman glibc
    SigLevel = Required DatabaseOptional
    LocalFileSigLevel = Optional

    [core]
    Include = /etc/pacman.d/mirrorlist
    [extra]
    Include = /etc/pacman.d/mirrorlist
    [community]
    Include = /etc/pacman.d/mirrorlist
    [blackarch]
    Server = http://f.archlinuxvn.org/$repo/$repo/os/$arch
  #+END_SRC

  Refresh database
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S -y
  #+END_SRC

  AUR helper
  #+BEGIN_SRC yaml :tangle ~/Copy/bin/aur :shebang #!/bin/ansible-playbook
    - hosts: arch
      gather_facts: no
      vars:
        store: /tmp/aur
      vars_prompt:
        - name: package
          private: no
      tasks:
        - file: state=directory path={{store}}
        - get_url: url=https://aur4.archlinux.org/cgit/aur.git/snapshot/{{package}}.tar.gz dest={{store}}/
        - unarchive: copy=no src={{store}}/{{package}}.tar.gz dest={{store}}
        - command: nice makepkg --noconfirm --install --force --syncdeps chdir={{store}}/{{package}}
  #+END_SRC

  Yaourt config
  #+BEGIN_SRC conf :tangle ~/.yaourtrc
    AURUPGRADE=1
    EXPORT=1
    EXPORTDIR=~
    BUILD_NOCONFIRM=1
    EDITFILES=0
  #+END_SRC

  Base utils
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S haveged p7zip parallel pkgfile yaourt
    <<system_ctl>> enable --now haveged
  #+END_SRC

  #+BEGIN_SRC sh
    pkgfile -u
  #+END_SRC

  Dev-env:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S base-devel rust android-tools
  #+END_SRC

  Monitoring:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ethtool lm_sensors net-tools psmisc \
        procps-ng inetutils ltrace sysdig atop iotop
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/Copy/bin/strace :shebang #!/bin/sh :no-expand
    exec /usr/bin/ltrace -CSn2 $@
  #+END_SRC

  Of course emacs is installed, now run it
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S emacs-pkgbuild-mode
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.config/systemd/user/emacs.service
    [Unit]
    Description=Emacs

    [Service]
    ExecStart=/bin/emacs
    Restart=always
    RestartSec=1sec

    [Install]
    WantedBy=default.target
  #+END_SRC

  #+BEGIN_SRC sh :dir ~
    <<user_ctl>> enable --now emacs syncthing pulseaudio
  #+END_SRC

** kub
   :PROPERTIES:
   :header-args+: :dir /sudo:kub:
   :END:
*** Mounts
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/fstab
      LABEL=<<username>> /home/<<username>> auto
      LABEL=var /var auto
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/systemd/network/eth0.network
      [Match]
      Name = eth0

      [Network]
      Address = <<prefix>>.54/24
      Gateway = <<prefix>>.1
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/resolv.conf
      nameserver <<prefix>>.1
    #+END_SRC

*** Pacman
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/pacman.conf
      <<pacman_common>>

      [options]
      Architecture = armv7h

      [alarm]
      Include = /etc/pacman.d/mirrorlist
      [aur]
      Include = /etc/pacman.d/mirrorlist
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/pacman.d/mirrorlist
      Server = http://vn.mirror.archlinuxarm.org/$arch/$repo
    #+END_SRC

*** LED blinking
    #+BEGIN_SRC sh :tangle /sudo:kub:/usr/local/bin/leds :shebang #!/bin/sh
      echo none > /sys/class/leds/cubieboard:green:usr/trigger
      echo mmc0 > /sys/class/leds/cubieboard:blue:usr/trigger
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/systemd/system/leds.service
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/leds
      RemainAfterExit=true

      [Install]
      WantedBy=basic.target
    #+END_SRC

*** Tor
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S tor
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/tor/torrc
      ContactInfo tor at zahe dot me
      Nickname kub
      DirPort 4660
      ORPort 5880
      SOCKSPort <<prefix>>.54:9050
      MaxAdvertisedBandwidth 40 KBytes
      ExitPolicy reject *:*

      DataDirectory /var/lib/tor
      Log notice syslog
    #+END_SRC

*** HTTP
    #+BEGIN_SRC sh
      <<pacman>> -S nginx
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/nginx/nginx.conf
      events {}
      http {
      include       mime.types;
      default_type  text/plain;
      charset utf-8;
      gzip off;

      access_log  off;
      log_not_found off;

      server {
      return 301 https://$host$request_uri;
      }

      ssl_protocols TLSv1.2;
      ssl_ciphers EECDH+CHACHA20:EECDH+AES128;
      ssl_prefer_server_ciphers on;
      add_header Strict-Transport-Security max-age=31536000;

      map $request_uri $dest {
      /_ https://raw.githubusercontent.com/hdhoang/hdhoang/master/config/dotpentadactylrc;
      /c /mirror/caps2ctrl.exe;
      /d http://5digits.org/nightly/pentadactyl-latest.xpi;
      /pe http://live.sysinternals.com/;
      /s https://puttytray.goeswhere.com/download/putty.exe;
      /ws https://www.wosign.com/root/ca1_dv_free_2.crt;

      default "";
      }

      server {
      listen 443 ssl spdy default_server;
      ssl_certificate zahe.me.crt;
      ssl_certificate_key zahe.me.key;
      server_name kub.zahe.me zahe.me;
      root /home/hdhoang/Public/;
      autoindex on;
      if ($dest) {
      return 301 $dest;
      }
      location /ipfs/ {
      proxy_pass http://127.0.0.1:4005;
      }
      location ~ /mirror/(?:.*)\.part {
      return 403 incomplete;
      }
      }

      server {
      listen 443 ssl spdy;
      server_name id.zahe.me;
      root /home/hdhoang/Public/;
      index hdhoang;
      default_type text/html;
      }
      }
    #+END_SRC

*** DLNA
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S minidlna
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/minidlna.conf
      friendly_name=kub
      port=8200

      media_dir=<<storage>>
      media_dir=A,<<fav_music>>
      media_dir=V,/home/<<username>>/Videos
      media_dir=V,/home/<<username>>/Public/mirror
    #+END_SRC
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<system_ctl>> enable --now minidlna
    #+END_SRC

*** VPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo:kub:/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 0
      tls-server
      <pkcs12>
      <<kub_pfx>>
      </pkcs12>
      <dh>
      -----BEGIN DH PARAMETERS-----
      MIIBCAKCAQEAoioJw6aUXmgBDSw6SzbSZww6i7eH0MC+Eba5qGmYJnKn2zI8dBH6
      JZKnAyz9MbD21loI6KjAnOzZkBp7DKle1cACLS229Olycr22rXWPFuhMV15TohDJ
      ArazVXSJGDL9OXhdHei96K3qXofz/3AzXEVxD0unQd5sRlgNGmunofvgWBechdmn
      YQl44SZ0asC8uUY1uiKjVyQzqeNDi3rjJtTobcPdR6Pb8CnS3cfwoWzXMwUexmfJ
      VQSNaDZIeQcwV5MEHs1XViOTiEvT8IHbJojJri0geUSJ+HkX1JTxGIUj4xxKHQ0j
      AFEjqDYFh3q7U6QgFLRWZffVLgxIZVopIwIBAg==
      -----END DH PARAMETERS-----
      </dh>
      user nobody
      group nobody

      mode server

      server 10.255.0.0 255.255.255.0
      push "route <<prefix>>.54"
    #+END_SRC

*** SSH
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/ssh/sshd_config
      Protocol 2
      HostKey /etc/ssh/ssh_host_ed25519_key
      HostKey /etc/ssh/ssh_host_rsa_key

      KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
      MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com

      AllowGroups wheel
      PasswordAuthentication no
      ChallengeResponseAuthentication no
      UsePrivilegeSeparation sandbox

      Subsystem sftp /usr/lib/ssh/sftp-server
    #+END_SRC

** ton
*** Mounts
    #+BEGIN_SRC sh
      fallocate -l 2G /swap
      chmod u=rw,go= /swap
      mkswap /swap
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
      LABEL=home /home/<<username>> ntfs-3g noatime,nofail
      LABEL=ESP /boot vfat
      /swap none swap
    #+END_SRC

*** Hosts
    #+BEGIN_SRC conf :tangle /sudo::/etc/hosts
      127.0.0.1 ton
      ::1 ton
      <<prefix>>.1 vorme
      <<prefix>>.54 kub
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/00-bkap.network
      [Match]
      Name = enp4s0

      [Network]
      DNS = 8.8.8.8
      Address = 192.168.0.252/24
      Gateway = 192.168.0.1
      Address = 192.168.1.252/24
      Gateway = 192.168.1.1
      Address = 192.168.4.252/24
      Gateway = 192.168.4.1
      Address = 192.168.5.252/24
      Gateway = 192.168.5.1

      [Route]
      Destination=192.168.1.1
      Source=192.168.1.252
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/dhcp.network
      [Network]
      DHCP=ipv4
    #+END_SRC

*** Pacman
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.conf
    <<pacman_common>>

    [options]
    Architecture = auto

    [multilib]
    Include = /etc/pacman.d/mirrorlist
  #+END_SRC
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.d/mirrorlist
    Server = http://f.archlinuxvn.org/archlinux/$repo/os/$arch
  #+END_SRC

*** VPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo::/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 1
      tls-client
      <pkcs12>
      <<ton_pfx>>
      </pkcs12>

      nobind
      pull

      remote k.<<domain>> 22
      verify-x509-name kub.<<domain>> name
      remote-cert-tls server
      resolv-retry infinite
    #+END_SRC

*** Fonts
    #+BEGIN_SRC sh
      <<pacman>> -S ttf-linux-libertine ttf-inconsolata ttf-hannom
    #+END_SRC

    #+BEGIN_SRC xml :tangle ~/.config/fontconfig/fonts.conf :padline no :comments no
      <?xml version='1.0'?>
      <!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
      <fontconfig>
        <match target="font">
          <edit mode="assign" name="rgba">
            <const>none</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hinting">
            <bool>true</bool>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hintstyle">
            <const>hintmedium</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="antialias">
            <bool>true</bool>
          </edit>
        </match>
        <dir>~/.fonts</dir>
        <match target="pattern">
          <test qual="any" name="family"><string>Arial</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <match target="pattern">
          <test qual="any" name="family"><string>DejaVu Sans</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <alias>
          <family>sans-serif</family>
          <prefer>
            <family>Linux Biolinum O</family>
          </prefer>
        </alias>
        <alias>
          <family>serif</family>
          <prefer>
            <family>Linux Libertine O</family>
          </prefer>
        </alias>
        <alias>
          <family>monospace</family>
          <prefer>
            <family>Inconsolata</family>
          </prefer>
        </alias>
        <selectfont>
          <rejectfont>
            <glob>/usr/share/fonts/default/Type1/*</glob>
            <pattern>
              <patelt name="scalable">
                <bool>false</bool>
              </patelt>
            </pattern>
          </rejectfont>
        </selectfont>
      </fontconfig>
     #+END_SRC

*** Desktop
    These DBus services are provided by plasma-workspace-units.
    #+BEGIN_SRC sh :dir /sudo::
      rm /usr/share/dbus-1/services/org.kde.{kded5,kglobalaccel,kuiserver,kwalletd5}.service
    #+END_SRC

**** Keyboard
     Use dvorak, swap caps for ctrl
     #+BEGIN_SRC conf :tangle /sudo::/usr/share/kbd/keymaps/caps2ctrl.map
       include "/usr/share/kbd/keymaps/i386/dvorak/dvorak.map.gz"
       keycode 58 = Control
     #+END_SRC
     #+BEGIN_SRC sh
       localectl set-keymap caps2ctrl
     #+END_SRC

     Base Japanese IME on dvorak, swap caps for ctrl
     #+BEGIN_SRC conf
       Windows Registry Editor Version 5.00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]
       "Scancode Map"=hex:00,00,00,00,00,00,00,00,02,00,00,00,1d,00,3a,00,00,00,00,00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layouts\00000411]
       "Layout File"="kbddv.dll"
     #+END_SRC

**** Pointer
     Use evdev for the touchscreen
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Atmel touchscreen"
               MatchProduct "maXTouch"
               Driver "evdev"
       EndSection
     #+END_SRC

     Use natural scrolling on touchpad
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Natural scrolling"
               MatchProduct "TouchPad"
               MatchDriver "libinput"
               Option "NaturalScrolling" "1"
       EndSection
     #+END_SRC

**** Rotation
     #+BEGIN_SRC sh :dir /sudo::
       <<pacman>> -S acpid
     #+END_SRC
     #+BEGIN_SRC text :tangle /sudo::/etc/acpi/events/rotation-button
       event=ibm/hotkey LEN0068:00 00000080 00006020
       action=sudo -u hdhoang DISPLAY=:0 /usr/local/bin/rotate-screen
     #+END_SRC
     #+BEGIN_SRC sh :tangle /sudo::/usr/local/bin/rotate-screen :shebang #!/bin/sh
       case $(xrandr | grep LVDS1 | cut -f 4 -d ' ' | tr -d '(') in
           normal) new="left";;
           left)   new="normal";;
       esac
       xrandr --output LVDS1 --rotate $new

       case $new in
           normal) matrix="1 0 0 0 1 0 0 0 1";;
           left)   matrix="0 -1 1 1 0 0 0 0 1";;
           right)  matrix="0 1 0 -1 0 1 0 0 1";;
           inverted) matrix="-1 0 1 0 -1 1 0 0 1";;
       esac
       for dev in "SynPS/2 Synaptics TouchPad" "TPPS/2 IBM TrackPoint" "Atmel Atmel maXTouch Digitizer"; do
           xinput set-prop "$dev" "Coordinate Transformation Matrix" $matrix
       done
     #+END_SRC
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now acpid
     #+END_SRC

*** Picard
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S picard chromaprint
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/MusicBrainz/Picard.conf
      [setting]
      server_host=musicbrainz.org
      server_port=80

      fingerprinting_system=acoustid
      acoustid_apikey=<<acoustid_key>>
      acoustid_fpcalc=/usr/bin/fpcalc

      save_images_to_tags=true
      save_only_front_images_to_tags=true
      save_images_to_files=false
      ca_provider_use_amazon=true
      ca_provider_use_caa=true
      ca_provider_use_caa_release_group_fallback=true
      ca_provider_use_whitelist=true
      caa_image_size=1
      caa_approved_only=true
      caa_restrict_image_types=true
      analyze_new_files=false
      ignore_file_mbids=false
      quit_confirmation=true
      va_name=Various Artists
      nat_name=
      standardize_artists=true

      windows_compatibility=true
      ascii_filenames=false
      rename_files=true
      move_files=true
      file_naming_format="$if2(%albumartist%,%artist%)/$if($ne(%albumartist%,),%album%/)$if($gt(%totaldiscs%,1),%discnumber%-,)$if($ne(%albumartist%,),$num(%tracknumber%,2) ,)$if(%_multiartist%,%artist% - ,)%title%"
      move_files_to=<<fav_music>>/_new
      move_additional_files=true
      move_additional_files_pattern=*.jpg *.png *.jpeg
      delete_empty_dirs=true

      browser_integration=true
      browser_integration_port=8000
      browser_integration_localhost_only=true

      dont_write_tags=false
      preserve_timestamps=false
      write_id3v1=true
      write_id3v23=true
      id3v23_join_with=/
      id3v2_encoding=utf-16
      remove_ape_from_mp3=true
      remove_id3_from_flac=true
    #+END_SRC
*** mpd
    :PROPERTIES:
    :header-args+: :dir ~
    :END:

    Create playlist
    #+BEGIN_SRC sh
      mpc listall > <<fav_music>>/pq.m3u
    #+END_SRC

    Shuffle and play
    #+BEGIN_SRC sh :results raw
      mpc -q clear && mpc load pq && mpc -q shuffle && mpc play
    #+END_SRC

    Delete currently playing track
    #+BEGIN_SRC sh :eval query
      rm -v <<fav_music>>/"$(mpc -f %file% | head -1)"
    #+END_SRC

*** mpv
    #+BEGIN_SRC conf :tangle ~/.config/mpv/mpv.conf
      sub-auto=fuzzy
      hwdec=auto
      hwdec-codecs=all
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/mpv/input.conf
      q quit_watch_later
      MOUSE_BTN0 cycle pause
      MOUSE_BTN1 show_progress
      MOUSE_BTN2 cycle fullscreen
      z set window-scale 0.5
      Z set window-scale 1

      ; show_progress
      f show_text "${filename}"
      d cycle audio
      y add volume 1
      i add volume -1
      g add sub-delay  0.1
      h add sub-delay -0.1
      x cycle mute

      k frame_step
      ' seek +10
      a seek -10
      , seek +60
      o seek -60
      . seek +300
      e seek -300

      u cycle fullscreen
    #+END_SRC
* Emacs
  :PROPERTIES:
  :header-args+: :tangle ~/.emacs
  :END:

  OOBE settings:
  #+BEGIN_SRC elisp
    (server-mode t)
    (desktop-save-mode t)
    (global-set-key (kbd "C-x C-r")
                    (lambda () (interactive)
                      (revert-buffer :noconfirm t)))
    (defalias 'yes-or-no-p #'y-or-n-p)
    (defalias 'dabbrev-expand #'hippie-expand)
    (setq auto-save-default nil
          calendar-week-start-day 1
          default-input-method "vietnamese-telex"
          desktop-load-locked-desktop t
          inhibit-startup-screen t
          make-backup-files nil
          scroll-preserve-screen-position t
          tramp-default-method "ssh"
          undo-tree-mode-lighter ""
          visible-bell t
          frame-title-format "%b")
    (set-language-environment "UTF-8")
    (setq-default buffer-file-coding-system 'utf-8-unix)
    (setq-default sentence-end-double-space nil)
    (global-set-key (kbd "C-\\") #'toggle-input-method)
    (blink-cursor-mode -1)
    (show-paren-mode t)
    (winner-mode)
  #+END_SRC

  Package management
  #+BEGIN_SRC elisp
    (package-initialize)
    (setq package-archives
          '(("gnu" . "https://elpa.gnu.org/packages/")
            ("marmalade" . "https://marmalade-repo.org/packages/")
            ("melpa" . "http://melpa.org/packages/")))
    (unless (package-installed-p 'use-package)
      (package-refresh-contents)
      (package-install 'use-package))
    (require 'use-package)
  #+END_SRC

  Color theme
  #+BEGIN_SRC elisp
    (use-package color-theme-sanityinc-solarized :ensure
      :config (load-theme 'sanityinc-solarized-light t))
  #+END_SRC

  Font on Windows
  #+BEGIN_SRC elisp
    (when (eq window-system 'w32)
      (if (> window-system-version 5)
          (set-default-font "Consolas-12" :frames t)
        (set-default-font "Lucida Console-10" :frames t)))
  #+END_SRC

** Editing
   Vim-style
   #+BEGIN_SRC elisp
     (use-package evil :ensure
       :config
       (progn
         (evil-mode t)
         (evil-set-initial-state 'special-mode 'emacs)
         (dolist (state '(normal motion))
           (evil-define-key state global-map
             (kbd "<SPC>") #'evil-scroll-down
             (kbd "S-<SPC>") #'evil-scroll-up))
         (dolist (state '(insert motion normal))
           (evil-define-key state global-map
             (kbd "C-t") #'transpose-chars
             (kbd "C-d") #'delete-char
             (kbd "C-k") #'kill-line
             (kbd "C-y") #'evil-paste-before
             (kbd "C-a") #'beginning-of-line (kbd "C-e") #'end-of-line
             (kbd "C-f") #'forward-char   (kbd "C-b") #'backward-char
             (kbd "C-n") #'next-line      (kbd "C-p") #'previous-line
             (kbd "<down>") #'next-line   (kbd "<up>") #'previous-line
             (kbd "j") #'next-line        (kbd "k") #'previous-line
             (kbd "C-v") #'evil-scroll-down (kbd "M-v") #'evil-scroll-up
             (kbd "C-r") #'isearch-backward))
         (evil-define-key 'insert global-map
           "j" #'self-insert-command "k" #'self-insert-command)
         (evil-define-key 'motion help-mode-map
           (kbd "<tab>") #'forward-button)))
   #+END_SRC

   Aggressive indent
   #+BEGIN_SRC elisp
     (use-package aggressive-indent :ensure
       :diminish ""
       :config (global-aggressive-indent-mode))
   #+END_SRC

   Switch window with ace
   #+BEGIN_SRC elisp
     (use-package ace-window :ensure
       :config (ace-window-display-mode 1)
       :bind ("C-x o" . ace-window))
   #+END_SRC

   Do things with helm:
   #+BEGIN_SRC elisp
     (use-package helm :ensure
       :config (progn
                 (helm-mode 1)
                 (define-key shell-mode-map (kbd "M-r") #'helm-comint-input-ring))
       :diminish helm-mode
       :bind (("C-h SPC" . helm-all-mark-rings)
              ("C-x b" . helm-mini)
              ("C-x C-b" . helm-buffers-list)
              ("C-x C-f" . helm-find-files)
              ("C-c g" . helm-do-grep)
              ("M-s o" . helm-occur)
              ("M-x" . helm-M-x)))
     (require 'helm-config)
     (use-package evil
       :config (dolist (state '(insert motion normal))
                 (evil-define-key state global-map
                   (kbd "M-y") #'helm-show-kill-ring)))
   #+END_SRC

** Org
   #+BEGIN_SRC elisp
     (add-hook 'org-mode-hook
               '(lambda ()
                  (add-hook 'before-save-hook 'org-align-all-tags
                            :local t)))
     (org-babel-do-load-languages 'org-babel-load-languages
                                  '((sh .t)))
     (setq org-src-fontify-natively t)
   #+END_SRC

*** Crypt
    #+BEGIN_SRC elisp
      (require 'org-crypt)
      (add-hook 'org-mode-hook
                '(lambda ()
                   (add-hook 'before-save-hook 'org-encrypt-entries
                             :local t)))
      (setq org-tags-exclude-from-inheritance '("crypt"))
      (setq org-crypt-key "<<username>>@keybase.io")
    #+END_SRC

    Make it possible to tangle encrypted block
    #+BEGIN_SRC elisp
      (remove-hook 'org-babel-pre-tangle-hook #'save-buffer)
    #+END_SRC

** Doc-View
   #+BEGIN_SRC elisp
     (eval-after-load 'doc-view
       '(bind-key (kbd "<mouse-1>") #'doc-view-scroll-up-or-next-page doc-view-mode-map))
     (setq doc-view-resolution 300
           doc-view-cache-directory (expand-file-name "~/.emacs.d/doc-view"))
     (use-package evil
       :config (add-hook 'view-mode-hook #'evil-emacs-state))
   #+END_SRC

** Dired
   #+BEGIN_SRC elisp
     (use-package dired+ :ensure
       :config (progn (require 'dired+)
                      (global-dired-hide-details-mode -1)))
     (defun dired-open ()
       (interactive)
       (dired-do-shell-command "xdg-open &" :file-list (dired-get-marked-files)))
     (eval-after-load 'dired
       '(progn (define-key dired-mode-map (kbd "RET") #'dired-open)
               (define-key dired-mode-map (kbd "<mouse-2>") #'dired-open)))
     (setq dired-recursive-copies 'always
           dired-recursive-deletes 'always
           dired-listing-switches "-alh"
           dired-guess-shell-alist-user
           '(("\\.cb.\\'" "okular")
             ("." "xdg-open;")))
   #+END_SRC

** Eshell
   Put eshell on a convenient binding
   #+BEGIN_SRC elisp
     (global-set-key (kbd "C-x M-m") #'eshell)
   #+END_SRC

   I like the prompt to be on a separate line.
   #+BEGIN_SRC elisp
     (setq eshell-prompt-function
           '(lambda ()
              (concat (eshell/pwd) "\n"
                      (int-to-string eshell-last-command-status) " % "))
           eshell-prompt-regexp "^[[:digit:]]\\{1,3\\} % ")
   #+END_SRC

   These are terminal-manipulating commands
   #+BEGIN_SRC elisp
     (eval-after-load 'em-term
       '(progn
          (dolist (prog '("atop" "systemd-cgls" "journalctl"))
            (add-to-list 'eshell-visual-commands prog))
          (add-to-list 'eshell-visual-options '("ssh" "-t"))))
   #+END_SRC

   Profile:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/profile :no-expand
     addpath ~/Copy/bin
   #+END_SRC

   Aliases:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias cp kioclient5 cp $*
     alias vim find-file $1
     alias i yaourt $*
     alias j journalctl -afb $*
     alias sc <<system_ctl>> $*
     alias uc <<user_ctl>> $*
     alias ytdl <<yt-dl>> -a /home/<<username>>/q.txt
     alias fr free -h
   #+END_SRC

* Ansible
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ansible
  #+END_SRC

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package yaml-mode :ensure)
         (use-package ansible-doc :ensure
           :config (add-hook 'yaml-mode-hook #'ansible-doc-mode))))
  #+END_SRC

** Inventory
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible_inventory
   :END:

   Here are the hosts and their variables
   #+BEGIN_SRC conf
     [arch]
     kub ansible_python_interpreter=/usr/bin/python2
     ton ansible_python_interpreter=/usr/bin/python2 ansible_connection=local

     [all:vars]
     user=<<username>>
     home=/home/<<username>>
     h=<<storage>>
     conf="{{h}}/config/{{ansible_hostname}}"
     locale=en_US
     prefix=<<prefix>>
   #+END_SRC

** Config
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible.cfg
   :END:

   Keep the inventory here
   #+BEGIN_SRC conf
     [defaults]
     inventory = ~/.ansible_inventory
   #+END_SRC

   For some reason ControlMaster isn't working
   #+BEGIN_SRC conf
     [ssh_connection]
     ssh_args=-o ControlMaster=no
   #+END_SRC

* Firefox
  :PROPERTIES:
  :header-args+: :tangle ~/.pentadactylrc
  :END:
  This file is in vimrc syntax

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(use-package vimrc-mode :ensure))
  #+END_SRC

  Use DuckDuckGo:

  #+BEGIN_SRC vimrc
    silent bmark -keyword ddg -t DDG https://duckduckgo.com/?kn=1&kp=-1&kae=c&q=%s
    set defsearch=ddg
  #+END_SRC

  Use backspace to go back:
  #+BEGIN_SRC vimrc
    set! browser.backspace_action=0
  #+END_SRC

  Don't let middle mouse paste:
  #+BEGIN_SRC vimrc
    set! middlemouse.contentLoadURL=false
  #+END_SRC

  Restore C-j for Downloads:
  #+BEGIN_SRC vimrc
    map <C-j> -ex dialog downloads
  #+END_SRC

  Bind stop to an easy binding:
  #+BEGIN_SRC vimrc
    map s <C-c>
  #+END_SRC

  Make scrolling easier:
  #+BEGIN_SRC vimrc
    map <space> <C-d>
    map <S-space> <C-u>
  #+END_SRC

  Pin tab:
  #+BEGIN_SRC vimrc
    map <A-p> -ex pintab!
  #+END_SRC

  Move to first or last:
  #+BEGIN_SRC vimrc
    map <A-!> -ex tabm 1
    map <A-$> -ex tabm $
  #+END_SRC

  Fast switching:
  #+BEGIN_SRC vimrc
    map -m normal,insert <F1> <C-^>
  #+END_SRC

  Don't raise these openings:
  #+BEGIN_SRC vimrc
    set activate-=diverted,links,tabopen,paste
  #+END_SRC

  Open help in a new tab
  #+BEGIN_SRC vimrc
    set newtab=help
  #+END_SRC

  Keep hint keys under left fingers:
  #+BEGIN_SRC vimrc
    set hintkeys=12345
  #+END_SRC

  Make hint text readable
  #+BEGIN_SRC vimrc
    highlight Hint -append font-size: 14px !important
  #+END_SRC

  Unzoom image:
  #+BEGIN_SRC vimrc
    map <A-t> -js content.document.toggleImageSize()
  #+END_SRC

  Show link in commandline:
  #+BEGIN_SRC vimrc
    set guioptions+=c
    set showstatuslinks=command
  #+END_SRC

  Scroll by one line:
  #+BEGIN_SRC vimrc
    set scrollsteps=1
  #+END_SRC

  Show feeds first in pageinfo:
  #+BEGIN_SRC vimrc
    set pageinfo=fgmse
  #+END_SRC

  Use visual bell:
  #+BEGIN_SRC vimrc
    set visualbell
  #+END_SRC

  Bookmarks and preferences:
  #+BEGIN_SRC vimrc
    map <C-S-s> -ex bmark -keyword ac -t config about:config
    \ bmark -keyword bgp -t BGP http://bgp.he.net/search?search[search]=%s
    \ bmark -keyword v -t valsi http://vlasisku.lojban.org/?query=%s
    \ bmark -keyword c -t camxes http://camxes.lojban.org/?text=%s
    \ bmark -keyword yb -t youtube https://youtube.com/watch?v=%s
    \ bmark -keyword cw -t 'CrawlWiki' http://crawl.chaosforge.org/index.php?title=Special%3ASearch&search=%s
    \ bmark -keyword dw -t 'Dota 2 Wiki' http://dota2.gamepedia.com/index.php?title=Special%3ASearch&search=%s
    \ bmark -keyword dr -t 'Dota 2 Random' http://dota2.gamepedia.com/Special:Random
    \ bmark -keyword df -t 'Dota 2 fix' http://dev.dota2.com/showthread.php?t=28814
    \ bmark -keyword er -t 'POE Random' http://pathofexile.gamepedia.com/Special:Random
    \ bmark -keyword lp -t LP http://lparchive.org/search/%s#results
    \ bmark -keyword ix -t ix -post f:1=%s http://ix.io/
    \ bmark -keyword io -t ixopen http://ix.io/%s/
    \ bmark -keyword bb -t burnbit http://burnbit.com/burn?file=%s
    \ bmark -keyword b -t btdigg https://btdigg.org/search?q=%s&order=0&p=0
    \ bmark -keyword ba -t btdigg https://btdigg.org/search?q=%s&order=2&p=0
    \ bmark -keyword mt -t metasearch http://metasearch.torrentproject.com/#!search=%s
    \ bmark -keyword lf -t last.fm http://last.fm/user/hdh0#recentTracks
    \ bmark -keyword m -t zing http://mp3.zing.vn/tim-kiem/bai-hat.html?q=%s
    \ bmark -keyword ma -t artist http://musicbrainz.org/search?advanced=1&type=artist&tport=8000&query=%s
    \ bmark -keyword mg -t group http://musicbrainz.org/search?advanced=1&type=release_group&tport=8000&query=%s
    \ bmark -keyword mr -t recording http://musicbrainz.org/search?advanced=1&type=recording&tport=8000&query=%s
    \ bmark -keyword ts -t 'tor address' https://atlas.torproject.org/#search/kub
    \ bmark -keyword gm -t gmail https://mail.google.com/mail/#spam
    \ bmark -keyword w -t wallabag https://framabag.org/u/<<username>>/?action=random
    \ set! accessibility.browsewithcaret_shortcut.enabled=false
    \ set! browser.newtabpage.enabled=false
    \ set! browser.privatebrowsing.dont_prompt_on_enter=true
    \ set! browser.sessionstore.restore_pinned_tabs_on_demand=true
    \ set! browser.shell.checkDefaultBrowser=false
    \ set! browser.startup.homepage=about:blank
    \ set! browser.startup.page=3
    \ set! general.warnOnAboutConfig=false
    \ set! security.OCSP.enabled=0
    \ set! security.warn_viewing_mixed=false
    \ set! layout.spellcheckDefault=0
    \ set! middlemouse.paste=true
    \ set! ui.key.menuAccessKey=0
    \ set! browser.anchor_color="#6c71c4"
    \ set! browser.display.background_color="#fdf6e3"
    \ set! browser.display.foreground_color="#657b83"
    \ set! browser.display.use_system_colors=false
    \ set! font.default.x-western="sans-serif"
    \ set! font.minimum-size.x-western=15
    \ if /NT 6/.test(window.navigator.oscpu)
    \     set! font.name.monospace.x-western=Consolas
    \ fi
    \ set! extensions.checkCompatibility.nightly=false
    \ set! extensions.https_everywhere._observatory.alt_roots=true
    \ set! extensions.https_everywhere._observatory.enabled=true
    \ set! extensions.https_everywhere._observatory.priv_dns=true
    \ set! plugins.hide_infobar_for_missing_plugin=true
    \ set! browser.download.manager.alertOnEXEOpen=false
    \ set! browser.download.manager.scanWhenDone=false
    \ set! browser.search.context.loadInBackground=true
    \ set! intl.charset.default=UTF-8
    \ set! network.http.pipelining=true
    \ set! network.http.pipelining.aggressive=true
    \ set! network.http.pipelining.ssl=true
    \ set! network.protocol-handler.expose.magnet=false
    \ set! network.proxy.socks=kub.<<domain>>
    \ set! network.proxy.socks_port=9050
    \ set! network.proxy.socks_remote_dns=true
    \ set! toolkit.telemetry.enabled=true
    \ js services.permissions.add(services.io.newURI("http:depositfiles.com",null,null), 'image', services.permissions.DENY_ACTION)
    \ js services.loginManager.setLoginSavingEnabled("accounts.google.com", false)
  #+END_SRC

  Strip tracker from location, thanks to [[https://userscripts.org/scripts/show/93825][Bruno Barão]] and [[https://github.com/5digits/dactyl/commit/7a1ffa5b555399c5d0925ad599e2640070bd128d][Kris Maglione]].
  #+BEGIN_SRC vimrc
    autocmd DOMLoad (utm|wa)_ -js win.history.replaceState("Remove trackers", '', doc.location.href.replace(/&?(utm|wa)_[^&]+/g,'').replace(/\?$/,''))
  #+END_SRC

  Facebook
  #+BEGIN_SRC vimrc
    bmark -keyword fb -t facebook https://fb.me/%s
    map <A-s> -js dactyl.open("https://www.facebook.com/sharer/sharer.php?u=" + content.location)
  #+END_SRC

  Feedly
  #+BEGIN_SRC vimrc
    map <A-f> -js dactyl.open("https://feedly.com/i/spotlight/" + content.location)
    js services.permissions.add(services.io.newURI("http:feedly.com",null,null), 'popup', services.permissions.ALLOW_ACTION)
    set passkeys+=feedly.com:vjkga
    style feedly.com <<EOS
    .websiteCallForAction { display: none !important }
    EOS
  #+END_SRC

  Pocket
  #+BEGIN_SRC vimrc
    js services.permissions.add(services.io.newURI("http:getpocket.com",null,null), 'popup', services.permissions.ALLOW_ACTION)
    set passkeys+=getpocket.com:aojk
    style getpocket.com <<EOS
    ,* { font-family: sans-serif !important }
    code, pre { font-family: monospace !important }
    EOS
  #+END_SRC

  Site keyboard shortcuts:
  #+BEGIN_SRC vimrc
    set passkeys+=tumblr.com:jk
    set passkeys+=mail.google.com/mail/:'#!ms+-/? jknpu'
    set passkeys+=google.com/contacts/:'#jkoux,.'
  #+END_SRC

  Switch to reader mode:
  #+BEGIN_SRC vimrc
    map <A-r> -js dactyl.open("about:reader?url=" + content.location)
  #+END_SRC

* Secrets							      :crypt:
-----BEGIN PGP MESSAGE-----
Version: GnuPG v2

hQEMA0GprIW1olW5AQf8CO7yiZOkTf4QuxUbwwnV8kPkOXNfDLwGBwLPlHF9+Giy
6F9Q6OPR71Vs5QACm+7tQI1a9qXszqYyWSMFCvXwObjnPezehapt4xs2cmIm73n0
R5Mecma1afJe91Rx502PMIcURFmxxk7osXkHvUxZF4eQ/bw0P9ayFUwLNEUOStTY
/p/DcyzFRO6vXhbQnEV3kE7BhSkas9laUVUw1WjiJxTYfCbEJOq47ns8syd0iEW0
dJRUgJcSRyD9EfS90vpoPk8kdtgBiXFCCrEKIv0yZephpdrDMiXNJqLZAsj6+K58
WS08RF+TwvMQM/ascpTfBn/ZVdd7cytXSF4V5zyt7dLtASIRBGCuwjBv62jBXJ72
6/LQAoTXfLg7lPCtUtTShqL4Z7JZMAW55Mop19QgChR+zLW1SAKqgNGyWUAc0SXH
3PO6r7YLT6XMwKscAxYhMGe7CbyEZvWYApXsTGIuBREMZR3LU/6n2Yd/ywJIqnUV
cqq9p5oBu6e4FDtQ1uGClHX0DRwVTFEL26HyfT4zy44pPEwnKNxyN9vzPNAF5Djg
2a1j81p4I64ddC7Wj0iTjSzvHE67MewBHplwBsg+0XTzWpRLl7rQGJfEntIeHr9f
1ngHJ4nhWNVo6n9pD2V3G8kFXsRBa8tapynmEQVihyRHSU9b5OjthLsde4dOo6Xx
MRmYUYU8XcAuKFKsezkK/evMlB375d4tf7iTbIfxJC0+b9UPBTa41758MFqc/bwh
xuMeh+Zfl2+rm/wscvtp0OvBSQ/tX2NYb4LoPMN5zz9xYE/Zw2BpF2lJb/Uzv876
baQGNzSSUYPkKg7O0k/831ge0+/0s8UhYE7g4XR9LCGHsjT7NM+rRp8PgPNd1o5Y
8nDaAYob0Y2MDCSMFrVkppuzgZbdF6wLQ4gtCs+nwO9/++ae4mwjj4DJA1CkzL2A
ngqag68qA5zIF/UALvafuOLm/fUrhvGJL2ZWI+OAMyjGlnKmKDrnNvMAMb1dVuHo
ovlGV0+zLWevqErSmVWPFF6xOn4IvfdTT/s+7AFfTHbH1azSD1UIpaB2C0hf2Ms6
DKPqTmD6A1tdfRLZImQzhnT63U0oautMy5p7DAfCbcE8mAhuWL1jdsMDsRFjGgCd
h9toWLsXWK2few7amtYvBN5r1DBRumrnhTIeBytKwYjFZ01hQe5DmWJBF0qM0u4u
bDAT+f7lSe4EUCUg9Yn4xlgZnANS/u8xMW9eZoxgpXeqMG6Bor1vDcark4efGG5C
llLqz6KFfJcjhp/d9dTUnCm7We4Xbi4/2heeZAW40k8H0GksUcYd1GSlCYOqqlDr
tIE83MfTtF5xoUh9ptIjuks6shUhBtLAIBUsSHmLi+JNMxm9lIfqazrrtCH3zxnI
0+EPADP2sQoaGe0nDB4ah0bDXwuUVrgDsKsetSkvHw4qJPqa4n6kDjynnIqTocle
fMq1MYjlAytrk9wG52xOEl9JlHyz/TWZr8Xf+6mFQnonQfguUh1lsiax/IacShVw
D2aBZ+hKIcKDUgO4PldMnAj1nGp5bXvHxrjOP7m5KAzurlhfqptJOYsWGeRkXuln
KsvlQhxHcweFl1KGC6RkDLanKoPXBP5mvXlwAyE2ZNmJNgW4FKcAgDs7uGUobqn0
Dzpo1o8U2k/6C6KDhkEg/3ZCsPu5JIuqK6mvC89wMMGR5XpO3B8fqN22Msw0VV/y
iIDNJqxbiNH6bXES3p++s5z3AeeyQQ60Ahpu94aQzK/D0Gxn1pFnWnZ6u6axBcJ4
MLTQIBKKTpUdiVRzFtJPJjwe1JFNHgJj+QXj0iKDDd0/WOapvppzaVwP7tVwgqrh
f5GCLPhl8UhEhH0KLV284u9wOBAVvzJe69+s2X+Ri/zmL6nGoqOi+8a3WvgLHWlz
U5f5rmgTTk0hottB9pR64DM2jFrFkC+YRfPgFFi6WBgWj2rCzwr2fUbz3Ud/hRAY
yIQ0F18oxwxgo1d+DYZoYGupjG54I+F1Nu1IjyJB6B3M7xTgirMo4PgYGwL72P4X
P1esT4kUrxX+Z+1AFcOzywpSCntnlEksML8gLkxN4dfmUbnhrSvFUiakGsjIdC1+
NDzw78bpNm1xxZfN1x4OfQko/6ZLJmb4k8ZkJfXAfNFKn9vPkV/Ky8x4B3xTRTYo
7xifRR1WAyqwPJDyqsxLzQpJQyD2SGQsyhuWXqcpAC9vDAZNbNKHfaV9jHAfExGl
3bFQfEE2MJ291qATziP/iQIxobF8eW6dlC/EFZwZZwt2o33GrMVSeAvVsvqWmqkO
OztdeiXO5CRRHhnN/5SJV65FzVzOP9johiaE7u35cPInnsOw5KvlEEbLZTSxzytn
6EVeo9Tuh2oltA9zwl4ylTr37ySOYXznyPCVAXYrT9+YVmpfYxx5Vktc/OV8BPYF
FmlatFOC27FVk5JELt3HipLCVnUAB7Gw2UDOYRug7CyAgjBTrF3fQp/xTfMLmrOH
e4WuhgGoyr1z60/Dt1XLJeC9r9yhkNodun0Czd3P73NJz8n6mLNd+C/mVuqP4pGf
3U7wplvJ8C7qcHJ1Z6EpreI73Wi/nGaAmYb7FhZPtO4ybolUe8Od5Wv+EzS4XQWZ
JUgCpcD2iVEJ44FDN8vJ3K3c6CcMa0/q/SHaUcFQcdhok6NDR7DGaOSKXYZyaFDA
E9PbU2LgKoGPAql8kamGphH0T8pQhWdx1LpB2shEU8t9LexYdCZ+yMZztcichiC7
SSQcVkbdCsYmizUe4kNZNfo7J0tj5W5RRTz1rf9yfe8TE0Y/4ZAWTr8B5Hot0q1c
NWH5LsjoGRY0fqzVStefN45E73hB/LpA4HhV3vtMCcqk3FKG+ZuU9no+ABN2BLPM
L1UYwYaZ9/wfNHrvs8AY0RBaoz53R6ZSPOeKb6AftowqTTHdB/4I96xPnYZAKX32
6MrAneReOYgGG3G9DBFAZPtxRt5j+KCCTfHZor2zGgwnrWfARL48blXj73yvFx6n
74U8JyZdWZ+rCur6fvSPB6KhzA7fej3lJ9YpcSMVpBRYBi9BGL/VRfjyejTzhK5L
KIiu5X/fsxS+kpm1BZlW3GgiDm1TveNn2qAYlAy49K0hJVxTz9WTusVWFWWjRg9w
DIrpcfbX+qrG5vCn5reaVZ0WaBrfhPd8KEw8vnlpveZye9zjb8QIm5Efgie6stlt
cwYZpuje7k3ZLOkYn13RzBo89GFJLZJ3lrXeAlDUI6QAoK1xeIHO41pYBV2s4EhB
0e+r69gksIkJHSH6fshAZdWIkq+bv8HRhZbu+/Enw5VaFeTRw3oXjTZEY88WhUeq
RfUAzA/jOjjhuctDMkhxTgzR2KnVMgyR0dTSYZqy0VpVQYXcr0D+wxYA2YFq0qzB
AGmWvTb/cCieiXk8ThIDDOvQQDTbDmZui0Qmos57kKU+0KKbFAATYPMapq2jnuSp
O274Tzy/nshZ3pROADNoZM6FG7LLBJfCy5VxozhQoGLJ52mqj3ouxtbIm2/749Vl
ElHhzw99XFKuQpMIcOrAIGzaSaokLah+0lKp0l/DAmHknPA9ke3bnbS9HxW8jdUO
qn/8vgKU+YgirvHS4MXJeUGd20UA62B+/9XqyuWDU4FAq9gSlP9SvLsQQ+JCJc7I
I/86Jtlxra7oCoi/8KnITCAZ59+6YgDNG5jio3H3Q6WtJQfxZqXv/biiuFwCcdit
foyjsyWmATXRPResqjy+gvwJ/beGZkPH/xSwJWBINvpUSlRtu9b4j5WR1izMCZ9E
R98kiqbc7yJKOdclCZ1U9yyILH02wbMYWOqwmfrUR1j/gYNG9xAx8MQJ5fI5wDdY
Ksz97J6D4DlDNy/KgunhzaZamYM5hswbctFSYnVOnRCNcyT05k1XhS1bjmPDVY7l
9FJLbdXlVTUF9nExyi4qtBN8pMcxbOMX4CvUzxUN0TeLFiLscWw7ZeA/RMRaQEMl
MeJuu7Y7VUASSHBuBdWnvNb8snfof1qOyAcWbQBIHs7rrG1lw9Irn80i8zUuLDiR
UPqSSPoY8g1bWY3wG24DSHskTuqyQCXKsph/6Acip2rNnoIkGRlD9RDOkQk6PPd6
nfQNGpzS4wXmBpIsazsWNOskfyvFovWlDhtX9/1Z/hyTV6+moQ1PqeBCNE7Xzbn6
OijVwY00B95iXoCGHmRHvrwa+bqkhxaxL/en25MFn85skgOTXY+kGaIosAewQgdc
jhPc0veIJjmdw84abIJHOufPJzWnR5ZVv47aDwTo4Av1eMQ5/XdlAK6RfPl4mgER
a7wCZ4ydk2ld4C5itRx5RbKloHbapjpznHG0F0sp41zciQzR5MK4Q7Pf89xpHXfz
zW0Id5MUT2zeBByQQ1vFQQC9tx4JrCJDLsOtw44GMvR6tLUahq3UJp/3sk/mRa4H
PNYQBbni3oRtpf3lnBSrp7BliaBK2A/w4lv3GJAmR1AI86yXaTH1BkxeQqRdTb+V
TV29GEn0BKSrpdWbNxFUgunA1UrRD64PoryrTQoeJdwzoAbRmV+XQ7A9kvJ+2X6K
jRmj4i7u9hJ2dRYDi4nBtIgK0NaDj0SF5vY0NKeXIQxDt7EVBqij1quYSeWfyBwa
7DhtkwSAeI5/a5lsFF3Uu8nu67OMNHWw6puHfTrm7Hy2Fg2GxAuTQzfZcH1HbfTL
CbruILraxn87OaqX6GW/+pKcs/t+mov09VN0IB5mRLzRjxqG2sTT2Ck6XbBgtYsS
RCY7KPn/bbEIhYKZNmZ+q+cMgxP6NR3Z+djBWRW2o9puClhXtqPR3DqMTaHNjSgY
vw5AAY+pVNtcUl/ELKPmk+iqXA+xJsSm44RM65VJrGQGMPUgiSA1PrmzwgrqmvIr
RM4DgH84d+YOMiuHnYRN8YU6qPiP4B+k610wqx98QhCbP/hX8fp1B3qV0blIGCli
aaFi3JEJPJzumX6U+VCLaVeYfBXKjlh6D351KTOngcaT0VZRpD/mM/9IbG6vkuec
cQuCeVC4hH4wA5VrQRbSPwte1emeZiwfdNSt+X0nABsH3IeHfy7PZeJQ9CL1+rfG
jh6qTViRxHfMabPoawqxfO25R5aHqG0LEtaA6u5O3zlATb9tSNF4wh0sM04ak/az
dlPaSFbuCkSrS3kIuZ+WPBk3JRGgcVfNMg7m/D96cKU5rp9Wd333/QuYEM5Aa5S7
fes55Q6EJMiwBWPvMnzjv7y/5g9CeCW4XEt6rDDbKh6Z3tW92tFe8rV2TujpZ5ru
pkyIN0HmdYiw4q1LkDKr9OqZgo5HZ563+U6GWQdX8w7DEqUWDNNNx3IVC9IFkJvV
UhRRSiGcMvHDFSVM7KaoxIoi+m5hetMTd4Wz12gFvGCkhR0wyYbQ8LQOGK1V6SKo
b43NjxVWhOHW29TVd4Zi7Y0wsjIEFeBPz8n5hhTFgRhHOfpadaTXGnyoTYVjaQ2h
1yVzrvxkcffW+2b/NkZgPsFIsPmGW2nFRVWLoXl8ezEFe3qNvkkrChy9ihRePAdr
tgJps6h5CryF6b/xPSpoAxwA+G+3rMP0+mmkcpgC0a8aZOoufxvmwVn1I8RI1IWQ
IVatAEGjTob7wVL3GhgKNeVRslw0RYssM3HQa1zhP0boNACWxoxh0O4BdUOGuVCl
j4Ppp9XRqMsmckzjWruGD4lyUG3ZaVXdtLfax92Fdi2V98JekY/ftRGX0Wg3Lgok
BKnq93ypcnBsy6dFvVpWZJnGsgmg4q4HQ94qv+JnAdHgM5cbM7VRTheAhJdLpf6i
E8dFYkXqZoqzP1EK30r4AF2lt+JjS9AbBYa3Xs5ZeArOFhOHJsX05/CeeXYjO+5i
3AwdnCOS9wk/z3RWEAOkbWvIDWbUk+QGd8ntzEHAeuMfPoYPnfiHVlNGek2BESUH
4h/H5/fHum3I308b2foOHWQqnZ+cDwUSmsMZTZRyhNlPsCSBD/Il7wn6PcpmGG5s
WMPBxnpPbCT1TOZX1wj1rC74XOXCMsQ5aez728vDdsxk16THbduExwBvWb5CnSR+
IfV5odWU0IlebhhfcgDcdyu8J+l76ZxGKnFDcOLXpwvlRnswEi3gWL3CyoMXAwOr
Yg9OkprYaSbjzq1brQMH4l6LUelf+ZR9h1dw3HRdNQchoPu0ypBrGoK7uvC0YeFr
IHQ26Jxmj/A98FduQhkxvwb2bciojDWjl6ld+ECeekK6ki8sYBfSLyFXlOu2NYeY
UA7PBtsWTs0sOVwc5enxxb3o+tPdWowb031oNu7tTlcQbWKlbz1WwB5GhDtWX2FU
RDPkHNNtwxun2maRzcC5TE4MrX9eiWhM6IGTiZf7wA75pWrASSHudB4u5jJlGARx
WednITAL4TgBetZJLvEOSZaw8NZfW+nCbuL3rcwDdAy/AAflDZiQnmsfFPeR9676
SrBY3S3jhyHCdbsyHidBmFzfUMVZlvkNNOIZPQbnYHP7pnEMVFJmBMAxBSDrea4Z
gPfuiyZ52xIm8Job3zA7yzdZjsFXI5XuYdjo0eahh+P3G5mHr/8Gvpa3pduRgoob
qbuh9ZWfbvJ6LNUP0S+3MM/HPqw8R3vu+WWpE49juvFl9IEyavoMRSoDwmPpd7OK
eTZ9DOHbIoQfUHyzALtxPIzLCYmXUUbMUEafUoZ0v8z1HvhtnS7YgGAyTvmv2i2W
KFtl22GuzxkgcQNYBeIPbTqpAZWR1Rps2apnTFXmq0i2PeM0PwijE8t/BS/KPh7A
VLEvWLoRFFDrsonIykEUfm+LbeCIQIY4Vr0UEevkxkMjNRsPF8SmKv2BoRShZU5D
MEucPQCTes0K/0zLatydgJWYoxSobVGnh5gAC73h9mTSvXxn88w7c4boyaPME5PB
TowU7Sskw6E/N/U53/RgL/jXJ8fMuouOUD+vCM9ficott4TVwkbHbPN/UsjMQMM4
iaVvbarSbqziF9xk7E5eOg4ySbvcXUlO0+02ZpB4X2+fWLBkXUmJpM52LUU/38fR
fKFbslk/amMQiEeUr+xfv7RVRGT+KC+rT8FRvuvxKieBjTHF3GH0rVJG8UzAtva9
P6QOSQ6JqPOsbexOiWL46K3DyLj160EeUGngccC9V9YzzAAdkNG99W9zQ82ZYT0X
VHYKQWLNlGk1T8DeEySfd0MsuglTxl4gwJXqhNARrQsSpZvi5YayC1Oq5n0leOgr
opjvoPvkPcrC8/gF82i3LePZGkpqUXn+44eyYCB52jWTOivNyTVdKmAR3D3uvWpb
clImeZ2+K8Z+CU7YqlGS5X4Fe2pEbXtUL/2dn0AJHxdVRrzcmjLW9iWEYY5norf6
uUVp+Ta2zS1J2Z9+eIj68lg3SWUEtzXYcpZqxPam3v0ULmyQZzHZQlZYy5IFrQb6
/255fcIP19CjV8Wqipj2RoEBIkPrTMWEiBEK6kJ9l2gfU5vCcTrvpfMG5syS7vNM
B0kmvcQNefj0VavXmCzZJwaWjVq+8jGLGVHqQxUm084R5lnhlxGSeVvgeO/rNpqS
H6k7MEfCNMtAlIzYrxcsmxrlB27HVZn9ciBIs0q077yyteOnWjVEJaxlSHp9Jzdu
nsNY8DotswByCLS6z+sLX/9kHksn0hf8DXo72YXoh6FU1OHQW2SW7za2QU7BNyZE
eganfV7rW7yFmKMctb8g6MTGfBSlTmKEc+QMZn4x6/OYcTdjBKvFz11YuSqLFTPC
ul+gZDGJ8r7B/Ton3zhaY2buX1pP7YTqKb2bo3egMVaqTofYPLN7U36l5fXBD30/
eBoGvYglRfxP/UE9lQfYyVjlnH/LXndysyWvKRFSAxciF1RN5sYhHgGt98fl0B22
mCLV0nR1gO95nBNu9qG+vQLwcdiM7XLZhfvnxuSh0/W2/J7iHT4Fn6B13BMN80in
ApLmO5AVvqSSkdgw23RoTiLZ9YK7iP93XZxCFIn84IoN0if0xSumtV0GcUu3czue
BUFlpDlCGjIo3Xu28Nxsru38zg+WaCO+juxfz+f38s5L/H9+rgz3coVN6qWSgCA8
yRXPzSKryKEpSOI9YUjKQ4x3n484LLqvR+gf3c/HDbVKaUjVEdiCHyB3A6DeH6Cz
/QyJ/hQSkupNriVyK0DkDXgE0zxj4LXa+UZEO6hFrDRAxkSXvz+A3+6NqC5u3Dg7
o/cvMVcpcBW5RQ9trT9j+YTBsZAsOW8/4PtEqs3Wr9lvXRVKuoTSW9xcviOWILQA
xu+SzXriFzOYJdW1L6IeoimdB7muJZlzT6fo9FMkDKvANTOMFylyo1b/30pdw/4l
PdEvguwAPCOs+A90wB3ryPbaOEASNbprJCYcXqQkeRN8Qo/MT6Eg0H1tZ6ZKq4Vg
ZWHJEfAZPSxHCkHueJgNupiEmwccypTpBaSzj6nyrztUxqynlsLOU3X0/epNSHuq
LwRrc5+pZF/ek9efKAzOepX22c0Cs25ZzU4PKGYA9NR0GFdqlQq/+HJZAyZaNpAr
AOIK34t/NGv/o1RCUU50kmg27l0Cm5AzxbD+l9tbZdsmSdihphLSqqzrswiztmua
ZU7ykovT1m1zbtx9J/jJLeX0BiMFk5HxdsM9BTtffzuwxW1CNN9uEXVZteC+MVtK
uHBXjRDmpaSRDRJtWLOvZB0c2yP1cBl92ag4nl0jX7wGMffak8VrVM0tXMoaZ4uD
Z6xb92/4/YsCN4gmLSiErFcLMOCuVC52qwtztxf1aw3C/CapdGbDFimKyNk8vYVW
3meW0Sdx8YenWTwsY5AqSnLuS6ZkysHOWO3y9K8yKRUkMfxN4NWNGYpyKZ7rb2uP
Rro1pgPZGpITvWc7nt8ra47Z8vLFbS3ByJ7xg/EgEd6HkR0w5g+IrB2MA3N1I0Gc
cs+Nn9fOrHMXhqL+AnF/HUxrVXTrgQu2oDD8o4LbS71o+TidwzT/VWLp1lU2Qdkn
hHWNuSE7SBxJ7d59QFzKjghxoHno/E6hzjufepNeiZyj5xX/dK0V3wANVrxWiw/X
1LG0PW60/R4upfaTdHn0qqFiIJRQFIWl7C6SDyJBJI3kVty9PcNfhjvdkBPqZ1ry
hiIn/h2caomWNxtx3jdfy0r+y4I56kt7KWndASZzd01mnx3RLWzkiyMY3UChikEv
0pCoKSFdz977d3bv8cnOUW3xiT0E3M0zqIl+alJpqba80wgISxM8grpIcAg3+OVO
wPZG+/1WwUXOQ99SRvvuD5jMe/pWmlhDJ1EBy1xABhyGt4UxAUEa6lnsYFDvWiwk
Wt28ztLbJblNVHlLpfMZhn6FJOEV8XK7jmcn43mt8yjOH4y8A/c+NsPTmYRD8GiV
Ilg8w9OrUrryQ28Z72Z0pmRg1eVLvOMYoW7ji7urtNOZCYz3/C1Ui/Ip8vZ7mUiS
YVAX+nkF6CC6niIf4L3IBw/5yv0Xr30mo2zGpD5Rca/I+JRDIxDzMLE6n3ev5qFY
Fc8BqX2w5R5/F7C4WWt2E7/fvIulO0HyfQbQGeRXSG06lJ2/+h0LMLXmuDChjVIY
L0OKBufIIzUcIKtuz1BQ+mauOAuBXNIoEL0f5MLrpSBG7Onue6RXzOlv53nA0V/J
YprYL2BEBfWgqJpvUoMM7Rhv9OjYDIqyVu4qg2Dclj476FaLTMCh9KoPP4JEEpbh
7v5geBahHPxRkR1+MYHo4+FBceDSBcNhKU4nlX1v1PzQ5lBv9j9c8YLrzlalagF5
9rJ27Bh5Z65ZJGELpkI69hxXGkLdc8V6E2b+uHDlYdr2TkRnvwRxmIdM2+kl4mtb
gx+RqK0DR2ibavGTPDN6anLgTmw4GJSuODCM7JhccwHIWOBqXMHxb87ro1/gjEJ6
CzeXmN2/MiaXoLvD/4fxGb++mxx0YG25x8efo0ul67TMkcGWf1JR17tXkhwZ8nEe
ilHbWmMUEyXwPQj6QuMCoYasVnxZB+ni/qKyio5tSUvgutbK6+cWyrcGDC4XJSEZ
KJvNXFyaBm2KPjEdjYmFc9qjZatWMkVWbP7wR5G8EcVCLF5TMrO1ykXNwK5YjfT+
b11ouwleUkNumN+8Nt+9W5sX3ey0CFCSuzqHQrHwGfe6IOThdAGMMtLWgQJyZU5E
QhKaLD5agk9c2GGiXSSj+2rIgr6Ct6zaCGYutRGFD8HVBWYJbjImsgtUppTzAVJr
VubaxITWD/cqhWMMDS1BpMbkSVfjjP/0so7akrQFvQxRzKEDO77A3geWJpANY6V5
UwMhuKvw7ouzigJCMiBJw2ArmJdfwZoOeJvgVjNRg9uxKuRxfzOGbA/VBYcevLZi
cuvgGlCRUD1xM7tqu9dQPsk87bRcW1nthzC1DXUi3+PWVJnMOl53lYHrhPsT0a+D
GvaURmPM6/F3sDN+mqoJ2qS0cyef1uAzOKbkxWLdplUc86FRzOp1ZrYToM0FRHkt
bLkoU125ciCSCRhPXrUNGgSY2djjVrFwY8RHbQrPqRYLVz5IV34UbwSLDdCRKe9e
5HpbGAvU/G1KUadZYPdzK/HE2N8HaooCVJibH0kWS+joO5NPBhBNbhX27S0jKu/p
/hkab3V38oEmphcaUIjA7RmiQqJMZy5tHyM9W4d9LnQPsNGRWMJwZe5Du6kkmAa8
GcI3dLBy0D0+rY0Js2L0VXmhmqzWodhogCpFH7qWw0pIWApi/jGdxLivLLpQdLkc
avXvOkVWC2uSD8NdKwNZGGqVkI9zE8U9KTfTqyIT212gSU31o4XFkYhsZtRDDxk9
yw0XP9a5HlMRKNsjRBQ7KqktgHUpHxb5sNsT4P+M1rZIdilAqrWg5xe7hYYUpxD/
LTYg5ORXzLbQ8/LxDhm5QMAJe3F3O8WWTeCpMAo9i/d9qDlmsPR0PVTNYT4tZ7fF
rx+pg7CMcLgmU5HI+Whce5pNgP64kxaSMMfxOJUSDCHK1UKKONN9PkBR/CdRU9+t
/N4mjmSxQncb8qLGQNBZwjgOkIxn3MAO6/9oJrm0u14FuwQw3xm4Fht374l9P3G8
6TgrHnSZU65yhRz3qckTFtjyhUrrVBDs27hpMDgRVJIV1PYYl/tcHsMV4J3ToRUV
c5+x4rwgN3txZVYnUmMPwfkO1gjllDIT/0Wiob8oLbOyEty1TCQ1kg3UiUyS++U+
XOtcEwq5RBWFKzfIqZaP+uLLq8AiqBEctAo2E13bezlxH/5mururUxK0MytmGMOl
Tf3hVEWBBZ7cUWuEZPAQPP7SQkZ0tWFWmyWDg+doUfUyChJNOR24w9f7kESeUq+k
2LRuFi52ypxqXwGnD8+4DNPXkTMJ/d6kriDugMxh89OlD9CmL9qlSfgpXhKPlzMB
B+Gi7b9feOfo6+Q5eBB3DyftZsb/b2TVcGsDedGhJK82UpqoOECJU/VJXB3rKa3H
x7Alx0c2Qexwt+awM73IFSnvdouFLWXCNByN/oIgyEyCkTdkQ2OXJXFcvqPl38q3
Yl3HXTI4X6XD2l8YjUzd5nuSpW1ZrrJLDJ2dwHnWsWX1n6AvVq32ALR79vnX8xye
ErRQf+/AhN92+b4xYn0SiXyHzkZcVq+KgpEcjFeZxkwP+GDzj82RKZVCVhYMU6Cs
OLOsKxLtejQI+eRF4YQHVmp07dD4xZ856ZndYHTrY3Kgr6aH+ZtexV/h23ufO80X
MpAaBqHGujAdJU4rGVnOlBy5LFk54UWJMH1ZWK1NzzVTnBw3DM3BLGarKL+J+ESC
m3K1rws2MSMXh3lniRM+KGPhfiBRVMOwzJxzZpAA2ANaCgMXcbM6zUqNDzC2qB1u
AIqrre8D2FXQYg/xs1bSxy9poBR1Bm55FDHuCEEw5WZSldNFoO63qlJHelB/Goie
NlwNnQW9L6rJ+8GftlP1qbkGbDGIIe3SPbPWX86psjXaKbKWytafrbqF+cRB29tQ
3i5RrrmgWqsRzJlGWXjDNMRHn1LBIjJer/j6IVGaGfD4jimmEtUJ+yU3BvA3yZzo
kTNjUtpAXJ3NgrNVIJ70o3Wr9bNZWjGnDihBURM3E3ptPa/PE69xkscjVICe8eKL
Sn5J7k71NElIpiOm9+frijAVLrQzLyEaFRtBIGp7WbzKPdH5ZqGbIyQPtMc8HJq0
teoPYvsNZWxlQoMpznlMilpQv45aU2i/u/yuMtt/+KRzzrwntuue45cQTndt9a9G
1GfDqj303Mo820JiOyyTpVOHOIFRP5ypps/z/YfwsB1dXPrXZRZWMFGjP593c/Sv
69f0/wIyWurI5o98hODNpVqqWLS08v8I4gdSrkO0gUgjGys1HyC9fl9gzKhS5idG
K4t4aFjxGzFn5DCRn7bmJznojn2g69VR33pGSuDjLmiqPFlmAiSkZVWISuH9DK2v
Iz7ZnqKdMwj39Nk/FQtsoPq6z6GfXdqYEfyC6pgyrlaGP3Rc59Y4ZcLvu5kzXXSX
yk9YRNW5IIXnpGA1kt284NHQCIxFuO10leGn5P6hQvw77EWkhTOgRwrRya7V/snL
BOPMssdzVsb0k+NVw6viM5eZS/iupuTX0wOgSYqj/+IqWphnMEY/+0pnH1Yb4XOS
XdUaKEYsNNMDKsZuomUkl6XqKXyHCRBXBolufTx8TdUMFt8B8ySmX/YzNFHSp+PI
e8qVrOO5qHC8fwilAPoelUhmhKFyz+YHK28zwKy/3S2ifKqPWFzWaNmnC5xoU3yY
16EHJjLjapgYYVCxbktP2f14mPvmsLWXxIE/SHQII5wZF75IOPzmTOk5el2LIJp3
dcG0stGA3ZLYUO4nlzFOvqr9I9vmjkldQhYAkxy4JYiYuVKUCEE6ybQFddJPlSqJ
bM+tfzShTiQzUaHATbK3BAs2NZtomkYz1NNXYBj8OzQ/osi8KxHtrMCA2sosKMxf
ix//aXiHYia8u76IFswvYfeMi8L6UstyX4wCtqAwKzTz+Z4tU8Szmvv5KixH7v8k
66xxTw6IPDralbDcJvMn/VD2sWVUcacbIJTPuKpwzlHMPI8CS00Ru54CHw0Tl3Jq
zAymavxrkCDtfyPFR5lLeumdvADsT7f5SGy03DNcrfXT93aFF3o3fSL/NU7bUqok
gGnYABFwvjnXo72bQmjEWC+zD4wtJlxVWNvCh6SLySN1cdlUaT3ro6SS2CF/1FGf
Jr2Ntxo7T7w96ts4Ek1SgIAnD5OikJEF2RO227WkKC9PTzOlqFe9onydzVHFNlpv
Wm0dEILsakuD4UMy7iKLM5gTGY+OgCik7IjQuh9wi2znj/IW05Ei+jZlr1ZByZ4B
Fj5HxJCBWFpj8BXm7Fmzo3HcAQX36qFdJrIgrIkD3nIQi/FpzI+BEHV5gjApUKWu
kt7Knk8Jl4nqGzRRr0dX8rPCkjGGpb1rLTiB+gtBdPXOogMqfsIcIOGwkOF3835E
NuLomxig/gZmVUpKGc4n4H3RRhr8DMgmjpxmJsw/dzsA5ibfE91MXyIafOHn3X0j
vZj4z7UJFW4pNPWBMtAMxd7z0vFX4eoSon4cLMLlv20hUHFeiEaJjggsfr7Kd65o
ZY0FnhizRR6PD3jpI9OPg0WdFjrK2xvtSIqVnogv+wIW3X8RXJpAAp080n7FRdmC
hj4lUTCRNQHYoiS5ypQHElU5Vmtz8mTCkCxIQPOw56S+Jk0HOUxDpmvL2C4Ue+zQ
mfmpduSyaZDcJOkltEANi1Ddry5MOUFr58RMK2u/2v3ym0FhiZ6VHKG4aigqv0+p
9agCwyfzFzDoxwa/x0jYwbbuADZC3tp9bA7+L7zGkouEAxmEBKHXqXKBVevn87Yc
xYiBFwS+i4YXHhBYdXTOC28cXvIYuR9jLvAx+HcTBd7R5USLUmc909u7ZLJ5U71V
yA03IcLqb6rgjelP4kSeVwo5fP8JP1V3aLz4nJ+5siEsk04hD0rbmTHTa/8agZn2
Llhd8+6xk4NLpZ/Dgy70LuFXyatBUycCTIm0dbLexM33E5pgK14wl6mvbk1gZvYM
vdppUB1qMOnN2e85u7w/PLnaJD66k3LIA4iRRI351DPrTabHUurSm19BMzvxrr2t
T5FhuqvqjZINIIww8O4mvCxATTVOCP75w18YhxYRy0YKKiqPuUDcLcaV0SlI6qOt
/PWNEmkv7nHKabV5MR0YQhRrRKVKO5bmY4I06u2sQB6417aKkUR3bJamLFoN1PKx
qMdUC66HtxC2KinL3WO6ePx0uPJF8SuDRFMQURNy0pSPFLHpou9lz5VOEBIms+cP
0ByrTGfyERpAcyxlztqQ4eD/s6m4A0FwuUQv8GSFTyiO9zFU9ksPXgr3Cj1FW4te
9uAxNvpTd/JYtDCI/GTLoeAAkhwMe+PevH5o8tApi026I+XewTIlEc9HpTX+BSKD
1diPp8BsA3woV0TmpceRWBT3ncGacmPqg/bGDeBufRz8GDvSSfaDnmc8RQ635WRI
mGbNk1QKbj1RX6GKEPyQfLcmF7Dhw7ZQa7My7pPmaUsFQtwMa+yK5sA38B9xG8B5
g7t4An6MY35xVbxbFYO2/eeyVjrn0W4Z+6j++VBYERyFyKsJ/5TZ1javZe98ukcK
Z/EP41Rsw+s/MaWcJho9nYt3nKZ0daj0L3ruuOPUkXuiw8Wb5Z54/l+93B6f1Yh6
lZZpDQ/axzubmuZonJ64NZaNlWas3rqLqYQfzyEjruk1y6Lg4avJOz/FMgGT8nWz
YpPkYZ1Op5pWPFXLyycaUhwEou0ORR0ZUWrmx9J4cR0YdXhumCY7h4R1KA/2IlUv
JXZhtWrriopUZSn8SWxBLEU1ZEUFme88FmpUywPKA1qWcGOqZ6SXdf9pkaZtq5cL
VRLSgOMs6vHFc/UNdkk+8+XZrklHrzjQnSwZAsp7qUvgACUUNJEUWudQc8iLBk9K
95k5+tyPCMYrmnnd43L5rKAOHqybB8Mj4iU+wR3Jc5yY9FYQ+Ki4pjkiIPTA+qnH
pZ4EQDpq14xWL5mipRfz8fNT+Cj1xQrw9pl5Y+hnIMv6chuzlXjTTmm6mFEprwMV
GOkK8KbQcYfRmzE8wloFypjIJ7TjFeugQisE8xT/ElyreN61Gfe8wZK4aPrHkdXF
VHGYgAj+o8u7W2F7qIgcUFGVoyk4YFmREoWazbXcBcqE4/nDdfnrxp9hWN+xG53e
7pP2d6doxS7lakUmYnYyNeeSbfLOSZjeKma9nheDEptoJ1Un2XbUUIZknspKkVic
dEhATraU06FW8LzMgG+Y8Co4xBIo5rPDYqcIMSq5UO1dxYV0v8SceSUViQhbvqWv
kvac4Q/m4gCn0ed8eSsH5YkHaDcVve/FMhefrCtS/PhsQLPy+pH83HVzheLirXYi
3IECMdWujlbqaLBTFIBZC+m0uc+OdT6mcjTCWWMdEyKXTnL6mTIIWFEEMWNFaWnQ
bLkFCnfb1OE2A7zN7/QOIvxMBlHpahyDM0JIUw6Yqki2wAksSIjrtmUUNUtnXqAB
TLzTzD65JipE9NOUwLjGLblLEMUrqQMKAyO79ydNBHKBBFuWIVZl7OpBTOUWqXDT
FxVBxU8U19VrL2Kt6jSJbSKieFt9PMn3Urbz+0+w+unPh0kGQ8bwPIX7loCWzP5P
I5yIR5+7z1ROVXlh7o4977+/p5S8/0dsxumzdO7L1V9WmwYnXt9+gbQ9ugDVWmUM
ektYm+hKgfL1LAoKpHNn9NEpd7yGEpBMLz0zWRn034HzjbeRyiZIiBIjyXrEaNBD
D1IcFAz5x3Ca/AVdwPyiIkvor8vENAZ7C2w8N8hPziUiFs1bIdXD8MlE4FzF2Les
5nDi02ePi6wlw9Q16icjQN72/so26d+7YXSBMAPqoXYWQLztVyDSNmstq+Af+hJO
okTAwpoeHg3KmSZU9JiwuhzvkdcvJdxXX8fgguWrN2Dg7DQZqtV0D7OrFEPISEEr
TxzQluGe0H+8U2IRbuqCyVTJ4F/ngspfm2LRB11iji8MeDIYrX8JEFnHd8+IMyhz
csU4blBRWiIZ0l+JK1Ewqd2PFYceAsPk5GdJn14vxQo1RMyzb8FsI0m90cJSJrKF
Wj8oe6KK5WJ2cgL28mh/IN6TGQSsvRcIA3CVzG0T42ow5ahBAFg7fHuoRhhF3fW6
6oYgRbpJHZBVhrpLPUBCRD8mTTuC9TZ0XOaynkp8/UULvHN7rFdSu9lYRfdo4iJD
yXRRr3YJhbOnlgzF5Db3+S5S9obbt9HCsxUKTfbTV5FQ7hhEJuPreI6I19WWdIgY
bssok8F9BTnOG2k7ox6SM/pcKxyXlUWKtUoPxnJhqaWE6Y3G0qTqBX0e4ChFO9Ug
RAd53+rpPUtMV4XYKYHWfWGbGgnxihyEGc7wMYAC62L8bZCUfsG8BA8F/80ayZhC
ib2taenRjPGXEEweH1HI//RSSX1Eeo200BiZB0pLduJ3aw/KMTp2I0NMWha/ky3j
6xhgcRbbngOqk2KqDkN2L88Zqdo8rsUcybTIPoz14yo/hcA/cnYFlbj/0daXAz1q
6cRBmfVTAwuImyCb+diJSJcPxNQiIQP1FqOrbQTzxKIwwiaK9tCcfOfoNOa9SiRs
dQUYKuGEAOxZZNce8QEiJzeVqRPtg8UISRc+nGICcyqRs8zdtLInoHr7p099joii
ADcBdmgFhv/qWRSajfzp8bb+jiFd3zLolyiLuRkWed1CUJe4y4DwpVxALrWZ7a6N
zJ4FK89ZUeE/vecBvhKeRXNz7HrbAXENfDrQbhx+Jw7I4/mnm3uk2mxiS8fskZuP
V6GDKD55XL25qTCLAGVyzLYU26fMrK1xeib62Z1fIF8F1aeqEj8gBxDqWUjJVzI6
QxJ+gz1ZBLgfh/J9KyyjosUvR2JZ+qZ9kAtXBN9dig8H4Vrd61VDHwiNUEJ5gsvZ
DO0P/tpmZfILlRvHidgGL41q1eMvrzt9mzUSsO4ZfoEAoX8lY/AK4W8UewF//VMB
etB+jQrfNDFj5jESlBNfDfJNFeDpPoI2suzBkbCQPAJ2+9FBsZg9fIdstBMDdkZp
JKCXxdf0KHW4T10Tl7QrGeIWmRd4Q2PEjLCYHTzqh7O15meIojWukSA8iUYXckPN
NYacFrXZQfRQ8mNKgF8NznjufWNNboVlP8uUXL/vUJd5Q2JFJSA06NcVKQKB3zdV
SGXNld2wQeJSz1XVwG+nMQgCNDqHRx9JcXq6p1gu8XPdgImTgHqicxlLasWJr0UY
IPKNfQ9xybbwcHV5uYhiTtZ9odiSeaHAJ+7puRO8if62eCUyD9fyG/seHt3z3c2g
aR2kNoMTpNvqZy8SWI/rYRV8qi468hMsIepi+sah8DPYdzlKR3bXaOuXrWYf6e2R
a2u8cEnoQkbZ/V4gRLVMYuSMUJHitwhdVatu92pzO3vJze+t02WcD8adNBdwBiaA
gZBMnLO9APiNpAp0FqleymS0sKwRLFR0U6w5mxR78ZGb14XZDoYSVEXYptdLhpM3
iW1SYrKHf05HWamoP1Fhzq83iy12Znzv7hL66a/c9UrgF4aI4q18ftYb9qQUYOU/
HaEeLA7+xYxQyofxmCkXn7lAXLrE8vNoyLx5tI12/5y8Ex1rgA+BojAXjTRHoFsU
7O4JpF9Iue1pQJePkkGl/l849HGtJyvL3g5CPJpB3ezk/eZac8Vf57+jVQO8KFNz
jOvLo55fXSjXsOeCxqkjEeN++S9E+qfXZOVisxyGna2FCygQOsZ2691UmaMH9uXO
xu7IAkXSfbcnsoL/wB/RgD/j0DcQlt3zgul9kdUlsbGGD4pGGes8LTXiebYOdxaw
Sq8kkDDJqjSaH/RD3VITkomS7pbzlBzMG3CPtYjuW7R4J7+CjizTOli+vMiY6j0D
Ao4m9RTq7U3ebeseLBM7SpGY2Wao0eBo0hqB8P2/E7csjgm366kMIGHRXpsMVOIZ
n2BAeJQGW0Sm2bOfm/NwxLVNX5/3RezRbnIP8I/qHz9CAJVft7NdAbPWjICsC9ai
vf5nOyO+4eXY3i+K3TddAmJEjaMQldFW8yrfE3DnT0u8Iql84y4fwvF+V4Y+oRPL
qWSvWEgmaJSGddi5zciLJZE6+JcXa85B9kX+2Lh3MWPbYbZW7BJLItppwy+TkNIn
v0LVWoaQ1LJW639kLaeFpElUhUDbbLvnowCMhcpq9uq8iogJFBAohRJ3EAC74I0o
ljKd0q5eIlYyV3kxYlN1zPON5i55oIgL0IeB4HZIawKa0ikNjd0JX+jDvIrFAAP8
8n34hTO33i4Ad7ALmnEzOR9MvNbjZ/rwGMcyDvK2vp8O9CiecCiJdqeyfOhCG0cU
5eRJJAf22q6x8VqGLnzsZuLo0Sh4XIGaajN7iTn0XXR5tMja15srIXuz0nFuVEg2
BdED3v+9xPSeAz2cuEbklNurwMy9xm7xsgL2Aa+J7BuoqDpjCqMT1WpNtKuLdPkK
j832FvWyQVJa4AfHoG4/I2fzXB0mkHsSsduVz5tDfTmBKyjKXWHAAm2gK61Djh8+
5eA+aZ8sdkfA8O/jHMn5ZNQUMoVzr26j6yzUifQZMS4XUkm4w4knjlZ6GbqWEhbV
mkjbpKQeHApHkiYFr/fsxS/MEbeeFldJtEGmL6IUvtkL7Zhe6+DtZr8tOlynzoMk
2DPa4XpRO47v2nQJt082ec2+6slNOvFLJSZ0lE3UVv+T7SUEJ4E4UMo4pQfXGh9E
NvhWr/n0Ljkzp1X7s8X7Ds3MaXKuLkYXrul5LLFJqef1oLhIZMjqybYVnnLZLnn0
y2yvVlyUpIVSmGPnsWAYfPqITIyrOUVhylnTlWKVYBc91Sl/vw0dulqUDOqCFoCN
BITgWwFXng8NQDI3tDitMRSpFS2r5crdfurQ30DdW+Rs+rceJcI1tytYSBgMUm3i
yMTE1O0BvFHJA4JRmNY5ikVPhcZ+1JLCiwQN0SVu4N1VYzpqGZNy1IpcFdlzLWqW
l+dMYiHdg+0zQ8i9YorQPQ49VxZxFmYDEe8eVU3PPJDhyFHo5Qwo6lESqkGZChu/
GS1a0m9i++V4O8UMeiS5CFxUsBDKG20OLcbg6+UuQs90cZVrUeR2WIU/eKqWt8Lj
QxSiG3D2Azw8+OLjhDBpxtQSm7Z8s8kce5nD5HEAO7rf4D4GDZBVbaxOgJtAgpeM
n4rzzgBZVioWDZ/jMd+Io6Iq5gVTXnkijArsuCIVR72D4vleUibiMDATgxbS5vJb
ZLZu1qWtdHzDg44TDScoztb8EyxQCx39CNtt8M/2D3ziFuhOKSqooFTki2WaZSv8
ttRpliFWiD5qf8wwmURCaXDo/GmnokgK5CJxtxidoOonAp7xT3iyJSKHBjf+BBRn
Z6A3b108TfwW2TA0g26p6DfqBi3UIC7DF8lUTu/MplsA2eToSi4JQn6bV3XzYqI6
g8DZApm8AiLbOrfwtVYnmPHe89p4QVBq9nHlfgwyPR8CJJUji6vbCdg/F3My3Pn1
E06JDbSal1BWFnCOuGIOibJnUOvFnHJqohdklhhZVXmZWVPhO4MA785oOMNYSmAu
PaGzln3qvFs8Q4JgJ7FFX/I1jkzYH1M6KnaXMEduUt0BDECa7f5t9pU1Bkm3LbNH
xOMGLpqW+WallBV/jhIuFnEhzitazvgGApmsKDuuycwNIbmVoiKH/By+SNTMOgju
QVto5aAyzqGgZyueQOeY9STokzCy0Ge3cxf/Q//eBS32tvI0o3295c+gU/JBNc+l
LUQC0TIkqRDeYJ0x5eYKADpAffeVJy3rT4t1jWipRFOixcVlxTz9VH99AtpcNemu
itC1KzVeS3AgDQ+JOhossRyEbh8c8T6A2qexvTuomOjrsUOoRPP3AJEflO4xA/0X
/WKL32q3NEI7Y06WrE//snrHd5S+1YUGZIjgGoCpnzJfsYqg7sAkjNCEgvQx2lb5
fDP7bP7wAyH5j+uvnJzDeZZRYZOptbf6uz5KVqhx+46GoD60pe79THj5kw3083MT
8WYGY1BP9SCs0jjw1GtC/bKBBGQfjrFi11zoHlq6IEY6GJ6ZFOIbr/n2o8WZlI0p
Ukv27l2J84+4XEIFtgk4TWTUEwc/TU1XoyPa1AcPLOSuNK1BEHSSvfw4UdQ147Tj
GL2cOtPo3JC8vdDc2n6sHK4juXAGmiF7X3Eo+/4b/hUUkar9/Ik9RP2N3f/L5HgW
DjaI8omxVbx72sDy1hnWG/Nv4/RkGc9LpSzD1yxX0k7yM00x2+syFwBKUj4v7OlK
PG2b3c3djepSFNsyd/MEyW20cPqFOUMZKAqIQBGLUnslAKyTvfEFsKFFyusSH6OW
aWJpPWJwmg3hAnBeDhK0IgB/A/UGAlDCHwgwTItjgW6g6FHtyJ8no7r7Oe+6Vcg1
FTNq+97bchEgYP1dwYMyNNLTiMeYWI1mFLk2SY9DXTFndQqRxIHDrttK1Du+Z4d4
pvI02ljNLa5wEFgVVVWtt/FhjyXnjn+R5unlp/G+OQqY6Ti9bhj+qDiVpzhzWXW1
oBgsdicxLnJvHkbCk9K0jVd24ZRU9tTy8uyuUtJ/H0umyeaRLVKI3D1chVL9+rCc
TLDPQu/GMHmDuq3nqwWQGUMEBAXuAIh/YgJxh1GqByhAEzfU6aUxw7Xgz+Bp6vSM
TsrrIZTbxPe1u4bZ3xMBd5Hw7Z9uCcuCz40s0xgfE5AgnOlrGeHu7qOZG1+dcrBb
Gxp52Bbn4JYUSm58HNoN009UHrFExb/Xe7G6Cf6AiAVwy2S2fO0MbFfz7MvSRdPe
mV60lWcCE59iy0WlFOgzCOmlN1D4FSnyTaqMd9pikhWd5szttAf7X6jmlq3Zpqik
010t0/8KJ8jM4buolN6KIo5SvPKhjx6zHX3TgAPtO/aT1qobPjZMOQQD7eNyi2JL
BQsDp+tyYjuzcsW4tgZG4FCsbiUkGIsEbH+t4+2kRen4K+J43DgEqTs2n0qdcSqr
Wp6PKardCOcxc7b5GgFVaGodD/eFzoJy7v5Fdn5iFtVb6bZmC9Gaj0DtjuOJY2lM
YFVIgCfbm22YeeHH8SD+hL/uFqzXVRIyBbm1G6Xpx3FL3KewCr7N8S8CecvFGdCa
liakWki4ZX1svqmNisANH7Lkg4h/cUUEVq2g6azaezgCvrLdJahJvzQ8vjljR5UY
YRcH9HfZchKCMgVF4H1l3+KzgIju9xuGpULCS+S8I08x2XzVPF9ASKdmhSRwdB9g
yYFGv9ivSG3OI+vc5KdT8r87BptDg1QlH8R4KtiNYyP5yIAvssgEftG7q02fIvr3
mm2P6l6Ssh4mgX81oVPWjF2dyHGmaF/JEdeGM9mg8bJJJRu6wDdIIigl5+V24z5j
cJtiV4pT/LPASMzkOeH4r19KuluYS0RYBUVwmvB7g/vt+r62VLmD9k2zZJ1AXyuj
7khljXqXkNoXvJkPZz5wexyoI1azKr9HmtakD9Ys4QRuOgKZPurVtkoxVZzGrph3
YMl6Osy2PMJSlDBzZJ55fIk7S6P/PTFIk0+1rV2ljz+dVZEr96mt51ztRrJTzFdG
UAcHtNxR13u6WcPTUuXUf5nt9aN+Z1vycUYYvxPfrbMjWFDDGT/qvbWqYaMB5CYM
pvpoZtDiTmG5rfIxWY21Pz/5MXechrxmSM9GmKECW+fiEi/eZrEnH2XjZHbwPr8G
b5uVJtAPBgxvOqkk7PGPxmhYEMggU4zRCZz0EsBGEi+Ncgcd3ecBNFlCQ7mTAEh3
ThYIBPjneV1m0btXPedBgj3Lx6o1DjW8UdrZzRPL+mxuGOfX4MSpRR1gUEIkWkCr
hrvP1wOY5X1mJlzpGYso6y1g0iNGEqlo0cGg7RGDaOvLnAKaM0PiJlkZjGCoh44y
9XsLTB/B1PaIt1outanm/w2ulzeLNuIOZuO5WBCBcGA0hEfX5Olw2rqKardU9B95
3p6anIT0u8ryzB7qeekFsCTZHr2K4q4UOYoTMIqQRfFxrss2fzqcRmxusFd8/gM1
dvd7FtBR2fXVzv9kONVdyvWEFTEnOQSTzNFuo9uUPWIJ9009O2tIgW6WsF3TRGyP
P4Fe9nAyEO46L5Pk8rAuYHlHJRQmzcr/LiF7cQUmxvUUwiap140dAPdhDrqQQ9B/
r6Fqroa8ZbQuCXV9K+qxBBOMTd8EBLgS6jYfdy86US/eAurZ/aaIvG7Z9R2sdhTZ
mfTdMnqq6hPci34eNIaDuKNl7n/ohMBrgjfbA/Xoycjn9y473/K1M1UUKE+4hSza
GVP5OHRNXKO0CNmlTaQMyb7NcwhgjTlujXdMzUKFTeQxl7DeDP4OIUS1swgZ6e73
TOxnpPhr5gQcUbgSruOJ8YOtMIbHhklGE8FLPPJh5Y9HLnm/xLsxM+91A4LvBbNS
n/7tbZDIAM9+H6Sin+xcqthxAk4HsnWJY7Kj3Dsmj5pZPyCE28shDinkUzpHwhap
D/B9miAWPxCCU303E5/pxMSIqr7RzUWhloNmhywsRyYgcSSgu+ocdMem3XXl5BuZ
WSgzxULxgdR21Fk01WdCWwUg6ahnKtuuBuIbfUmTQC1hqIrOiK6jAA+zfBBKEdFP
CIGxhfbW4w4UJx7WNzbuALL0VCUobPHH0wQahzqTfoaHHrNMAK2YxcLjVk+SgBAf
yXBpnPXxnJ93vaBKML4Z1irC7tTfRnDmmgq2ZgpX/CzYiW44xOkNKDN9vGBsaT6k
rAKqp2LnEp+66Wux1XmPCruvLa11oULWGDnFB6WG5t5wJkTkkRIrwVus95ym+q9A
/Z8SCeBVEHaUAvUSdeDOLmaEzvsG92aNQx+M2+8w2l/BqtrVc2PAIkuioe5sJmXO
vPppfD/2PssQGChozLKJvf406SI2XeTC4Qw3Qo8cPuO+1fCYx9e4I+TzPAiEO7Xu
ikVBYFQQB7IvPfPD6sy4nchyFZ/vcN3tcnWPdOYzRZv/XffrFFYGUnGVYkyA8Pbn
HErtzqxDNlsKbr/2iJI/K4gjWCFJqmuBIkQ1uXpMEflD7weX8Utp2EhQSrIQEe2y
f2xp4+3kZI0gJNPrRZotYmp89fyJDB3P/G+F7jE0nTyiVfPvZ7laXFsL1SWs1Z3H
KZ6TeMeqgfwjv727F/ODF6MNBxJJ1/aZFte5WuA1t7LeS0ZyXE2UkCcna1SXhhoY
O3phMy82H63mvxgCL+AFlphIg+3NQvwRDkrjKkeAovyXerBJq/9yUPeFiw3h1+WL
Sk0COTXPUUqrjuTQ0bUy1NQuQ6l49H7ffWLiedAfgNw4b4t2OjftZkB02od7g6Kx
uBFHFcxKKu37RyONl3qCZythZYXoWQwuZmaIgzJPQ6FTi8xUpuNusDlZRdeB2Q5W
S6q4SlGJ70lgi6p38lXf3RwAm8rtXgx1Ktt/9+kv5ZuRMDUBzj+nTVfA5GUsAetg
rjrlH77A/+d/K8EOAUpSyWXNPgeziS2AMAMq9EN1OduAfyB1bfvxLnB+XaTlyafN
dlLuUkf9hv5wcGlCciyC4FXjFlnD2Wh8pFqfpMCfBJkA+DgcarMG7mvmWWtCW501
c2n3Eyh6VNucQwIHe4e84OUHrugKLu+p9hh/vUuISDQS4vTCLb4mx5ARR6mFYlDQ
iC3CNSqdYHG6MPqJTTioZSZlO6GTJsG0YD+h9iPgpAdZ658bPrtfD1nGQb9YADcx
NCroGKj4OwF7LAYgQGiPgAyq/VrPo1Wj0e+oEOD33ZNDgITE+HmqlpuES21nONEb
matVQXSHpZWLuQ+o0d+WZ0O6Q+9PQNXk4XL2XVbiNAKLA0G8r6OYR0r9tCLU0fuJ
/wyX5EiRpqGmxVhbhSM21/PfgFAU6fniPqCb/P7u/V5XwJNdW2LVjxw7oxsNI3Hd
eE5RCnw6UVY8iOp6XzcqPZJb36HtFqlTdF547Xbds2i2YZ6D10mDGUm5IxxeyNmr
s0bh6S0ltu0/Jon+IepSsS5EyTqXHOkjxJqQL33nT5bUAvXiCGHI0OPZu+TMLfy8
F4w7FNb9DRm5ovUOoiV+ZA5kUrRPV/Sypbqkd21ytyHNQag+GkHFXYUaFDKcPvXT
H4JSMG/LUb38JJoAottdkbJXb6mn8QEl1MXcC9l1OMdfmC5cec2U1nK6FpR7Z86l
dpsxx7ROhvMjr523Zp12QQiRVIlhEfGadOK2rytZQU8eVby4pv8NopI1mBt/IE+2
HbpZKNTMe5Jiu0T27YMp+62ckYd4IkhgT1pd+pOL1+Zaq9i87wiQfvIJIWdILD50
+jX7eJSB9sRjA9gT3WdmaBVNvpCqel+UySjmmet6rBtPYAc27UROvGEuTJOl0d5w
pk/iVXq//67Wpj2/WiuKPn8wRiL7sJs8ygDqjH+Hdl/Do4VQ0s3MTzJaWPdVOB7T
MvnjIeSLoCY2pILzRP+mUQz0Hd1VU8YMGIesSLUm5LJrjsGhUIRiQMHoUjRanPjz
k8+9n/EVJAtJloMuluLxh92lWs/vKHZwk9qWIXGdXT2YXGKtCgVj2mjFSIv9H5u7
+vPkwDV6NHmiIXLZ3pNZb11xXrYAmQEv3LugAsoClOASaDZRzBxyMc3c9N8uXhbx
r17XSYqw4zT0gqjL/P66BxffbbdSF8F6DeTB1qu8Jgs0b0K27dEEeEflv8EUOu/8
r7FhcHRPNIZ+/K869b+/AmLiljxJ94HhbwHfcXP6a6DkmLTWjI447uNNFNZgfsK0
Sx9KDF5xn1PpcwqWtG1Q0uRW69UCxskefPOgKwNI3j6V6wcqJEgBakasdEeqvRFY
RHRw6RFeKTsR6xfbRAmCbm65lkT58Mwl7eDBKTIKK1nV4ci4E32JwwRDzYZnX96f
QtwS4WTKE6pNF1v4VDxfyzfh0ZEFDAGflaLXRCUeRp5aauyV30Ouez1+nXL3WN1D
AFyBikv5gOo2asfgjlQbuojjMmeWg+/jWbNZfNT5HvTydXqQO8qCiEMp0EZIWT82
aqhqMfnJb+ob/NGeqU1R6eCP+abuVSRxkupL65oSCXuayVUXb6bxybnuyNiJk4mi
2S7NFt54Qp8ha0H/q/h8nKZMDoEApP5P4xggYAUwY3B6uLf09N7uFuKNpEq9THs4
EDgeSk5p/6Trq5wDEhMrRgbkAUbXzGafBOlcAFOgg6F6PUqWm9pURiY2lu1EP1bz
lW6z9MW1iG3Yl44Dh49YvVE+2lSz34ufVEshNoB0FwVZ4K6pzH/fdU7J1G84wyXF
5VBL1SlS7CVLsBLvEo9uXY7r5dRJSldCYrruhxHaKqD1ho5QFUdMMZ2OfWo+zjqt
jac2n1U1TLlXVD5dLC1fUHfteHVFmFY80QO1lBw/PALY0AqIQ7fQqOPmmiP+riaV
kcguH4ChZu8cUmT31OVDJDJP9Uzv5Es8UHS/HHePfSwyYhjy92hNqgikLix1oGyo
DqQLMOVAzyNdlk+iC8VlGZfsL+p8Vwlwz7yynItzkOHltj95YkAkvmQ+HEPkekVF
oWFHQyoNGbHk+NQmuY6TuhJjAGYZXjn/uhs71UVzbVpmqKlqJHvHQO/eBlxKgJam
f/trBZGJz5EOhNl4hWuTTzTm0UC1HP18Ox1+dpgF7MsmiCUShgi9iT63qDANHuam
nwKeFPs63SN+BN9dJ8JCxpbwMUK+VgQ4yW3KpPpaUj5ccAdR23M+GrHjJQoJafWU
tSopVX5t3Ee0YWXYdWSHspRpZVv0v6K+glrqjEatOndmfEgvCaL3v6/b0+iA4UC6
cRhsy7DfRG4Kqa7jpkZOE48htqkCSd9GANKcaZsWLyTbb4CiSWwnDW5SzEo1W+5a
eK6Q1aFMxuuCY5KKRIb10IeURqAH+aiBHbQXN7IAKY9qHCiSjF/n1N4ZPmHAvQ4j
avxAd/+/sQcXQlBUvOOgr1/olvxQRmqTMfyG9V2eUahcneIgxVFllzcmr1tBdJ7+
BbPiprWv6wMwFxlwp1ul3AueKsvCTT67opMCfEamGFWBvP88Qy5bUVYvy+EQLkQ7
24Ql2CLOCb7D8mZbAnrbDaHIGoU1qEkAZKi/YUAuKk3W14nLmmJQvu8UCJDm3a71
yYP963T/Prk8gqpMz1xPcFZ8jKXxE1z+PxqGconK9pU2DiMcd1uNoX+xS0+BP93F
OkSYvAsYAK4A4yj5jrp3lVOBh6bELOCY6qI+8qer3oCemSXaMvSx8oCAVj3dWFyN
qgjyaQPBcxFaE5R7wcFaahuGZJpIaTmdhH+EPO7op9C84bpr3VB+wX5C/yiMbE7I
nh+1HEVj8YBEsrLgREoidQ2UmFupV4GAdPl8xSWVa1I6+20//rxxhHKadh3qCd3g
3Zva9ogeAsqqN7/QjBaTAvCLyFOcm1dkKfgLwS5o+S8v0Sfjn7GKmuSwPifpP5kp
qCS7g+ni6DaoI9gKQJYxglE1TENf9yHKgcogk3r+5ZIpBjWheYdTvUrBHJe+B2da
OrBJF+Wfq1/ER8eoSITW/OdBDJO0vEJfs+sPih2PhsWnjy8TwPIH4vjQN4Rufeu1
MKLYASQqTxLEJwfd24IfR3tm22nnND3mH9DQ/nddoxBtbbj6ueBu/AV2LAqKMH+o
JDdj2qkpfWnPmw4nrzjood5GlN9jtlN5o3znkpykTGjI0ipcifGpr8vNMKM9E8Pg
gawBQaAaSrYuquSQiXMGitBiRtbdgMdc6S8u59fRX3AqmSqO9HSWba4/5QrmzJjI
E1/ZaJaXYeVgWXUkmQCoC1iNgc6BpkIX6zxV2seXIPCIht7km2c/4TEW8jkW//wN
ZKmf+SaFJe1ayReYLfjDFOVYMz6rxbPNJVSmQhK3rosr43QeS0KMc9Xpi82BKndv
y7C2jzlutBfuXj8UEf6p766mDg7IycDDa3k9K8u5aeWJKpQmqSX0MQ97orTvQ9kM
45e8BvXSymI2GPNKkS4sgNcLD4KeBB5fX332NvGlrGuHLVxaNUk0D5YgrEYNJ7DN
6OZPWdt7qQ/+LkjLAAyxPaGpC4R1GJqFnY8D+E6hMt9nc0Gv/4ldsMB1U4VRxa+S
SuSEp1ySSiAAazcjvxVlMrzaB0LWL4BYgVij6hN0yOCtotRjflmPoTCDTDcy/0AK
djUeifqRgHgMrcaik6zj+CY0tsvsc3yQEM/RBHELvkhixzboieN68MmMedzoQUuG
fVBkMxGCVNQiLrZd8k05lJ4HxrrZsEIiXRBr/CTrR1M83+PyiNu8nAb6+FmaKbRo
b8NpqkvYZMtR7pIQJ83i5tsIUOv3aP7u6rlpIDZhq21vOqKjONF46hioVIqpWGa7
vCcvhAgH7PZUCF+GLT//z/dd5iR4oHRpVB9D7EzSKO9rlemMBX7OjmlLZpmRnovB
stziSEiI5hJd3Rk/7AJBdhkmudEodh8lZhCgrm87J9OhkOKqNq79xmVkS1QobNYY
PKgkv+EwJ65vYm9cAPb9auTCZiNUC8ws182bpT07fTXIsz3rsf/PJS9C2i9zYsjQ
mHzZtkTjEktwlZl5wxQ2ZADTcZeytjxHHe19w2cfU7RNYZtLCI+WH5W27X1GER4A
SFBk0q6yFe6yM1qxMzm8W/14Umz7YxKBswHfSFggCg/2M9CkX4CqsJYiUlIVdmRE
gbJO64WKIVjikR10N95OvyVHeM0Q3dZvvUQAoA/fhMWPjV68wmHxFGHTtJiF9DKa
5LF6YhlN5xxPoeWfrpeN2Ki9criPRF+WuNztYBVMwVufDZmzh/SCnzSrtSazslV0
PBSH2zq8jqMV7yjWATbUjGUodMSRdIBFM5ntvNauYKOq4DtRIsArQwSMWruyAtM3
if3QNKC8kErRqfbs10FI0G/2hbC1vlW1x/nA5MVWlRZzHNes8z4r+u8DiysDIpfv
js+79lNrEiFVcPWarqkrrHDvOAt+XcA+IXnY/1t+afGgNdNO0GDgzCP+dBqt9Pl3
imAEO7zcedSa8F5L7ejs9CkQSsD76EF+HYusG5JNxhIWlccNwMb0fQzyAmtriwur
F750dB95mZqMM7m0fF3PkyZp314fJTEcFwLQR7IoY4ooKiYkuS6z46r42NVrPMmr
zq8M5gB9GxfbBYM3w43HUFVJAWULvv2LfyBmAqhYcIB7yaP2A/dYJQVVVLkgQ3hS
hjm82NO8mwrOtYsiqqk5y5CQ5zKh9spzwyRIDYXvyITaNF5ougwP0yQTLSF3WoNR
imzspJCsM2UIveObR/hjZPeQ/fNBYz9zXsWldvK0oUebPY5/4KUb3BO9fkGEP3Sa
+jyQ5WUn5dS/dSdKeoNyyZsbab1jzEEkD48YbaVPdtyAtCqDvlXDae7g6d4y3UJn
9Ysv2oIs4PvLRgcAYl3sOcqkoHoL32hl9ikRj+FMiYRN9CTo/i1JgAGQv1WsriGe
Y6N2LfyDSjBIFy36Zn3i6w2aSe9YH0EpZERCbciq47QdTuJSxGHfbKHhlMj7vWSm
QCQfR7Rnzr8aFg1LmVGY0X80jPENfIw5GOle9329j2jBTNgknhvQyyTsxbKmovHr
dU8Op9y7Ubuqi/imzBlCFHGq+LAvJFUkdHuK/gbQ+Bt45DGlyKdP2RueNxlkGXPP
P8DTLEK6wE9j3lllvVLlMO3zMaq26u0j90fkclptKkVcR/m3TWVGInNvxgXKouT+
dcm6Yqod36uOT2wK5ofC7wqP+uKoOoideuIEvz3DJVCngToZBOhZn4rLNh9CvFdi
bNsLAPvNlmvdFYucVSUUo/cXgkVCs4U+0bX5Cbk6UtM0fD59tgCgLccYDEdbtQSN
cJqDxcOtp1HZFR6CBN9S8VVxZ0SJi7t3nyFZ5s0pwUPgXpdPezHOWc4wCw9f5M+6
fsXUhcQ96OWoXGLfC0YGmCG6bWVaUftNu5GWDbvY4twNMc6T4MpfHsHx04IBGe24
spo7MD/y74/OPsQzPcz+M6L1ZufjDXe+EKh0xXFT4oYU9EMNUKeP6sk+G6UycN7Q
rQoH2HNs+alC4a2OD0c6zhGk/AHJKYM63HpxfDjIbejDAPdUwpFaFUREWBb381js
ZV0PVifrA4hImJ93jWVJLOanYGl89nyELkpa9/t90PubeeyUJbpHsZpW+jIfmwpX
pD9VEQBZJgnZgOM/OGQL9vnEpRXw8Vkb6IWhTs9xOKextoPemRGT4Bmzya7/IZ0p
Sw3r32gmPKFesVo7pdFK3GM6BH96SKC3uQCZTjh1hRbrP22gKAR/6Oh6gxg9D9WK
8rqzXQAn0KK2gWjGN6+ukDHZCp3qab6n70aj/1zBV/FfyidKUj0A6R0omVyFcKY2
gBFb5Zn9fiRIoe4cuWx/Gvrh2P10SXG9gfXUqWMW9NXM2o7c+dpUCK40+QKZU2nb
sFOXCifVBOpOJwcDnsin2JWzDrKzWRPhLPuC/koBh5XEzPdn2F7kZdN/JdAWtxCT
YGoQ9ISk45QaicNZLuoj0c6vGQ0d+VYrcS+HR08EcvvUeQQjdXaxn7lCWcl1bIfb
syD7jPHIlbPpFAZesGC+CpFAXYTjG787eiFBfrt+p3amjKnfwXlu7cDBTKfbDu8B
iic4+2VtM0hb3xCuaEtP7FIu1yKLtE8cBhpL8QziFhCxD3RoqzEM8081lDWwQDyv
///AQfdn/PaAdihrcy7KXYNRFQhrMcIpTx4QWeGiIT2SR7uyfKh5OY4976gRPhe0
whtyAWaGoxFnXYia53bCRXe0BMvEoWuifdP8GdZ2zYaN7fkodrWNmt1jWn0rXkNV
BU1V3lgCtU+mdW01iH+CQVT0FXl3ls7yyfYCwZ1PPyK2IjcaKE3ir68138sRJ8pl
g0OEaOyuGdz0vSDzdgs3zSZg8XFOj0JwHPLIEK/s3lsn/OmPjMlqqQTuFvJVQIBK
0xEUuqmqmj7F3uR/6mvC4k8f4dIk0VsrIqNBhEHMpqUpxSsX1TIKe5R8RdIpX4U5
NtIBQBoTaOth6Sxi68D37jZnIE/tYkQPFn3/bQrap5Oigs9yW5Mn1zYRIPReOnET
cw2oV1gzGp1TrYjwzDh1tc2DmyqMK3scZ6upRcX4qXAqKs0bUjHtJmEwoW40gWE0
Ie/xGOj7SFtteTrDMN5XXsPd/zOkbWunE4bcIKX4u0oxJDYJYacgQOMVIImxnNbF
+V6efqJScS5GLHGTLAo2CL+D0/yJTx8y67X8ou6eh6dSKOPN3SEzkAmuQnVvUT8M
sZi8AFsJyg8FTkIEwX1+Xew6EL7wqEgyYUgj15z57YrHdQ4+dqwN7huvG86zUkjL
ZY/EPEsbg9WKBJ5AkrCzGtdO8shJbzS6137NH3lBEo8pNZz1bQpNj7TfGNpZdKDg
KfOEs6I+yNF0R5W3b3+PSYCLE0RVqODcGPoE1ylHzK8fju12Hs1/GKbtgMjwkfWo
Y3ZiVojwUyYaCACkfQ4DVQ7Y1tz55Wf9zrokYTw/Ys6eldJNo7nPQN4SRvCgL5G/
DIu322Kem5xYzgm4qSlYg9+Cp1rQOVniL/sq/dibULzxwVPkHY4E4EP4VUJCzuoq
TDzDcKc+vbnbqyUm7+ajlWuc8kpGdUkWJ6hiVLtcBzRsk0sMGo91uajQhffSGv38
ojYWjri4sXlfk0PinhtyAnu49ZfHjuDErCIvNm8htOBqWvPkYUHAIBVBgZ+vMlTH
FemCQOoUqkRYbEAgrAFN4tr+68b7yupJod7N9EFYJccOpfmeLjX7LZXOIgD1CSKp
jBQ9wDwwZ4FnrBC2OKoJDbGwcuA5xKxUb9c/MJv98XYXRtRf21zBZXV6K5pGpW8K
p5ZnpufkfL9JsV4xMW/RwIJFCXNQ/tti/fYE+I7RB2x0MC6TCYypJufALzvcICYn
fZ08Q7B1RTl2JHmTQlvfoekrt465MmxrlS74bSvfjdEcVEtQ2ut8Uq4R9qRT8afw
VOhT0BzEJNxB+WNH0msUN9xocYGZSeJH9Lqnv52XzPyXfm/HoFp/GqgtMYtvCWXy
GYNsnECr1TyyxH6SBR83vqVRn2l+eWLju3AqPcMgzXHfqaCaVmQaxi16jTxNUdnx
HB6LMySFHk6ZeKNn5S3BfTjdkU8Zqij2KFmz99S31Cmt+6I+6lJC9X4lcInRxF+a
kxHA8p0BF66CyOAtUbIzfHZA8FJqT40hfZOaWYHgExc88bYUwujTOmkQPYVwCjc/
QXsunQmLScsQupYEMlrhGSIbfFugieOMUJgH/aqZI9REAbvKkR/ahg5LdBMqE4Fc
cOr+W3sR52PD3uSAtpi7acyOPybKdmHv0EPDkWSDbrL0ssDuvrJi3UvJST09Cr33
2nuwcYZuqAZiHfXqcnNJP/Vn9bTO1v9pnfi/5Zt/ytlJdm4rxGVG/ujZEXq3jJOp
8WTVV/SB5Lxpqt4yX8sSk/A45LgTW/qKGK1dmApT3vqi2a+7v2bjGBxZLbiew0KA
JGSrIvnPqujkh7HL0d/HQUvL5EbF3n/UtsK69RcuEnCDurdtQyrysHEMmvg1wqjg
mYio0Amun6FIQEcpQEZ6rjqhIxF4lDZfwpz3U91+txd0Vtc5hcrcueZbx2LCwDge
L1wvV5nLkCgGLSFsSiZdmDFROk6gV9H6kNRy4qSWhmRjtyk8lIzRXP1oh1X0qQSh
fCdIdfQ9CZAsMezCLuRuJu8UKsew5hCS0iaWyPuO1dh7FAVKhl/3X46yiUMNfWH/
I6mAygvGrIwT72+/yPvdLHDilIYNH8aLPa+VJTV3j5TaMvb02QqPeXwDGLMSUb5N
2ANDve0HS46IcIdHYFSHS6Ys8gkj9G2sY9UAB7AEs9UohicsyOtyPaH4RzWc2CKm
mDkI6keVPTzK5+t7+FcrFpMJs1k+QqKcy9HKR9/t2+AeXSVCG4shujAAh8gbZ5TF
/dS6MLJaoTUlMKJtvP8+7Bhj+9tGEpiI2y82DADr8oKQpb1mABXm+vuupmASdz7Z
mwDJxz8JuCw+JvbhhwWNzwdiyNWyruEgljoTaHocWwM3DQbp/TVVWT+4okLVLkaW
42TyunmSDpG+JeaJLwjpquTnqvjLqjIXxP+HZiD+asPeOKyaUWUr7ygMgEM0mcmY
ZIdjqLjXYJGT2vELXnmFzLnkNZ7lIe8lJ/LmE4Un/3F0wYqlBTvMZU1cWuQqElUF
3pp63t7LUJuwqyVaC6CCYjrcw6icynarWtzMBnq6EhldD7gyDsN6evB26ej8p/Qi
EKqox31HBRHGnnERhl7eWzcuyI8KAdseXHWByKWgvWLtpEzLa0vq5JaZw9IgTSHq
pxv2nCBSpSFdQwoEa654LBXCOCRWnXC0WJQCQ4WGaM1aF+rOWjjRrEKST/fCg3Hx
nx4habbw+ibcn1kbYND0jnGMEmsftlZuVUChAoxd+T5gapb/W7y0S235KbAyf26w
pEZCdO+8/2gz0DoDuWtv1AGHbQf01XHBluveB4yZacmuqY22yVe70zL6sBrxM9NT
8q8wp2bKVgfIVJHARGz0BtFQ9heXao7+FielsZRzbvu1eUgTehNxiMy8Fxa/SHBm
iQWr/HJ0dOUDTSjsl15/gXHg9QGXnox5MSlRuEBgNu/RW3lJOSlOaD7PYwyTe/VN
5ss6xCvm0DW7WKFR6tXTgqwJTQ0iJ8VBnsi2QkLt583nDJtUDc2F7dlEcKYOhcUs
yvPLg97w5ccAcPKayAC4dNN8mC6OSONy9bAXCCvcvoQ1NOQKqR9xH2EExEq/GPzz
K3LuDTB9zUh450k44y22/jTU3nG1L9Ec4AsXFSt7WI1dvYrlBiy6w7SaoNblauQ9
7Rn4wLAsrptG9TUalDMMP6mua8eJdGaghQlWIlGyVwreBCXEIFD+464LTudIz0Em
D+ImWTbflsiXa94S5yS9N2rQq6FBRGcQieHGHTQ52lHEaPCMN/QEMWCME0QxIlzw
efTwSPmtmcWLffw+B55coE/m347DmLfq7q4YmzhSMMn4qHNbvLRDblddb0eOn5NM
i/clo87DplSCSVD9YgcInPmEDer0r5Qi0Ic1HOFNNOCftZuEHSm+c/s3oEMs9UsF
xeubo9ZS5M2xUCgWk+auJ8amKXDb+4gZQDaa90gfTLyggBZrTVnVS3DQZ7Mzia7j
NOYCIJBZnWmaeaUtf060ppywhFDp7FoENVuqxotfP6GEm+9Fl3TAbZe1X/7WWUNg
efd61dC5xe+t9loS/0uN8TLArgN+sm8ahS/DIq1tI+6/dO55cduuDfNhGTTz6vFt
lodKXgJ87IooSePgjXvr08J1QMcV2deu86RA6YBaKt4rWdXCfAjzb3zxCXeVe8tv
f0G/oKoshCHRj0Kk4CnlRZ/0Iqq5ipSXHgF3Nx6TV282SKgIV5ctNKmMAOEQd5ae
OStFF88ertg9LpcIFHOLE4Ysl11yZWPSQwZ/EuIOMvnEiJ3BEUjmgSgvpr6NYR3q
nc6prT+4X+TB3hwP5E65QKDZHM9TGshFXoJmgekjM2prdknR0ytOokEN9a5f6KP7
oB7b8tHUPqkbBfPtjT+gWDk7KQIe0cRk56RXr4458fHmYUNG7XQiI0Wo59uQb721
+hmGwKJas4Op1OomqTTr8YjnFa8+YKrn8BkP/ATWG0Ojk6LhkXXZ4l5/BfvZgtaO
hhyZ5boPbk2pUBJLLQ8FJZIzLCO3euMYvl8nsthFnjYY71IKITSVp8YPoZKNQC2H
zMgToYBaPFNvWdrLgpYSgp3N+RCE28GCfdW5IRJpS7ITmMj7zDVg2Pd0GIGMoRT7
JBeDxU6d5w7/tmsZb/d9TEMUsCqPkxp3tGIh2qhfGIF3iCCYvRp5UdVNJirui5Ob
yJFCgcXqcH7wdG/k96M4ySlXXpZFwa+LvTFE51Dwkk3qXtyMFxzQ0TFiSj+VqzM7
9a7i9LcvxSWylMEu8ij4fQYuvAZdQpQ5Anqg2Ha8uNA/B8amTFBNR0yfIk+oQZXo
6TlJoXnTJFNmi1uUv93kVcj3hXZToMDARv7szrWkM45q+u0ct0zd+s1hXFKMKubU
TGkrh/sO0x90g6t0llBkCQCKkLCfjg==
=wN6U
-----END PGP MESSAGE-----
