#+STARTUP: showall
#+PROPERTY: header-args+ :cache yes
#+PROPERTY: header-args+ :comments org
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :noweb yes
#+PROPERTY: header-args+ :results silent
#+PROPERTY: header-args+ :tangle-mode 256
#+PROPERTY: header-args:text+ :eval no
* Places and names
  #+NAME: username
  #+BEGIN_SRC text
    hdhoang
  #+END_SRC

  #+NAME: storage
  #+BEGIN_SRC text
    /home/<<username>>/Copy
  #+END_SRC

  #+NAME: fav_music
  #+BEGIN_SRC text
    /home/<<username>>/Music
  #+END_SRC

  #+NAME: prefix
  #+BEGIN_SRC text
    10.117.14
  #+END_SRC

  #+NAME: domain
  #+BEGIN_SRC text
    zahe.me
  #+END_SRC

  #+NAME: system_ctl
  #+BEGIN_SRC text
    systemctl --system --no-pager
  #+END_SRC

  #+NAME: user_ctl
  #+BEGIN_SRC text
    systemctl --user --no-pager
  #+END_SRC

  #+NAME: pacman
  #+BEGIN_SRC text
    pacman --noconfirm --needed
  #+END_SRC

  #+NAME: yt-dl
  #+BEGIN_SRC text
    youtube-dl --format "[height <=? 720]" --output ~/Videos/"%(uploader)s %(upload_date)s %(title)s@%(id)s.%(ext)s"
  #+END_SRC

* VPN
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S openvpn
  #+END_SRC
  #+NAME: openvpn_common
  #+BEGIN_SRC conf
    dev tun
    topology subnet
    persist-key
    persist-tun
    keepalive 10 30
    tls-version-min 1.2
    tls-cipher TLS-DHE-RSA-WITH-AES-128-CBC-SHA
    <tls-auth>
    <<ta_key>>
    </tls-auth>
    <ca>
    -----BEGIN CERTIFICATE-----
    MIIEYTCCA0mgAwIBAgIJAPxrcItU3yz8MA0GCSqGSIb3DQEBCwUAMH0xCzAJBgNV
    BAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFOb2kxDTALBgNVBAoTBHph
    aGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3phaGUubWUxHjAcBgkqhkiG
    9w0BCQEWD2hkaG9hbmdAemFoZS5tZTAeFw0xNTA5MjYxMTM0NTRaFw0yNTA5MjMx
    MTM0NTRaMH0xCzAJBgNVBAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFO
    b2kxDTALBgNVBAoTBHphaGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3ph
    aGUubWUxHjAcBgkqhkiG9w0BCQEWD2hkaG9hbmdAemFoZS5tZTCCASIwDQYJKoZI
    hvcNAQEBBQADggEPADCCAQoCggEBANXOfdISWeotIr3neKpj6IGBlCLMEBNtMB1r
    bTIgkxe9tnNd4jBufq6duLK91ioqcJiAxMLRovYtaRTOpQit5/PnAm2Iwu3u2mGX
    EftWEBSVt437NMVA6L2Jemv1lp81vmzJIODgPQ9elrNteQ3ccAMCpuj/l6PhGeFq
    JvK+dNIJcm2+xM15S6ESwjsZxwijiT3TMJAjXJPC5R3gpULoTHrphPGrS/0RIq9c
    Bd/+4Q7k1MguPK2XSKHiJnUIkQJ/m/XGT2iXVEzhOsHZ8vlaNq1xBzTko10nEb7I
    sOQjuH4GCZMeoYnF3egg534fg+BYPAecuKglqdIpnm4+syJsrR0CAwEAAaOB4zCB
    4DAdBgNVHQ4EFgQUsDCM7/aJ6AjPVQPEbdDTiTa9WIswgbAGA1UdIwSBqDCBpYAU
    sDCM7/aJ6AjPVQPEbdDTiTa9WIuhgYGkfzB9MQswCQYDVQQGEwJWTjELMAkGA1UE
    CBMCSE4xDjAMBgNVBAcTBUhhTm9pMQ0wCwYDVQQKEwR6YWhlMRAwDgYDVQQDEwd6
    YWhlIENBMRAwDgYDVQQpEwd6YWhlLm1lMR4wHAYJKoZIhvcNAQkBFg9oZGhvYW5n
    QHphaGUubWWCCQD8a3CLVN8s/DAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUA
    A4IBAQAKkiDOWmwu1D+qbCSYaSxiMfJ70FyA/o+AuCDeaGxKdFLZ2JQgYK/az3y8
    tGQKBc6AdUY7BoN1Ab/6TOz+hWvmyNOOvq2AMgt2bHHA+JquRZMdgw59OtbB2BjC
    vBs2cxRJWdmv8aSltcqVpm2HNHy3mzcq8i0CdFluxDV+zQmvhGVypAipYTlhdi0l
    KLJlB+3fqS5GQB0wPmkV2N6WJdm0NfoTbBOCXwVb4ChyrgryQaOQi5nu8wO9tzeO
    kK/jQJRFKpdwBYqAe0Q/JP95pVjctyiVFg97ppvQ557QFcY1pHapAwhyBmxYiLak
    W4pz42IduC2pnZ3ut4C7UzpeDMRr
    -----END CERTIFICATE-----
    </ca>
  #+END_SRC

* SSH
  :PROPERTIES:
  :header-args+: :tangle ~/.ssh/config
  :END:

  SSH encryption settings by https://stribika.github.io/2015/01/04/secure-secure-shell.html

  #+BEGIN_SRC conf
    Host *
    KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256
    Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com,hmac-sha1
  #+END_SRC

  Machines
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    vorme ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCf2C8j0GFA8eq8Vgva/9KI4cF4Q23v4rBk6zAxoyIJvENGkpDuUba4AOMabUkPiXU76KVbx/h4fOivjrWoUNG6Z0xEOJTQqVwuk7788dwIm49Ba+ZOC/sCtT7dsbshFpzXmkdASsZty0foFSILRADDTlB1MZiN9wJRlnjkmIO9WiSMYnuGzolO2f+Gy6LFrtQF1ZgOOqPToO4u4li3VPh1zdoY5+IQul9BQJGU7tMZrleH09LcOUlip8SHZYuXu/Zlb9GSK7Cj7WfGaR0k+xvs657n41haffQ5CxTjocqZdv7eO4Uo2ryWXn2Ck7DwKH6KMjEJZRbX32zLsTacQNgR
    kub,<<prefix>>.54 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGtY5ERdvH+mAQKfy270I+eEaZ2i6FhhEjG0EuzDxIym
  #+END_SRC
  #+BEGIN_SRC conf
    Host vorme
    User root
    IdentityFile ~/.ssh/kub
    Host kub
    User <<username>>
    IdentityFile ~/.ssh/kub
  #+END_SRC
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'tramp
      '(add-to-list 'tramp-default-proxies-alist '("kub" "root" "/ssh:kub:")))
  #+END_SRC

* KDE
** kwin
   :PROPERTIES:
   :header-args+: :tangle ~/.config/kwinrulesrc
   :END:

   #+BEGIN_SRC conf
     [1]
     Description=Window settings for firefox
     shortcut=F5
     shortcutrule=2
     windowrole=browser
     windowrolematch=1
     wmclass=navigator firefox
     wmclasscomplete=true
     wmclassmatch=1
   #+END_SRC

   Put emacs on F4
   #+BEGIN_SRC conf
     [2]
     Description=Application settings for emacs
     shortcut=F4
     shortcutrule=2
     wmclass=emacs
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   Put konsole on F6
   #+BEGIN_SRC conf
     [3]
     Description=Application settings for konsole
     shortcut=F6
     shortcutrule=2
     wmclass=konsole
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   #+BEGIN_SRC conf
     [4]
     Description=No border on anything
     noborder=true
     noborderrule=2
   #+END_SRC

   #+BEGIN_SRC conf
     [General]
     count=4
   #+END_SRC

* Git

  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S git
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [user]
    name = Hoàng Đức Hiếu
    email = <<username>>@<<domain>>
    [color]
    ui = auto
    [core]
    eol = lf
    whitespace = trailing-space,space-before-tab
    [alias]
    ml = log --reverse --topo-order ORIG_HEAD..
    [merge]
    conflictstyle = diff3
    [push]
    default = simple
    [pull]
    rebase = true
    [rebase]
    stat = true
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias g git $*
  #+END_SRC

  Code hosting sites:
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
  #+END_SRC
  #+BEGIN_SRC conf :tangle ~/.ssh/config
    Host github.com bitbucket.org
    User git
    IdentityFile ~/.ssh/git
    Host git.kde.org
    User git
    IdentityFile ~/.ssh/kde
    Host heroku.com
    IdentityFile ~/.ssh/heroku
  #+END_SRC

  Magit is awesome.
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package magit :ensure
           :bind ("C-x g" . magit-status)
           :config
           (setq magit-save-repository-buffers 'dontask
                 magit-push-always-verify nil))))
  #+END_SRC

* ArchLinux
  Pacman config
  #+NAME: pacman_common
  #+BEGIN_SRC conf
    [options]
    VerbosePkgLists
    UseSyslog
    CheckSpace
    HoldPkg = pacman glibc
    SigLevel = Required DatabaseOptional
    LocalFileSigLevel = Optional

    [core]
    Include = /etc/pacman.d/mirrorlist
    [extra]
    Include = /etc/pacman.d/mirrorlist
    [community]
    Include = /etc/pacman.d/mirrorlist
    [blackarch]
    Server = http://f.archlinuxvn.org/$repo/$repo/os/$arch
  #+END_SRC

  Refresh database
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S -y
  #+END_SRC

  AUR helper
  #+BEGIN_SRC yaml :tangle ~/Copy/bin/aur :shebang #!/bin/ansible-playbook
    - hosts: arch
      gather_facts: no
      vars:
        store: /tmp/aur
      vars_prompt:
        - name: package
          private: no
      tasks:
        - file: state=directory path={{store}}
        - get_url: url=https://aur4.archlinux.org/cgit/aur.git/snapshot/{{package}}.tar.gz dest={{store}}/
        - unarchive: copy=no src={{store}}/{{package}}.tar.gz dest={{store}}
        - command: nice makepkg --noconfirm --install --force --syncdeps chdir={{store}}/{{package}}
  #+END_SRC

  Yaourt config
  #+BEGIN_SRC conf :tangle ~/.yaourtrc
    AURUPGRADE=1
    EXPORT=1
    EXPORTDIR=~
    BUILD_NOCONFIRM=1
    EDITFILES=0
  #+END_SRC

  Base utils
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S haveged p7zip parallel pkgfile yaourt
    <<system_ctl>> enable --now haveged
  #+END_SRC

  #+BEGIN_SRC sh
    pkgfile -u
  #+END_SRC

  Dev-env:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S base-devel rust android-tools
  #+END_SRC

  Monitoring:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ethtool lm_sensors net-tools psmisc \
        procps-ng inetutils ltrace sysdig atop iotop
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/Copy/bin/strace :shebang #!/bin/sh :no-expand
    exec /usr/bin/ltrace -CSn2 $@
  #+END_SRC

  Of course emacs is installed, now run it
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S emacs-pkgbuild-mode
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.config/systemd/user/emacs.service
    [Unit]
    Description=Emacs

    [Service]
    ExecStart=/bin/emacs
    Restart=always
    RestartSec=1sec

    [Install]
    WantedBy=default.target
  #+END_SRC

  #+BEGIN_SRC sh :dir ~
    <<user_ctl>> enable --now emacs syncthing pulseaudio
  #+END_SRC

** kub
   :PROPERTIES:
   :header-args+: :dir /sudo:kub:
   :END:
*** Mounts
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/fstab
      LABEL=<<username>> /home/<<username>> auto
      LABEL=var /var auto
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/systemd/network/eth0.network
      [Match]
      Name = eth0

      [Network]
      Address = <<prefix>>.54/24
      Gateway = <<prefix>>.1
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/resolv.conf
      nameserver <<prefix>>.1
    #+END_SRC

*** Pacman
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/pacman.conf
      <<pacman_common>>

      [options]
      Architecture = armv7h

      [alarm]
      Include = /etc/pacman.d/mirrorlist
      [aur]
      Include = /etc/pacman.d/mirrorlist
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/pacman.d/mirrorlist
      Server = http://vn.mirror.archlinuxarm.org/$arch/$repo
    #+END_SRC

*** LED blinking
    #+BEGIN_SRC sh :tangle /sudo:kub:/usr/local/bin/leds :shebang #!/bin/sh
      echo none > /sys/class/leds/cubieboard:green:usr/trigger
      echo mmc0 > /sys/class/leds/cubieboard:blue:usr/trigger
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/systemd/system/leds.service
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/leds
      RemainAfterExit=true

      [Install]
      WantedBy=basic.target
    #+END_SRC

*** Tor
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S tor
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/tor/torrc
      ContactInfo tor at zahe dot me
      Nickname kub
      DirPort 4660
      ORPort 5880
      SOCKSPort <<prefix>>.54:9050
      MaxAdvertisedBandwidth 40 KBytes
      ExitPolicy reject *:*

      DataDirectory /var/lib/tor
      Log notice syslog
    #+END_SRC

*** HTTP
    #+BEGIN_SRC sh
      <<pacman>> -S nginx
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/nginx/nginx.conf
      events {}
      http {
      include       mime.types;
      default_type  text/plain;
      charset utf-8;
      gzip off;

      access_log  off;
      log_not_found off;

      server {
      return 301 https://$host$request_uri;
      }

      ssl_protocols TLSv1.2;
      ssl_ciphers EECDH+CHACHA20:EECDH+AES128;
      ssl_prefer_server_ciphers on;
      add_header Strict-Transport-Security max-age=31536000;

      map $request_uri $dest {
      /_ https://raw.githubusercontent.com/hdhoang/hdhoang/master/config/dotpentadactylrc;
      /c /mirror/caps2ctrl.exe;
      /d http://5digits.org/nightly/pentadactyl-latest.xpi;
      /pe http://live.sysinternals.com/;
      /s https://puttytray.goeswhere.com/download/putty.exe;
      /ws https://www.wosign.com/root/ca1_dv_free_2.crt;

      default "";
      }

      server {
      listen 443 ssl spdy default_server;
      ssl_certificate zahe.me.crt;
      ssl_certificate_key zahe.me.key;
      server_name kub.zahe.me zahe.me;
      root /home/hdhoang/Public/;
      autoindex on;
      if ($dest) {
      return 301 $dest;
      }
      location /ipfs/ {
      proxy_pass http://127.0.0.1:4005;
      }
      location ~ /mirror/(?:.*)\.part {
      return 403 incomplete;
      }
      }

      server {
      listen 443 ssl spdy;
      server_name id.zahe.me;
      root /home/hdhoang/Public/;
      index hdhoang;
      default_type text/html;
      }
      }
    #+END_SRC

*** DLNA
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S minidlna
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/minidlna.conf
      friendly_name=kub
      port=8200

      media_dir=<<storage>>
      media_dir=A,<<fav_music>>
      media_dir=V,/home/<<username>>/Videos
      media_dir=V,/home/<<username>>/Public/mirror
    #+END_SRC
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<system_ctl>> enable --now minidlna
    #+END_SRC

*** VPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo:kub:/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 0
      tls-server
      <pkcs12>
      <<kub_pfx>>
      </pkcs12>
      <dh>
      -----BEGIN DH PARAMETERS-----
      MIIBCAKCAQEAoioJw6aUXmgBDSw6SzbSZww6i7eH0MC+Eba5qGmYJnKn2zI8dBH6
      JZKnAyz9MbD21loI6KjAnOzZkBp7DKle1cACLS229Olycr22rXWPFuhMV15TohDJ
      ArazVXSJGDL9OXhdHei96K3qXofz/3AzXEVxD0unQd5sRlgNGmunofvgWBechdmn
      YQl44SZ0asC8uUY1uiKjVyQzqeNDi3rjJtTobcPdR6Pb8CnS3cfwoWzXMwUexmfJ
      VQSNaDZIeQcwV5MEHs1XViOTiEvT8IHbJojJri0geUSJ+HkX1JTxGIUj4xxKHQ0j
      AFEjqDYFh3q7U6QgFLRWZffVLgxIZVopIwIBAg==
      -----END DH PARAMETERS-----
      </dh>
      user nobody
      group nobody

      mode server

      server 10.255.0.0 255.255.255.0
      push "route <<prefix>>.54"
    #+END_SRC

*** SSH
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/ssh/sshd_config
      Protocol 2
      HostKey /etc/ssh/ssh_host_ed25519_key
      HostKey /etc/ssh/ssh_host_rsa_key

      KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
      MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com

      AllowGroups wheel
      PasswordAuthentication no
      ChallengeResponseAuthentication no
      UsePrivilegeSeparation sandbox

      Subsystem sftp /usr/lib/ssh/sftp-server
    #+END_SRC

** ton
*** Mounts
    #+BEGIN_SRC sh
      fallocate -l 2G /swap
      chmod u=rw,go= /swap
      mkswap /swap
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
      LABEL=home /home/<<username>> ntfs-3g noatime,nofail
      LABEL=ESP /boot vfat
      /swap none swap
    #+END_SRC

*** Hosts
    #+BEGIN_SRC conf :tangle /sudo::/etc/hosts
      127.0.0.1 ton
      ::1 ton
      <<prefix>>.1 vorme
      <<prefix>>.54 kub
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/00-bkap.network
      [Match]
      Name = enp4s0

      [Network]
      DNS = 8.8.8.8
      Address = 192.168.0.252/24
      Gateway = 192.168.0.1
      Address = 192.168.1.252/24
      Gateway = 192.168.1.1
      Address = 192.168.4.252/24
      Gateway = 192.168.4.1
      Address = 192.168.5.252/24
      Gateway = 192.168.5.1

      [Route]
      Destination=192.168.1.1
      Source=192.168.1.252
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/dhcp.network
      [Network]
      DHCP=ipv4
    #+END_SRC

*** Pacman
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.conf
    <<pacman_common>>

    [options]
    Architecture = auto

    [multilib]
    Include = /etc/pacman.d/mirrorlist
  #+END_SRC
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.d/mirrorlist
    Server = http://f.archlinuxvn.org/archlinux/$repo/os/$arch
  #+END_SRC

*** VPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo::/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 1
      tls-client
      <pkcs12>
      <<ton_pfx>>
      </pkcs12>

      nobind
      pull

      remote k.<<domain>> 22
      verify-x509-name kub.<<domain>> name
      remote-cert-tls server
      resolv-retry infinite
    #+END_SRC

*** Fonts
    #+BEGIN_SRC sh
      <<pacman>> -S adobe-source-{sans,serif,code}-pro-fonts adobe-source-han-sans-otc-fonts
    #+END_SRC

    #+BEGIN_SRC xml :tangle ~/.config/fontconfig/fonts.conf :padline no :comments no
      <?xml version='1.0'?>
      <!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
      <fontconfig>
        <match target="font">
          <edit mode="assign" name="rgba">
            <const>none</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hinting">
            <bool>true</bool>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hintstyle">
            <const>hintslight</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="antialias">
            <bool>true</bool>
          </edit>
        </match>
        <dir>~/.fonts</dir>
        <match target="pattern">
          <test qual="any" name="family"><string>Arial</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <match target="pattern">
          <test qual="any" name="family"><string>DejaVu Sans</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <alias>
          <family>sans-serif</family>
          <prefer>
            <family>Source Sans Pro</family>
          </prefer>
        </alias>
        <alias>
          <family>serif</family>
          <prefer>
            <family>Source Serif Pro</family>
          </prefer>
        </alias>
        <alias>
          <family>monospace</family>
          <prefer>
            <family>Source Code Pro</family>
          </prefer>
        </alias>
        <selectfont>
          <rejectfont>
            <glob>/usr/share/fonts/default/Type1/*</glob>
            <pattern>
              <patelt name="scalable">
                <bool>false</bool>
              </patelt>
            </pattern>
          </rejectfont>
        </selectfont>
      </fontconfig>
     #+END_SRC

*** Desktop
    These DBus services are provided by plasma-workspace-units.
    #+BEGIN_SRC sh :dir /sudo::
      rm /usr/share/dbus-1/services/org.kde.{kded5,kglobalaccel,kuiserver,kwalletd5}.service
    #+END_SRC

**** Inside VirtualBox
     #+BEGIN_SRC sh :dir /sudo::
       <<pacman>> -S virtualbox-guest-{modules,utils}
     #+END_SRC
     #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
       home /home/<<username>> vboxsf uid=1000,gid=100,dmode=700,fmode=600
     #+END_SRC
     #+BEGIN_SRC sh :tangle ~/.xinitrc
       VBoxClient-all&
       cp -r ~/.gnupg $XDG_RUNTIME_DIR
       chmod 700 $XDG_RUNTIME_DIR/.gnupg
       export GNUPGHOME=$XDG_RUNTIME_DIR/.gnupg
       exec gpg-agent --enable-ssh-support --daemon emacs
     #+END_SRC
     #+BEGIN_SRC sh
       XAUTHORITY=/run/user/1000/xauth startx
     #+END_SRC

**** Keyboard
     Use dvorak, swap caps for ctrl
     #+BEGIN_SRC conf :tangle /sudo::/usr/share/kbd/keymaps/caps2ctrl.map
       include "/usr/share/kbd/keymaps/i386/dvorak/dvorak.map.gz"
       keycode 58 = Control
     #+END_SRC
     #+BEGIN_SRC sh
       localectl set-keymap caps2ctrl
     #+END_SRC

     Base Japanese IME on dvorak, swap caps for ctrl
     #+BEGIN_SRC conf
       Windows Registry Editor Version 5.00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]
       "Scancode Map"=hex:00,00,00,00,00,00,00,00,02,00,00,00,1d,00,3a,00,00,00,00,00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layouts\00000411]
       "Layout File"="kbddv.dll"
     #+END_SRC

**** Pointer
     Use evdev for the touchscreen
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Atmel touchscreen"
               MatchProduct "maXTouch"
               Driver "evdev"
       EndSection
     #+END_SRC

     Use natural scrolling on touchpad
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Natural scrolling"
               MatchProduct "TouchPad"
               MatchDriver "libinput"
               Option "NaturalScrolling" "1"
       EndSection
     #+END_SRC

**** Rotation
     #+BEGIN_SRC sh :dir /sudo::
       <<pacman>> -S acpid
     #+END_SRC
     #+BEGIN_SRC text :tangle /sudo::/etc/acpi/events/rotation-button
       event=ibm/hotkey LEN0068:00 00000080 00006020
       action=sudo -u hdhoang DISPLAY=:0 /usr/local/bin/rotate-screen
     #+END_SRC
     #+BEGIN_SRC sh :tangle /sudo::/usr/local/bin/rotate-screen :shebang #!/bin/sh
       case $(xrandr | grep LVDS1 | cut -f 4 -d ' ' | tr -d '(') in
           normal) new="left";;
           left)   new="normal";;
       esac
       xrandr --output LVDS1 --rotate $new

       case $new in
           normal) matrix="1 0 0 0 1 0 0 0 1";;
           left)   matrix="0 -1 1 1 0 0 0 0 1";;
           right)  matrix="0 1 0 -1 0 1 0 0 1";;
           inverted) matrix="-1 0 1 0 -1 1 0 0 1";;
       esac
       for dev in "SynPS/2 Synaptics TouchPad" "TPPS/2 IBM TrackPoint" "Atmel Atmel maXTouch Digitizer"; do
           xinput set-prop "$dev" "Coordinate Transformation Matrix" $matrix
       done
     #+END_SRC
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now acpid
     #+END_SRC

*** Picard
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S picard chromaprint
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/MusicBrainz/Picard.conf
      [setting]
      server_host=musicbrainz.org
      server_port=80

      fingerprinting_system=acoustid
      acoustid_apikey=<<acoustid_key>>
      acoustid_fpcalc=/usr/bin/fpcalc

      save_images_to_tags=true
      save_only_front_images_to_tags=true
      save_images_to_files=false
      ca_provider_use_amazon=true
      ca_provider_use_caa=true
      ca_provider_use_caa_release_group_fallback=true
      ca_provider_use_whitelist=true
      caa_image_size=1
      caa_approved_only=true
      caa_restrict_image_types=true
      analyze_new_files=false
      ignore_file_mbids=false
      quit_confirmation=true
      va_name=Various Artists
      nat_name=
      standardize_artists=true

      windows_compatibility=true
      ascii_filenames=false
      rename_files=true
      move_files=true
      file_naming_format="$if2(%albumartist%,%artist%)/$if($ne(%albumartist%,),%album%/)$if($gt(%totaldiscs%,1),%discnumber%-,)$if($ne(%albumartist%,),$num(%tracknumber%,2) ,)$if(%_multiartist%,%artist% - ,)%title%"
      move_files_to=<<fav_music>>/_new
      move_additional_files=true
      move_additional_files_pattern=*.jpg *.png *.jpeg
      delete_empty_dirs=true

      browser_integration=true
      browser_integration_port=8000
      browser_integration_localhost_only=true

      dont_write_tags=false
      preserve_timestamps=false
      write_id3v1=true
      write_id3v23=true
      id3v23_join_with=/
      id3v2_encoding=utf-16
      remove_ape_from_mp3=true
      remove_id3_from_flac=true
    #+END_SRC
*** mpd
    :PROPERTIES:
    :header-args+: :dir ~
    :END:

    Create playlist
    #+BEGIN_SRC sh
      mpc listall > <<fav_music>>/pq.m3u
    #+END_SRC

    Shuffle and play
    #+BEGIN_SRC sh :results raw
      mpc -q clear && mpc load pq && mpc -q shuffle && mpc play
    #+END_SRC

    Delete currently playing track
    #+BEGIN_SRC sh :eval query
      rm -v <<fav_music>>/"$(mpc -f %file% | head -1)"
    #+END_SRC

*** mpv
    #+BEGIN_SRC conf :tangle ~/.config/mpv/mpv.conf
      sub-auto=fuzzy
      hwdec=auto
      hwdec-codecs=all
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/mpv/input.conf
      q quit_watch_later
      MOUSE_BTN0 cycle pause
      MOUSE_BTN1 show_progress
      MOUSE_BTN2 cycle fullscreen
      z set window-scale 0.5
      Z set window-scale 1

      ; show_progress
      f show_text "${filename}"
      d cycle audio
      y add volume 1
      i add volume -1
      g add sub-delay  0.1
      h add sub-delay -0.1
      x cycle mute

      k frame_step
      ' seek +10
      a seek -10
      , seek +60
      o seek -60
      . seek +300
      e seek -300

      u cycle fullscreen
    #+END_SRC
* Emacs
  :PROPERTIES:
  :header-args+: :tangle ~/.emacs
  :END:

  OOBE settings:
  #+BEGIN_SRC elisp
    (server-mode t)
    (desktop-save-mode t)
    (global-set-key (kbd "C-x C-r")
                    (lambda () (interactive)
                      (revert-buffer :noconfirm t)))
    (defalias 'yes-or-no-p #'y-or-n-p)
    (defalias 'dabbrev-expand #'hippie-expand)
    (setq auto-save-default nil
          calendar-week-start-day 1
          default-input-method "vietnamese-telex"
          desktop-load-locked-desktop t
          inhibit-startup-screen t
          make-backup-files nil
          scroll-preserve-screen-position t
          tramp-default-method "ssh"
          undo-tree-mode-lighter ""
          visible-bell t
          frame-title-format "%b")
    (set-language-environment "UTF-8")
    (setq-default buffer-file-coding-system 'utf-8-unix)
    (setq-default sentence-end-double-space nil)
    (global-set-key (kbd "C-\\") #'toggle-input-method)
    (blink-cursor-mode -1)
    (show-paren-mode t)
    (winner-mode)
  #+END_SRC

  Package management
  #+BEGIN_SRC elisp
    (package-initialize)
    (setq package-archives
          '(("gnu" . "https://elpa.gnu.org/packages/")
            ("marmalade" . "https://marmalade-repo.org/packages/")
            ("melpa" . "http://melpa.org/packages/")))
    (unless (package-installed-p 'use-package)
      (package-refresh-contents)
      (package-install 'use-package))
    (require 'use-package)
  #+END_SRC

  Color theme
  #+BEGIN_SRC elisp
    (use-package color-theme-sanityinc-solarized :ensure
      :config (load-theme 'sanityinc-solarized-light t))
  #+END_SRC

  Font on Windows
  #+BEGIN_SRC elisp
    (when (eq window-system 'w32)
      (if (> window-system-version 5)
          (set-default-font "Consolas-12" :frames t)
        (set-default-font "Lucida Console-10" :frames t)))
  #+END_SRC

** Editing
   Vim-style
   #+BEGIN_SRC elisp
     (use-package evil :ensure
       :config
       (evil-mode t)
       (evil-set-initial-state 'special-mode 'emacs)
       (dolist (state '(normal motion))
         (evil-define-key state global-map
           (kbd "<SPC>") #'evil-scroll-down
           (kbd "S-<SPC>") #'evil-scroll-up))
       (dolist (state '(insert motion normal))
         (evil-define-key state global-map
           (kbd "C-t") #'transpose-chars
           (kbd "C-d") #'delete-char
           (kbd "C-k") #'kill-line
           (kbd "C-y") #'evil-paste-before
           (kbd "C-a") #'beginning-of-line (kbd "C-e") #'end-of-line
           (kbd "C-f") #'forward-char   (kbd "C-b") #'backward-char
           (kbd "C-n") #'next-line      (kbd "C-p") #'previous-line
           (kbd "<down>") #'next-line   (kbd "<up>") #'previous-line
           (kbd "j") #'next-line        (kbd "k") #'previous-line
           (kbd "C-v") #'evil-scroll-down (kbd "M-v") #'evil-scroll-up
           (kbd "C-r") #'isearch-backward))
       (evil-define-key 'insert global-map
         "j" #'self-insert-command "k" #'self-insert-command)
       (evil-define-key 'motion help-mode-map
         (kbd "<tab>") #'forward-button))
   #+END_SRC

   Aggressive indent
   #+BEGIN_SRC elisp
     (use-package aggressive-indent :ensure
       :diminish ""
       :config (global-aggressive-indent-mode))
   #+END_SRC

   Switch window with ace
   #+BEGIN_SRC elisp
     (use-package ace-window :ensure
       :config (ace-window-display-mode 1)
       :bind ("C-x o" . ace-window))
   #+END_SRC

   Do things with helm:
   #+BEGIN_SRC elisp
     (use-package helm :ensure
       :config
       (helm-mode 1)
       (define-key shell-mode-map (kbd "M-r") #'helm-comint-input-ring)
       :diminish helm-mode
       :bind (("C-h SPC" . helm-all-mark-rings)
              ("C-x b" . helm-mini)
              ("C-x C-b" . helm-buffers-list)
              ("C-x C-f" . helm-find-files)
              ("C-c g" . helm-do-grep)
              ("M-s o" . helm-occur)
              ("M-x" . helm-M-x)))
     (require 'helm-config)
     (use-package evil
       :config (dolist (state '(insert motion normal))
                 (evil-define-key state global-map
                   (kbd "M-y") #'helm-show-kill-ring)))
   #+END_SRC

** Org
   #+BEGIN_SRC elisp
     (add-hook 'org-mode-hook
               '(lambda ()
                  (add-hook 'before-save-hook 'org-align-all-tags
                            :local t)))
     (org-babel-do-load-languages 'org-babel-load-languages
                                  '((sh . t)))
     (setq org-src-fontify-natively t)
   #+END_SRC

*** Crypt
    #+BEGIN_SRC elisp
      (require 'org-crypt)
      (add-hook 'org-mode-hook
                '(lambda ()
                   (add-hook 'before-save-hook 'org-encrypt-entries
                             :local t)))
      (setq org-tags-exclude-from-inheritance '("crypt"))
      (setq org-crypt-key "<<username>>@keybase.io")
    #+END_SRC

    Make it possible to tangle encrypted block
    #+BEGIN_SRC elisp
      (remove-hook 'org-babel-pre-tangle-hook #'save-buffer)
    #+END_SRC

** Doc-View
   #+BEGIN_SRC elisp
     (eval-after-load 'doc-view
       '(bind-key (kbd "<mouse-1>") #'doc-view-scroll-up-or-next-page doc-view-mode-map))
     (setq doc-view-resolution 300
           doc-view-cache-directory (expand-file-name "~/.emacs.d/doc-view"))
     (use-package evil
       :config (add-hook 'view-mode-hook #'evil-emacs-state))
   #+END_SRC

** Dired
   #+BEGIN_SRC elisp
     (use-package dired+ :ensure
       :config
       (require 'dired+)
       (global-dired-hide-details-mode -1)
       (defun dired-open ()
         (interactive)
         (dired-do-shell-command "xdg-open &" :file-list (dired-get-marked-files)))
       (define-key dired-mode-map (kbd "RET") #'dired-open)
       (define-key dired-mode-map (kbd "<mouse-2>") #'dired-open)
       (setq dired-recursive-copies 'always
             dired-recursive-deletes 'always
             dired-listing-switches "-alh"
             dired-guess-shell-alist-user
             '(("\\.cb.\\'" "okular")
               ("." "xdg-open;"))))
   #+END_SRC

** Eshell
   Put eshell on a convenient binding
   #+BEGIN_SRC elisp
     (global-set-key (kbd "C-x M-m") #'eshell)
   #+END_SRC

   I like the prompt to be on a separate line.
   #+BEGIN_SRC elisp
     (setq eshell-prompt-function
           '(lambda ()
              (concat (eshell/pwd) "\n"
                      (int-to-string eshell-last-command-status) " % "))
           eshell-prompt-regexp "^[[:digit:]]\\{1,3\\} % ")
   #+END_SRC

   These are terminal-manipulating commands
   #+BEGIN_SRC elisp
     (eval-after-load 'em-term
       '(progn
          (dolist (prog '("atop" "systemd-cgls" "journalctl"))
            (add-to-list 'eshell-visual-commands prog))
          (add-to-list 'eshell-visual-options '("ssh" "-t"))))
   #+END_SRC

   Profile:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/profile :no-expand
     addpath ~/Copy/bin
   #+END_SRC

   Aliases:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias cp kioclient5 cp $*
     alias vim find-file $1
     alias i yaourt $*
     alias j journalctl -afb $*
     alias sc <<system_ctl>> $*
     alias uc <<user_ctl>> $*
     alias ytdl <<yt-dl>> -a /home/<<username>>/q.txt
     alias fr free -h
   #+END_SRC

* Ansible
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ansible
  #+END_SRC

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package yaml-mode :ensure)
         (use-package ansible-doc :ensure
           :config (add-hook 'yaml-mode-hook #'ansible-doc-mode))))
  #+END_SRC

** Inventory
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible_inventory
   :END:

   Here are the hosts and their variables
   #+BEGIN_SRC conf
     [arch]
     kub ansible_python_interpreter=/usr/bin/python2
     ton ansible_python_interpreter=/usr/bin/python2 ansible_connection=local

     [all:vars]
     user=<<username>>
     home=/home/<<username>>
     h=<<storage>>
     conf="{{h}}/config/{{ansible_hostname}}"
     locale=en_US
     prefix=<<prefix>>
   #+END_SRC

** Config
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible.cfg
   :END:

   Keep the inventory here
   #+BEGIN_SRC conf
     [defaults]
     inventory = ~/.ansible_inventory
   #+END_SRC

   For some reason ControlMaster isn't working
   #+BEGIN_SRC conf
     [ssh_connection]
     ssh_args=-o ControlMaster=no
   #+END_SRC

* Firefox
  :PROPERTIES:
  :header-args+: :tangle ~/.pentadactylrc
  :END:
  This file is in vimrc syntax

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(use-package vimrc-mode :ensure))
  #+END_SRC

  Use DuckDuckGo:

  #+BEGIN_SRC vimrc
    silent bmark -keyword ddg -t DDG https://duckduckgo.com/?kn=1&kp=-1&kae=c&q=%s
    set defsearch=ddg
  #+END_SRC

  Use backspace to go back:
  #+BEGIN_SRC vimrc
    set! browser.backspace_action=0
  #+END_SRC

  Don't let middle mouse paste:
  #+BEGIN_SRC vimrc
    set! middlemouse.contentLoadURL=false
  #+END_SRC

  Restore C-j for Downloads:
  #+BEGIN_SRC vimrc
    map <C-j> -ex dialog downloads
  #+END_SRC

  Bind stop to an easy binding:
  #+BEGIN_SRC vimrc
    map s <C-c>
  #+END_SRC

  Make scrolling easier:
  #+BEGIN_SRC vimrc
    map <space> <C-d>
    map <S-space> <C-u>
  #+END_SRC

  Pin tab:
  #+BEGIN_SRC vimrc
    map <A-p> -ex pintab!
  #+END_SRC

  Move to first or last:
  #+BEGIN_SRC vimrc
    map <A-!> -ex tabm 1
    map <A-$> -ex tabm $
  #+END_SRC

  Fast switching:
  #+BEGIN_SRC vimrc
    map -m normal,insert <F1> <C-^>
  #+END_SRC

  Don't raise these openings:
  #+BEGIN_SRC vimrc
    set activate-=diverted,links,tabopen,paste
  #+END_SRC

  Open help in a new tab
  #+BEGIN_SRC vimrc
    set newtab=help
  #+END_SRC

  Keep hint keys under left fingers:
  #+BEGIN_SRC vimrc
    set hintkeys=12345
  #+END_SRC

  Make hint text readable
  #+BEGIN_SRC vimrc
    highlight Hint -append font-size: 14px !important
  #+END_SRC

  Unzoom image:
  #+BEGIN_SRC vimrc
    map <A-t> -js content.document.toggleImageSize()
  #+END_SRC

  Show link in commandline:
  #+BEGIN_SRC vimrc
    set guioptions+=c
    set showstatuslinks=command
  #+END_SRC

  Scroll by one line:
  #+BEGIN_SRC vimrc
    set scrollsteps=1
  #+END_SRC

  Show feeds first in pageinfo:
  #+BEGIN_SRC vimrc
    set pageinfo=fgmse
  #+END_SRC

  Use visual bell:
  #+BEGIN_SRC vimrc
    set visualbell
  #+END_SRC

  Bookmarks and preferences:
  #+BEGIN_SRC vimrc
    map <C-S-s> -ex bmark -keyword ac -t config about:config
    \ bmark -keyword bgp -t BGP http://bgp.he.net/search?search[search]=%s
    \ bmark -keyword v -t valsi http://vlasisku.lojban.org/?query=%s
    \ bmark -keyword c -t camxes http://camxes.lojban.org/?text=%s
    \ bmark -keyword yb -t youtube https://youtube.com/watch?v=%s
    \ bmark -keyword cw -t 'CrawlWiki' http://crawl.chaosforge.org/index.php?title=Special%3ASearch&search=%s
    \ bmark -keyword bb -t burnbit http://burnbit.com/burn?file=%s
    \ bmark -keyword b -t btdigg https://btdigg.org/search?q=%s&order=0&p=0
    \ bmark -keyword ba -t btdigg https://btdigg.org/search?q=%s&order=2&p=0
    \ bmark -keyword m -t zing http://mp3.zing.vn/tim-kiem/bai-hat.html?q=%s
    \ bmark -keyword ma -t artist http://musicbrainz.org/search?advanced=1&type=artist&tport=8000&query=%s
    \ bmark -keyword mg -t group http://musicbrainz.org/search?advanced=1&type=release_group&tport=8000&query=%s
    \ bmark -keyword mr -t recording http://musicbrainz.org/search?advanced=1&type=recording&tport=8000&query=%s
    \ bmark -keyword gm -t gmail https://mail.google.com/mail/#spam
    \ set! accessibility.browsewithcaret_shortcut.enabled=false
    \ set! browser.newtabpage.enabled=false
    \ set! browser.privatebrowsing.dont_prompt_on_enter=true
    \ set! browser.sessionstore.restore_pinned_tabs_on_demand=true
    \ set! browser.shell.checkDefaultBrowser=false
    \ set! browser.startup.homepage=about:blank
    \ set! browser.startup.page=3
    \ set! general.warnOnAboutConfig=false
    \ set! security.OCSP.enabled=0
    \ set! security.warn_viewing_mixed=false
    \ set! layout.spellcheckDefault=0
    \ set! middlemouse.paste=true
    \ set! ui.key.menuAccessKey=0
    \ set! browser.anchor_color="#6c71c4"
    \ set! browser.display.background_color="#fdf6e3"
    \ set! browser.display.foreground_color="#657b83"
    \ set! browser.display.use_system_colors=false
    \ set! font.default.x-western="sans-serif"
    \ set! font.minimum-size.x-western=15
    \ if /NT 6/.test(window.navigator.oscpu)
    \     set! font.name.monospace.x-western=Consolas
    \ fi
    \ set! extensions.checkCompatibility.nightly=false
    \ set! extensions.https_everywhere._observatory.alt_roots=true
    \ set! extensions.https_everywhere._observatory.enabled=true
    \ set! extensions.https_everywhere._observatory.priv_dns=true
    \ set! plugins.hide_infobar_for_missing_plugin=true
    \ set! browser.download.manager.alertOnEXEOpen=false
    \ set! browser.download.manager.scanWhenDone=false
    \ set! browser.search.context.loadInBackground=true
    \ set! intl.charset.default=UTF-8
    \ set! network.http.pipelining=true
    \ set! network.http.pipelining.aggressive=true
    \ set! network.http.pipelining.ssl=true
    \ set! network.protocol-handler.expose.magnet=false
    \ set! network.proxy.socks=kub.<<domain>>
    \ set! network.proxy.socks_port=9050
    \ set! network.proxy.socks_remote_dns=true
    \ set! toolkit.telemetry.enabled=true
    \ js services.permissions.add(services.io.newURI("http:depositfiles.com",null,null), 'image', services.permissions.DENY_ACTION)
    \ js services.loginManager.setLoginSavingEnabled("accounts.google.com", false)
  #+END_SRC

  Strip tracker from location, thanks to [[https://userscripts.org/scripts/show/93825][Bruno Barão]] and [[https://github.com/5digits/dactyl/commit/7a1ffa5b555399c5d0925ad599e2640070bd128d][Kris Maglione]].
  #+BEGIN_SRC vimrc
    autocmd DOMLoad (utm|wa)_ -js win.history.replaceState("Remove trackers", '', doc.location.href.replace(/&?(utm|wa)_[^&]+/g,'').replace(/\?$/,''))
  #+END_SRC

  Facebook
  #+BEGIN_SRC vimrc
    bmark -keyword fb -t facebook https://fb.me/%s
    map <A-s> -js dactyl.open("https://www.facebook.com/sharer/sharer.php?u=" + content.location)
  #+END_SRC

  Feedly
  #+BEGIN_SRC vimrc
    map <A-f> -js dactyl.open("https://feedly.com/i/spotlight/" + content.location)
    js services.permissions.add(services.io.newURI("http:feedly.com",null,null), 'popup', services.permissions.ALLOW_ACTION)
    set passkeys+=feedly.com:vjkga
    style feedly.com <<EOS
    .websiteCallForAction { display: none !important }
    EOS
  #+END_SRC

  Pocket
  #+BEGIN_SRC vimrc
    js services.permissions.add(services.io.newURI("http:getpocket.com",null,null), 'popup', services.permissions.ALLOW_ACTION)
    set passkeys+=getpocket.com:aojk
    style getpocket.com <<EOS
    ,* { font-family: sans-serif !important }
    code, pre { font-family: monospace !important }
    EOS
  #+END_SRC

  Site keyboard shortcuts:
  #+BEGIN_SRC vimrc
    set passkeys+=tumblr.com:jk
    set passkeys+=mail.google.com/mail/:'#!ms+-/? jknpu'
    set passkeys+=google.com/contacts/:'#jkoux,.'
  #+END_SRC

  Switch to reader mode:
  #+BEGIN_SRC vimrc
    map <A-r> -js dactyl.open("about:reader?url=" + content.location)
  #+END_SRC

* Secrets							      :crypt:
-----BEGIN PGP MESSAGE-----
Version: GnuPG v2

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
AY8r5/SlaiycSffg6wbP
=PpZ2
-----END PGP MESSAGE-----
