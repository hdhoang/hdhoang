#+STARTUP: showall
#+PROPERTY: header-args+ :cache yes
#+PROPERTY: header-args+ :comments org
#+PROPERTY: header-args+ :mkdirp yes
#+PROPERTY: header-args+ :noweb yes
#+PROPERTY: header-args+ :results silent
#+PROPERTY: header-args+ :tangle-mode 384
#+PROPERTY: header-args:text+ :eval no
* Hoang Duc Hieu
#+EMAIL: 1988 / +84-166-241-9526 / cv@zahe.me
#+OPTIONS: toc:nil date:nil arch:nil num:nil author:nil email:t
#+LATEX_CLASS_OPTIONS: [twocolumn]
#+LATEX_HEADER: \usepackage{titling}
#+LATEX_HEADER: \pretitle{\begin{flushright}\LARGE}
#+LATEX_HEADER: \posttitle{\par\end{flushright}}
#+LATEX_HEADER: \preauthor{\begin{flushright}}
#+LATEX_HEADER: \postauthor{\end{flushright}}
#+LATEX_HEADER: \pagenumbering{gobble}
** Education
  - 2014 - now :: Studying System Administration and software testing at Bachkhoa-Aptech
                  (graduating 2016H2)
  - 2013 - 2014 :: Finished K12 and completed accounting course at
                   Quang Trung private school
  - 2007 - 2012 :: Self-learned various topics
    - Programming languages (web and backend)
    - History of free software
    - Hanoi GNU/Linux user community
    - Wing-chun martial arts
    - The constructed logical language Lojban
  - 2006 - 2007 :: Freshman in computer programming at Monash College,
                   Australia (earned Distinction and High Distinction
                   in most subjects)
  - 2003 - 2006 :: Chu Van An Highschool, majoring in English (earned
                   2nd place in city-level competition)
#+LATEX: \newpage
** Qualifications and skills
*** IT skills
  - In-depth GNU/Linux usage and administration, experienced in
    self-hosting web sites
  - Comprehensive network understanding
  - Office equipment troubleshooting
  - Familiarity with various OSes
  - Using version control systems, especially git
  - Contributing to free software projects, collected in [[https://www.openhub.net/accounts/hdhoang/positions][OpenHub as hdhoang]]
*** Language skills
  - Fluency in English (990 in TOEIC, 2015)
  - Elementary Japanese (striving to acquire N3 in early 2016)
*** Others
  - Self-teaching discipline
  - Strong interest in learning new topics
** Objectives							    :ARCHIVE:
  - What ::
    + Resident technician for an organization
    + System/network administrator at a service provider
  - When :: part-time, until graduation
  - Why :: a challenging field with continual updates, but still have low-stress time for self-improving
  - Who :: NGO, SME
  - Where :: HN - HY - HD
** Interests
  - Exploring science, history, and natural subjects
  - Science-fictional novels, rational fanfictions
  - Electric guitar riffs
  - Frequent blood donor (until no longer eligible)
* Places and names
  #+BEGIN_SRC html :tangle /kub:Public/index.html
    <!doctype html>
    <meta charset=utf-8>

    <link rel="openid2.provider"
          href="https://www.google.com/accounts/o8/ud?source=profiles" >
    <link rel="openid2.local_id"
          href="https://www.google.com/profiles/110711359835920217300" >

    <!-- <title>OpenID endpoint (myopenid)</title> -->
    <!-- <link rel="openid.server" href="http://www.myopenid.com/server" /> -->
    <!-- <link rel="openid.delegate" href="http://lazni.myopenid.com/" /> -->

    <!-- <title>OpenID endpoint (ownopenidserver)</title> -->
    <!-- <link rel="openid.server" -->
    <!--       href="https://id.<<domain>>/server.py/endpoint"> -->

    <!-- <title>OpenID endpoint (poit)</title> -->
    <!-- <link rel="openid2.provider" -->
    <!--       href="https://id.<<domain>>/poit.py"> -->

    <!-- <title>OpenID endpoint (startssl)</title> -->
    <!-- <link rel="openid2.provider openid.server" -->
    <!--      href="https://www.startssl.com/id.ssl" /> -->
    <!-- <link rel="openid2.local_id openid.delegate" -->
    <!--      href="https://<<username>>.startssl.com/" /> -->

    <p>Elsewhere on the net:<ul>
        <li><a rel=me href=https://telegram.me/<<username>>>Telegram</a></li>
        <li><a rel=me href=https://www.openhub.net/accounts/<<username>>>OpenHub</a></li>
        <li><a rel=me href=https://gitlab.com/u/<<username>>>Gitlab</a></li>
        <li><a rel=me href=https://github.com/<<username>>?tab=activity>Github</a></li>
        <li><a rel=me href=https://plus.google.com/u/0/110711359835920217300/about>Google</a></li>
        <li><a rel=me href=http://www.last.fm/user/hdh0>Last.fm</a></li>
        <li><a rel=me href=https://facebook.com/hdh000/about>Facebook</a></li>
        <li><a rel=me href=https://twitter.com/lasigmaz>Twitter</a></li>
        <li><a rel=me href=https://steamcommunity.com/id/lasigmaz>Steam</a></li>
    </ul></p>

    <p xmlns:dct="http://purl.org/dc/terms/" xmlns:vcard="http://www.w3.org/2001/vcard-rdf/3.0#">
      <a rel="license"
         href="http://creativecommons.org/publicdomain/zero/1.0/">
        <img src="http://i.creativecommons.org/p/zero/1.0/88x31.png" style="border-style: none;" alt="CC0" />
      </a>
      <br />
      To the extent possible under law,
      <a rel="dct:publisher"
         href="https://<<domain>>">
        <span property="dct:title">Hoàng Đức Hiếu</span></a>
      has waived all copyright and related or neighboring rights to
      this work.
    This work is published from:
    <span property="vcard:Country" datatype="dct:ISO3166"
          content="VN" about="https://<<domain>>">
      Vietnam</span>.
    </p>
  #+END_SRC
#+BEGIN_SRC text :tangle /vorme:/etc/config/dropbear

config dropbear 'global'
	option PasswordAuth 'on'
	option Port '22'


#+END_SRC
  #+NAME: username
  #+BEGIN_SRC text
    hdhoang
  #+END_SRC

  #+NAME: domain
  #+BEGIN_SRC text
    zahe.me
  #+END_SRC

  #+BEGIN_SRC emacs-lisp :tangle ~/.emacs
    (setq user-mail-address "<<username>>@<<domain>>")
  #+END_SRC

  #+NAME: storage
  #+BEGIN_SRC text
    /home/<<username>>/Copy
  #+END_SRC

  #+NAME: fav_music
  #+BEGIN_SRC text
    /home/<<username>>/Music
  #+END_SRC

  #+NAME: prefix
  #+BEGIN_SRC text
    10.117.14
  #+END_SRC

  #+NAME: system_ctl
  #+BEGIN_SRC text
    systemctl --system --no-pager
  #+END_SRC

  #+NAME: user_ctl
  #+BEGIN_SRC text
    systemctl --user --no-pager
  #+END_SRC

  #+NAME: pacman
  #+BEGIN_SRC text
    pacman --noconfirm --needed
  #+END_SRC

  #+NAME: ytdl
  #+BEGIN_SRC text
    youtube-dl --format "[height <=? 720]" --output ~/Videos/"%(uploader)s %(upload_date)s %(title)s@%(id)s.%(ext)s"
  #+END_SRC

* OpenVPN
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S openvpn
  #+END_SRC
  #+NAME: openvpn_common
  #+BEGIN_SRC conf
    dev tun
    topology subnet
    persist-key
    persist-tun
    keepalive 10 30
    tls-version-min 1.2
    tls-cipher TLS-DHE-RSA-WITH-AES-128-CBC-SHA
    <tls-auth>
    <<ta_key>>
    </tls-auth>
    <ca>
    -----BEGIN CERTIFICATE-----
    MIIEYTCCA0mgAwIBAgIJAPxrcItU3yz8MA0GCSqGSIb3DQEBCwUAMH0xCzAJBgNV
    BAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFOb2kxDTALBgNVBAoTBHph
    aGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3phaGUubWUxHjAcBgkqhkiG
    9w0BCQEWD2hkaG9hbmdAemFoZS5tZTAeFw0xNTA5MjYxMTM0NTRaFw0yNTA5MjMx
    MTM0NTRaMH0xCzAJBgNVBAYTAlZOMQswCQYDVQQIEwJITjEOMAwGA1UEBxMFSGFO
    b2kxDTALBgNVBAoTBHphaGUxEDAOBgNVBAMTB3phaGUgQ0ExEDAOBgNVBCkTB3ph
    aGUubWUxHjAcBgkqhkiG9w0BCQEWD2hkaG9hbmdAemFoZS5tZTCCASIwDQYJKoZI
    hvcNAQEBBQADggEPADCCAQoCggEBANXOfdISWeotIr3neKpj6IGBlCLMEBNtMB1r
    bTIgkxe9tnNd4jBufq6duLK91ioqcJiAxMLRovYtaRTOpQit5/PnAm2Iwu3u2mGX
    EftWEBSVt437NMVA6L2Jemv1lp81vmzJIODgPQ9elrNteQ3ccAMCpuj/l6PhGeFq
    JvK+dNIJcm2+xM15S6ESwjsZxwijiT3TMJAjXJPC5R3gpULoTHrphPGrS/0RIq9c
    Bd/+4Q7k1MguPK2XSKHiJnUIkQJ/m/XGT2iXVEzhOsHZ8vlaNq1xBzTko10nEb7I
    sOQjuH4GCZMeoYnF3egg534fg+BYPAecuKglqdIpnm4+syJsrR0CAwEAAaOB4zCB
    4DAdBgNVHQ4EFgQUsDCM7/aJ6AjPVQPEbdDTiTa9WIswgbAGA1UdIwSBqDCBpYAU
    sDCM7/aJ6AjPVQPEbdDTiTa9WIuhgYGkfzB9MQswCQYDVQQGEwJWTjELMAkGA1UE
    CBMCSE4xDjAMBgNVBAcTBUhhTm9pMQ0wCwYDVQQKEwR6YWhlMRAwDgYDVQQDEwd6
    YWhlIENBMRAwDgYDVQQpEwd6YWhlLm1lMR4wHAYJKoZIhvcNAQkBFg9oZGhvYW5n
    QHphaGUubWWCCQD8a3CLVN8s/DAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUA
    A4IBAQAKkiDOWmwu1D+qbCSYaSxiMfJ70FyA/o+AuCDeaGxKdFLZ2JQgYK/az3y8
    tGQKBc6AdUY7BoN1Ab/6TOz+hWvmyNOOvq2AMgt2bHHA+JquRZMdgw59OtbB2BjC
    vBs2cxRJWdmv8aSltcqVpm2HNHy3mzcq8i0CdFluxDV+zQmvhGVypAipYTlhdi0l
    KLJlB+3fqS5GQB0wPmkV2N6WJdm0NfoTbBOCXwVb4ChyrgryQaOQi5nu8wO9tzeO
    kK/jQJRFKpdwBYqAe0Q/JP95pVjctyiVFg97ppvQ557QFcY1pHapAwhyBmxYiLak
    W4pz42IduC2pnZ3ut4C7UzpeDMRr
    -----END CERTIFICATE-----
    </ca>
  #+END_SRC

* SSH
  :PROPERTIES:
  :header-args+: :tangle ~/.ssh/config
  :END:

  SSH encryption settings by https://stribika.github.io/2015/01/04/secure-secure-shell.html

  #+BEGIN_SRC conf
    Host *
    KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
    Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com,hmac-sha1
  #+END_SRC

  Machines
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    vorme ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCf2C8j0GFA8eq8Vgva/9KI4cF4Q23v4rBk6zAxoyIJvENGkpDuUba4AOMabUkPiXU76KVbx/h4fOivjrWoUNG6Z0xEOJTQqVwuk7788dwIm49Ba+ZOC/sCtT7dsbshFpzXmkdASsZty0foFSILRADDTlB1MZiN9wJRlnjkmIO9WiSMYnuGzolO2f+Gy6LFrtQF1ZgOOqPToO4u4li3VPh1zdoY5+IQul9BQJGU7tMZrleH09LcOUlip8SHZYuXu/Zlb9GSK7Cj7WfGaR0k+xvs657n41haffQ5CxTjocqZdv7eO4Uo2ryWXn2Ck7DwKH6KMjEJZRbX32zLsTacQNgR
    kub,<<prefix>>.54 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGtY5ERdvH+mAQKfy270I+eEaZ2i6FhhEjG0EuzDxIym
  #+END_SRC
  #+BEGIN_SRC conf
    Host vorme
    User root
    IdentityFile ~/.ssh/kub
    Host kub
    User <<username>>
    IdentityFile ~/.ssh/kub
  #+END_SRC
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'tramp
      '(add-to-list 'tramp-default-proxies-alist '("kub" "root" "/ssh:kub:")))
  #+END_SRC

* KDE
** kwin
   :PROPERTIES:
   :header-args+: :tangle ~/.config/kwinrulesrc
   :END:

   #+BEGIN_SRC conf
     [1]
     Description=Window settings for firefox
     shortcut=F5
     shortcutrule=2
     windowrole=browser
     windowrolematch=1
     wmclass=navigator firefox
     wmclasscomplete=true
     wmclassmatch=1
   #+END_SRC

   Put emacs on F4
   #+BEGIN_SRC conf
     [2]
     Description=Application settings for emacs
     shortcut=F4
     shortcutrule=2
     wmclass=emacs
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   Put konsole on F6
   #+BEGIN_SRC conf
     [3]
     Description=Application settings for konsole
     shortcut=F6
     shortcutrule=2
     wmclass=konsole
     wmclasscomplete=false
     wmclassmatch=1
   #+END_SRC

   #+BEGIN_SRC conf
     [4]
     Description=No border on anything
     noborder=true
     noborderrule=2
   #+END_SRC

   #+BEGIN_SRC conf
     [General]
     count=4
   #+END_SRC

* Git
  #+BEGIN_SRC conf :tangle .git/config
    [core]
            repositoryformatversion = 0
            filemode = true
            bare = false
            logallrefupdates = true
    [remote "origin"]
            url = https://gitlab.com/<<username>>/<<username>>
            pushUrl = gitlab.com:<<username>>/<<username>>
            pushUrl = github.com:<<username>>/<<username>>
            pushUrl = bitbucket.org:<<username>>/<<username>>
            fetch = +refs/heads/*:refs/remotes/origin/*
    [branch "master"]
            remote = origin
            merge = refs/heads/master
  #+END_SRC

  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S git
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [user]
    name = Hoàng Đức Hiếu
    email = <<username>>@<<domain>>
    [color]
    ui = auto
    [core]
    eol = lf
    whitespace = trailing-space,space-before-tab
    [alias]
    ml = log --reverse --topo-order ORIG_HEAD..
    [merge]
    conflictstyle = diff3
    [push]
    default = simple
    [pull]
    rebase = true
    [rebase]
    stat = true
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias g git $*
  #+END_SRC

  Code hosting sites:
  #+BEGIN_SRC conf :tangle ~/.ssh/known_hosts
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==
    gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
  #+END_SRC
  #+BEGIN_SRC conf :tangle ~/.ssh/config
    Host gitlab.com github.com bitbucket.org
    User git
    IdentityFile ~/.ssh/git
    Host git.kde.org
    User git
    IdentityFile ~/.ssh/kde
    Host heroku.com
    IdentityFile ~/.ssh/heroku
  #+END_SRC

  Magit is awesome.
  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package magit
           :bind ("C-x g" . magit-status)
           :config
           (setq magit-save-repository-buffers 'dontask
                 magit-push-always-verify nil))))
  #+END_SRC

* Crawl
  #+BEGIN_SRC conf :tangle ~/.crawlrc
    tile_full_screen = false
    autopickup_exceptions += <tomahawk, <throwing net, <javelin, <rock, <immol
    autopickup_exceptions += <misc, <ego, <artefact, <mutagenic
  #+END_SRC

* ArchLinux
  Pacman config
  #+NAME: pacman_common
  #+BEGIN_SRC conf
    [options]
    VerbosePkgLists
    UseSyslog
    CheckSpace
    HoldPkg = pacman glibc
    SigLevel = Required DatabaseOptional
    LocalFileSigLevel = Optional

    [core]
    Include = /etc/pacman.d/mirrorlist
    [extra]
    Include = /etc/pacman.d/mirrorlist
    [community]
    Include = /etc/pacman.d/mirrorlist
    [blackarch]
    Server = http://f.archlinuxvn.org/$repo/$repo/os/$arch
  #+END_SRC

  Refresh database
  #+BEGIN_SRC sh :dir /sudo::
    dirmngr --daemon
    pacman-key -r 7533BAFE69A25079
    pacman-key --lsign 7533BAFE69A25079
    <<pacman>> -S -y
  #+END_SRC

  AUR helper
  #+BEGIN_SRC yaml :tangle ~/Copy/bin/aur :shebang #!/bin/ansible-playbook
    - hosts: arch
      gather_facts: no
      vars:
        store: /tmp/aur
      vars_prompt:
        - name: package
          private: no
      tasks:
        - file: state=directory path={{store}}
        - get_url: url=https://aur4.archlinux.org/cgit/aur.git/snapshot/{{package}}.tar.gz dest={{store}}/
        - unarchive: copy=no src={{store}}/{{package}}.tar.gz dest={{store}}
        - command: nice makepkg --noconfirm --install --force --syncdeps chdir={{store}}/{{package}}
  #+END_SRC

  Yaourt config
  #+BEGIN_SRC conf :tangle ~/.yaourtrc
    AURUPGRADE=1
    EXPORT=1
    EXPORTDIR=~
    BUILD_NOCONFIRM=1
    EDITFILES=0
  #+END_SRC

  Base utils
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S haveged p7zip parallel pkgfile yaourt
    <<system_ctl>> enable --now haveged
  #+END_SRC

  #+BEGIN_SRC sh
    pkgfile -u
  #+END_SRC

  Dev-env:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S base-devel rust android-tools
  #+END_SRC

  Monitoring:
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ethtool lm_sensors net-tools psmisc \
        procps-ng inetutils ltrace sysdig atop iotop
  #+END_SRC

  #+BEGIN_SRC sh :tangle ~/Copy/bin/strace :shebang #!/bin/sh :no-expand
    exec /usr/bin/ltrace -CSn2 $@
  #+END_SRC

  Of course emacs is installed, now run it
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S emacs-pkgbuild-mode
  #+END_SRC

  #+BEGIN_SRC conf :tangle ~/.config/systemd/user/emacs.service
    [Unit]
    Description=Emacs

    [Service]
    ExecStart=/bin/emacs
    Restart=always
    RestartSec=1sec

    [Install]
    WantedBy=default.target
  #+END_SRC

  #+BEGIN_SRC sh :dir ~
    <<user_ctl>> enable --now emacs syncthing pulseaudio
  #+END_SRC

** kub
   :PROPERTIES:
   :header-args+: :dir /sudo:kub:
   :END:
*** Mounts
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/fstab
      LABEL=<<username>> /home/<<username>> auto
      LABEL=var /var auto
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/systemd/network/eth0.network
      [Match]
      Name = eth0

      [Network]
      Address = <<prefix>>.54/24
      Gateway = <<prefix>>.1
      IPForward = yes
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/resolv.conf
      nameserver <<prefix>>.1
    #+END_SRC

*** Pacman
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/pacman.conf :tangle-mode 260
      <<pacman_common>>

      [options]
      Architecture = armv7h

      [alarm]
      Include = /etc/pacman.d/mirrorlist
      [aur]
      Include = /etc/pacman.d/mirrorlist
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/pacman.d/mirrorlist
      Server = http://vn.mirror.archlinuxarm.org/$arch/$repo
    #+END_SRC

*** LED blinking
    #+BEGIN_SRC sh :tangle /sudo:kub:/usr/local/bin/leds :shebang #!/bin/sh
      echo none > /sys/class/leds/cubieboard:green:usr/trigger
      echo mmc0 > /sys/class/leds/cubieboard:blue:usr/trigger
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/systemd/system/leds.service
      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/leds
      RemainAfterExit=true

      [Install]
      WantedBy=basic.target
    #+END_SRC

*** Tor
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S tor
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/tor/torrc
      ContactInfo tor at zahe dot me
      Nickname kub
      DirPort 4660
      ORPort 5880
      SOCKSPort <<prefix>>.54:9050
      MaxAdvertisedBandwidth 40 KBytes
      ExitPolicy reject *:*

      DataDirectory /var/lib/tor
      Log notice syslog
    #+END_SRC

*** HTTP
    #+BEGIN_SRC sh
      <<pacman>> -S nginx
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/nginx/nginx.conf
      events {}
      http {
      include       mime.types;
      default_type  text/plain;
      charset utf-8;
      gzip off;

      access_log  off;
      log_not_found off;

      server {
      return 301 https://$host$request_uri;
      }

      ssl_protocols TLSv1.2;
      ssl_ciphers EECDH+CHACHA20:EECDH+AES128;
      ssl_prefer_server_ciphers on;
      add_header Strict-Transport-Security max-age=31536000;

      map $request_uri $dest {
      /_ https://raw.githubusercontent.com/hdhoang/hdhoang/master/config/dotpentadactylrc;
      /c /mirror/caps2ctrl.exe;
      /d http://5digits.org/nightly/pentadactyl-latest.xpi;
      /pe http://live.sysinternals.com/;
      /s https://puttytray.goeswhere.com/download/putty.exe;
      /ws https://www.wosign.com/root/ca1_dv_free_2.crt;

      default "";
      }

      server {
      listen 443 ssl spdy default_server;
      ssl_certificate zahe.me.crt;
      ssl_certificate_key zahe.me.key;
      server_name kub.zahe.me zahe.me;
      root /home/hdhoang/Public/;
      autoindex on;
      if ($dest) {
      return 301 $dest;
      }
      location /ipfs/ {
      proxy_pass http://127.0.0.1:4005;
      }
      location ~ /mirror/(?:.*)\.part {
      return 403 incomplete;
      }
      }

      server {
      listen 443 ssl spdy;
      server_name id.zahe.me;
      root /home/hdhoang/Public/;
      index hdhoang;
      default_type text/html;
      }
      }
    #+END_SRC

*** DLNA
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<pacman>> -S minidlna
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/minidlna.conf
      friendly_name=kub
      port=8200

      media_dir=<<storage>>
      media_dir=A,<<fav_music>>
      media_dir=V,/home/<<username>>/Public/mirror
    #+END_SRC
    #+BEGIN_SRC sh :dir /sudo:kub:
      <<system_ctl>> enable --now minidlna
    #+END_SRC

*** IPsec
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/ipsec.conf
      ca <<username>>
          auto=add
          cacert=ca.crt

      conn kub
          auto=add
          left=<<prefix>>.54
          leftid=k.<<domain>>
          leftcert=kub.crt
          leftsubnet=<<prefix>>.0/24
          leftfirewall=yes
          leftdns=<<prefix>>.1

          rightauth=eap-mschapv2
          eap_identity=%any
          rightsourceip=%dhcp
    #+END_SRC

*** OpenVPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo:kub:/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 0
      tls-server
      <pkcs12>
      <<kub_pfx>>
      </pkcs12>
      <dh>
      -----BEGIN DH PARAMETERS-----
      MIIBCAKCAQEAoioJw6aUXmgBDSw6SzbSZww6i7eH0MC+Eba5qGmYJnKn2zI8dBH6
      JZKnAyz9MbD21loI6KjAnOzZkBp7DKle1cACLS229Olycr22rXWPFuhMV15TohDJ
      ArazVXSJGDL9OXhdHei96K3qXofz/3AzXEVxD0unQd5sRlgNGmunofvgWBechdmn
      YQl44SZ0asC8uUY1uiKjVyQzqeNDi3rjJtTobcPdR6Pb8CnS3cfwoWzXMwUexmfJ
      VQSNaDZIeQcwV5MEHs1XViOTiEvT8IHbJojJri0geUSJ+HkX1JTxGIUj4xxKHQ0j
      AFEjqDYFh3q7U6QgFLRWZffVLgxIZVopIwIBAg==
      -----END DH PARAMETERS-----
      </dh>
      user nobody
      group nobody

      mode server

      server 10.255.0.0 255.255.255.0
      push "route <<prefix>>.54"
    #+END_SRC

*** SSH
    #+BEGIN_SRC conf :tangle /sudo:kub:/etc/ssh/sshd_config
      Protocol 2
      HostKey /etc/ssh/ssh_host_ed25519_key
      HostKey /etc/ssh/ssh_host_rsa_key

      KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256,diffie-hellman-group14-sha1
      Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
      MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com

      AllowGroups wheel
      PasswordAuthentication no
      ChallengeResponseAuthentication no
      UsePrivilegeSeparation sandbox

      Subsystem sftp /usr/lib/ssh/sftp-server
    #+END_SRC

** ton
*** Mounts
    #+BEGIN_SRC sh
      fallocate -l 2G /swap
      chmod u=rw,go= /swap
      mkswap /swap
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
      LABEL=home /home/<<username>> ntfs-3g noatime,nofail
      LABEL=ESP /boot vfat
      /swap none swap
    #+END_SRC

*** Hosts
    #+BEGIN_SRC conf :tangle /sudo::/etc/hosts :tangle-mode 260
      127.0.0.1 ton
      ::1 ton
      <<prefix>>.1 vorme
      <<prefix>>.54 kub
    #+END_SRC

*** Network
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/00-bkap.network
      [Match]
      Name = enp4s0

      [Network]
      DNS = 8.8.8.8
      Address = 192.168.0.252/24
      Gateway = 192.168.0.1
      Address = 192.168.1.252/24
      Gateway = 192.168.1.1
      Address = 192.168.4.252/24
      Gateway = 192.168.4.1
      Address = 192.168.5.252/24
      Gateway = 192.168.5.1

      [Route]
      Destination=192.168.1.1
      Source=192.168.1.252
    #+END_SRC
    #+BEGIN_SRC conf :tangle /sudo::/etc/systemd/network/dhcp.network
      [Network]
      DHCP=ipv4
    #+END_SRC

*** Pacman
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.conf :tangle-mode 260
    <<pacman_common>>

    [options]
    Architecture = auto

    [multilib]
    Include = /etc/pacman.d/mirrorlist
  #+END_SRC
  #+BEGIN_SRC conf :tangle /sudo::/etc/pacman.d/mirrorlist
    Server = http://f.archlinuxvn.org/archlinux/$repo/os/$arch
  #+END_SRC

*** OpenVPN
    #+BEGIN_SRC conf :tangle-mode 256 :tangle /sudo::/etc/openvpn/kub.conf
      <<openvpn_common>>

      key-direction 1
      tls-client
      <pkcs12>
      <<ton_pfx>>
      </pkcs12>

      nobind
      pull

      remote k.<<domain>> 22
      verify-x509-name kub.<<domain>> name
      remote-cert-tls server
      resolv-retry infinite
    #+END_SRC

*** Fonts
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S adobe-source-{sans,serif,code}-pro-fonts adobe-source-han-sans-otc-fonts
    #+END_SRC

    #+BEGIN_SRC xml :tangle ~/.config/fontconfig/fonts.conf :padline no :comments no
      <?xml version='1.0'?>
      <!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
      <fontconfig>
        <match target="font">
          <edit mode="assign" name="rgba">
            <const>none</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hinting">
            <bool>true</bool>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="hintstyle">
            <const>hintslight</const>
          </edit>
        </match>
        <match target="font">
          <edit mode="assign" name="antialias">
            <bool>true</bool>
          </edit>
        </match>
        <dir>~/.fonts</dir>
        <match target="pattern">
          <test qual="any" name="family"><string>Arial</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <match target="pattern">
          <test qual="any" name="family"><string>DejaVu Sans</string></test>
          <edit name="family" mode="assign" binding="same"><string>sans-serif</string></edit>
        </match>
        <alias>
          <family>sans-serif</family>
          <prefer>
            <family>Source Sans Pro</family>
          </prefer>
        </alias>
        <alias>
          <family>serif</family>
          <prefer>
            <family>Source Serif Pro</family>
          </prefer>
        </alias>
        <alias>
          <family>monospace</family>
          <prefer>
            <family>Source Code Pro</family>
          </prefer>
        </alias>
        <selectfont>
          <rejectfont>
            <glob>/usr/share/fonts/default/Type1/*</glob>
            <pattern>
              <patelt name="scalable">
                <bool>false</bool>
              </patelt>
            </pattern>
          </rejectfont>
        </selectfont>
      </fontconfig>
     #+END_SRC

*** Desktop
    These DBus services are provided by plasma-workspace-units.
    #+BEGIN_SRC sh :dir /sudo::
      rm /usr/share/dbus-1/services/org.kde.{kded5,kglobalaccel,kuiserver,kwalletd5}.service
    #+END_SRC

**** Inside VM
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now systemd-networkd-wait-online sshd
     #+END_SRC
     #+BEGIN_SRC conf :tangle /sudo::/etc/fstab
       //192.168.208.1/home /home/<<username>> cifs credentials=/etc/cifs,uid=1000,gid=1000,file_mode=0600
     #+END_SRC
     On the host side, open 445/tcp to this VM, and run emacs over X with MobaXterm:
     #+BEGIN_SRC conf :tangle bin/emacs.moba
       emacs =  #109#0%192.168.208.128%22%<<username>>%%-1%0%cp -r ~/.gnupg /run/user/1000 && chmod -R 700 /run/user/1000/.gnupg && export GNUPGHOME__EQUAL__/run/user/1000/.gnupg && setxkbmap dvorak && gpg-agent --enable-ssh-support --daemon emacs%%22%%0%0%Interactive shell%h:\.ssh\kub%%0%0%0%0%%1080%%0#MobaFont%10%0%0%0%15%236,236,236%0,0,0%180,180,192%0%-1%0%%xterm%-1%0%0,0,0%54,54,54%255,96,96%255,128,128%96,255,96%128,255,128%255,255,54%255,255,128%96,96,255%128,128,255%255,54,255%255,128,255%54,255,255%128,255,255%236,236,236%255,255,255%80%24%0#0
     #+END_SRC
     Remember to quit emacs before suspending.

**** Keyboard
     Use dvorak, swap caps for ctrl
     #+BEGIN_SRC conf :tangle /sudo::/usr/share/kbd/keymaps/caps2ctrl.map
       include "/usr/share/kbd/keymaps/i386/dvorak/dvorak.map.gz"
       keycode 58 = Control
     #+END_SRC
     #+BEGIN_SRC sh
       localectl set-keymap caps2ctrl
     #+END_SRC

     Base Japanese IME on dvorak, swap caps for ctrl
     #+BEGIN_SRC conf
       Windows Registry Editor Version 5.00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layout]
       "Scancode Map"=hex:00,00,00,00,00,00,00,00,02,00,00,00,1d,00,3a,00,00,00,00,00

       [HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Keyboard Layouts\00000411]
       "Layout File"="kbddv.dll"
     #+END_SRC

**** Pointer
     Use evdev for the touchscreen
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Atmel touchscreen"
               MatchProduct "maXTouch"
               Driver "evdev"
       EndSection
     #+END_SRC

     Use natural scrolling on touchpad
     #+BEGIN_SRC conf :tangle /sudo::/etc/X11/xorg.conf.d/pointer.conf
       Section "InputClass"
               Identifier "Natural scrolling"
               MatchProduct "TouchPad"
               MatchDriver "libinput"
               Option "NaturalScrolling" "1"
       EndSection
     #+END_SRC

**** Rotation
     #+BEGIN_SRC sh :dir /sudo::
       <<pacman>> -S acpid
     #+END_SRC
     #+BEGIN_SRC text :tangle /sudo::/etc/acpi/events/rotation-button
       event=ibm/hotkey LEN0068:00 00000080 00006020
       action=sudo -u hdhoang DISPLAY=:0 /usr/local/bin/rotate-screen
     #+END_SRC
     #+BEGIN_SRC sh :tangle /sudo::/usr/local/bin/rotate-screen :shebang #!/bin/sh
       case $(xrandr | grep LVDS1 | cut -f 4 -d ' ' | tr -d '(') in
           normal) new="left";;
           left)   new="normal";;
       esac
       xrandr --output LVDS1 --rotate $new

       case $new in
           normal) matrix="1 0 0 0 1 0 0 0 1";;
           left)   matrix="0 -1 1 1 0 0 0 0 1";;
           right)  matrix="0 1 0 -1 0 1 0 0 1";;
           inverted) matrix="-1 0 1 0 -1 1 0 0 1";;
       esac
       for dev in "SynPS/2 Synaptics TouchPad" "TPPS/2 IBM TrackPoint" "Atmel Atmel maXTouch Digitizer"; do
           xinput set-prop "$dev" "Coordinate Transformation Matrix" $matrix
       done
     #+END_SRC
     #+BEGIN_SRC sh :dir /sudo::
       <<system_ctl>> enable --now acpid
     #+END_SRC

*** Picard
    #+BEGIN_SRC sh :dir /sudo::
      <<pacman>> -S picard chromaprint
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/MusicBrainz/Picard.conf
      [setting]
      server_host=musicbrainz.org
      server_port=80

      fingerprinting_system=acoustid
      acoustid_apikey=<<acoustid_key>>
      acoustid_fpcalc=/usr/bin/fpcalc

      save_images_to_tags=true
      save_only_front_images_to_tags=true
      save_images_to_files=false
      ca_provider_use_amazon=true
      ca_provider_use_caa=true
      ca_provider_use_caa_release_group_fallback=true
      ca_provider_use_whitelist=true
      caa_image_size=1
      caa_approved_only=true
      caa_restrict_image_types=true
      analyze_new_files=false
      ignore_file_mbids=false
      quit_confirmation=true
      va_name=Various Artists
      nat_name=
      standardize_artists=true

      windows_compatibility=true
      ascii_filenames=false
      rename_files=true
      move_files=true
      file_naming_format="$if2(%albumartist%,%artist%)/$if($ne(%albumartist%,),%album%/)$if($gt(%totaldiscs%,1),%discnumber%-,)$if($ne(%albumartist%,),$num(%tracknumber%,2) ,)$if(%_multiartist%,%artist% - ,)%title%"
      move_files_to=<<fav_music>>/_new
      move_additional_files=true
      move_additional_files_pattern=*.jpg *.png *.jpeg
      delete_empty_dirs=true

      browser_integration=true
      browser_integration_port=8000
      browser_integration_localhost_only=true

      dont_write_tags=false
      preserve_timestamps=false
      write_id3v1=true
      write_id3v23=true
      id3v23_join_with=/
      id3v2_encoding=utf-16
      remove_ape_from_mp3=true
      remove_id3_from_flac=true
    #+END_SRC
*** mpd
    :PROPERTIES:
    :header-args+: :dir ~
    :END:

    Create playlist
    #+BEGIN_SRC sh
      mpc listall > <<fav_music>>/pq.m3u
    #+END_SRC

    Shuffle and play
    #+BEGIN_SRC sh :results raw
      mpc -q clear && mpc load pq && mpc -q shuffle && mpc play
    #+END_SRC

    Delete currently playing track
    #+BEGIN_SRC sh :eval query
      rm -v <<fav_music>>/"$(mpc -f %file% | head -1)"
    #+END_SRC

*** mpv
    #+BEGIN_SRC conf :tangle ~/.config/mpv/mpv.conf
      sub-auto=fuzzy
      hwdec=auto
      hwdec-codecs=all
    #+END_SRC
    #+BEGIN_SRC conf :tangle ~/.config/mpv/input.conf
      q quit_watch_later
      MOUSE_BTN0 cycle pause
      MOUSE_BTN1 show_progress
      MOUSE_BTN2 cycle fullscreen
      z set window-scale 0.5
      Z set window-scale 1

      ; show_progress
      f show_text "${filename}"
      d cycle audio
      y add volume 1
      i add volume -1
      g add sub-delay  0.1
      h add sub-delay -0.1
      x cycle mute

      k frame_step
      ' seek +10
      a seek -10
      , seek +60
      o seek -60
      . seek +300
      e seek -300

      u cycle fullscreen
    #+END_SRC
* Emacs
  :PROPERTIES:
  :header-args+: :tangle ~/.emacs
  :END:

  OOBE settings:
  #+BEGIN_SRC elisp
    (server-mode t)
    (global-set-key (kbd "C-x C-r")
                    (lambda () (interactive)
                      (revert-buffer :noconfirm t)))
    (defalias 'yes-or-no-p #'y-or-n-p)
    (defalias 'dabbrev-expand #'hippie-expand)
    (setq auto-save-default nil
          calendar-week-start-day 1
          default-input-method "vietnamese-telex"
          inhibit-startup-screen t
          make-backup-files nil
          scroll-preserve-screen-position t
          tramp-default-method "ssh"
          undo-tree-mode-lighter ""
          visible-bell t
          frame-title-format "%b")
    (set-language-environment "UTF-8")
    (setq-default buffer-file-coding-system 'utf-8-unix)
    (setq-default sentence-end-double-space nil)
    (global-set-key (kbd "C-\\") #'toggle-input-method)
    (blink-cursor-mode -1)
    (show-paren-mode t)
    (winner-mode)
  #+END_SRC

  Package management
  #+BEGIN_SRC elisp
    (package-initialize)
    (setq package-archives
          '(("gnu" . "https://elpa.gnu.org/packages/")
            ("marmalade" . "https://marmalade-repo.org/packages/")
            ("melpa" . "http://melpa.org/packages/")))
    (unless (package-installed-p 'use-package)
      (package-refresh-contents)
      (package-install 'use-package))
    (setq use-package-always-ensure t)
    (require 'use-package)
  #+END_SRC

  Color theme
  #+BEGIN_SRC elisp
    (use-package color-theme-sanityinc-solarized
      :config (load-theme 'sanityinc-solarized-light t))
  #+END_SRC

  Font on Windows
  #+BEGIN_SRC elisp
    (when (eq window-system 'w32)
      (if (> window-system-version 5)
          (set-default-font "Consolas-12" :frames t)
        (set-default-font "Lucida Console-10" :frames t)))
  #+END_SRC

** Editing
   Vim-style
   #+BEGIN_SRC elisp
     (use-package evil
       :config
       (evil-mode t)
       (evil-set-initial-state 'special-mode 'emacs)
       (dolist (state '(normal motion))
         (evil-define-key state global-map
           (kbd "<SPC>") #'evil-scroll-down
           (kbd "S-<SPC>") #'evil-scroll-up))
       (dolist (state '(insert motion normal))
         (evil-define-key state global-map
           (kbd "C-t") #'transpose-chars
           (kbd "C-d") #'delete-char
           (kbd "C-k") #'kill-line
           (kbd "C-y") #'evil-paste-before
           (kbd "C-a") #'beginning-of-line (kbd "C-e") #'end-of-line
           (kbd "C-f") #'forward-char   (kbd "C-b") #'backward-char
           (kbd "C-n") #'next-line      (kbd "C-p") #'previous-line
           (kbd "<down>") #'next-line   (kbd "<up>") #'previous-line
           (kbd "j") #'next-line        (kbd "k") #'previous-line
           (kbd "C-v") #'evil-scroll-down (kbd "M-v") #'evil-scroll-up
           (kbd "C-r") #'isearch-backward))
       (evil-define-key 'insert global-map
         "j" #'self-insert-command "k" #'self-insert-command)
       (evil-define-key 'motion help-mode-map
         (kbd "<tab>") #'forward-button))
   #+END_SRC

   Aggressive indent
   #+BEGIN_SRC elisp
     (use-package aggressive-indent
       :diminish ""
       :config (global-aggressive-indent-mode))
   #+END_SRC

   Switch window with ace
   #+BEGIN_SRC elisp
     (use-package ace-window
       :config (ace-window-display-mode 1)
       :bind ("C-x o" . ace-window))
   #+END_SRC

   Do things with helm:
   #+BEGIN_SRC elisp
     (use-package helm
       :config
       (helm-mode 1)
       (define-key shell-mode-map (kbd "M-r") #'helm-comint-input-ring)
       :diminish helm-mode
       :bind (("C-h SPC" . helm-all-mark-rings)
              ("C-x b" . helm-mini)
              ("C-x C-b" . helm-buffers-list)
              ("C-x C-f" . helm-find-files)
              ("C-c g" . helm-do-grep)
              ("C-s" . helm-occur)
              ("M-x" . helm-M-x)))
     (require 'helm-config)
     (use-package evil
       :config (dolist (state '(insert motion normal))
                 (evil-define-key state global-map
                   (kbd "M-y") #'helm-show-kill-ring)))
   #+END_SRC

** Org
   #+BEGIN_SRC elisp
     (add-hook 'org-mode-hook
               '(lambda ()
                  (add-hook 'before-save-hook 'org-align-all-tags
                            :local t)))
     (org-babel-do-load-languages 'org-babel-load-languages
                                  '((sh . t)))
     (setq org-src-fontify-natively t)
   #+END_SRC

*** Crypt
    #+BEGIN_SRC elisp
      (require 'org-crypt)
      (add-hook 'org-mode-hook
                '(lambda ()
                   (add-hook 'before-save-hook 'org-encrypt-entries
                             :local t)))
      (setq org-tags-exclude-from-inheritance '("crypt")
            org-crypt-key "<<username>>@<<domain>>")
    #+END_SRC

    Make it possible to tangle encrypted block
    #+BEGIN_SRC elisp
      (remove-hook 'org-babel-pre-tangle-hook #'save-buffer)
    #+END_SRC

** Doc-View
   #+BEGIN_SRC elisp
     (eval-after-load 'doc-view
       '(bind-key (kbd "<mouse-1>") #'doc-view-scroll-up-or-next-page doc-view-mode-map))
     (setq doc-view-resolution 300
           doc-view-cache-directory (expand-file-name "~/.emacs.d/doc-view"))
     (use-package evil
       :config (add-hook 'view-mode-hook #'evil-emacs-state))
   #+END_SRC

** Dired
   #+BEGIN_SRC elisp
     (use-package dired+
       :config
       (require 'dired+)
       (global-dired-hide-details-mode -1)
       (defun dired-open ()
         (interactive)
         (dired-do-shell-command "xdg-open &" :file-list (dired-get-marked-files)))
       (define-key dired-mode-map (kbd "RET") #'dired-open)
       (define-key dired-mode-map (kbd "<mouse-2>") #'dired-open)
       (setq dired-recursive-copies 'always
             dired-recursive-deletes 'always
             dired-listing-switches "-alh"
             dired-guess-shell-alist-user
             '(("\\.cb.\\'" "okular")
               ("." "xdg-open;"))))
   #+END_SRC

** Eshell
   Put eshell on a convenient binding
   #+BEGIN_SRC elisp
     (global-set-key (kbd "C-x M-m") #'eshell)
   #+END_SRC

   I like the prompt to be on a separate line.
   #+BEGIN_SRC elisp
     (setq eshell-prompt-function
           '(lambda ()
              (concat (eshell/pwd) "\n"
                      (int-to-string eshell-last-command-status) " % "))
           eshell-prompt-regexp "^[[:digit:]]\\{1,3\\} % ")
   #+END_SRC

   These are terminal-manipulating commands
   #+BEGIN_SRC elisp
     (eval-after-load 'em-term
       '(progn
          (dolist (prog '("atop" "systemd-cgls" "journalctl"))
            (add-to-list 'eshell-visual-commands prog))
          (add-to-list 'eshell-visual-options '("ssh" "-t"))))
   #+END_SRC

   Profile:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/profile :no-expand
     addpath ~/Copy/bin
   #+END_SRC

   Aliases:
   #+BEGIN_SRC sh :tangle ~/.emacs.d/eshell/alias
     alias vim find-file $1
     alias i yaourt $*
     alias j journalctl -afb $*
     alias sc <<system_ctl>> $*
     alias uc <<user_ctl>> $*
     alias ytdl <<ytdl>> -a /home/<<username>>/q.txt
     alias fr free -h
   #+END_SRC

* Ansible
  #+BEGIN_SRC sh :dir /sudo::
    <<pacman>> -S ansible
  #+END_SRC

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(progn
         (use-package yaml-mode)
         (use-package ansible-doc
           :config (add-hook 'yaml-mode-hook #'ansible-doc-mode))))
  #+END_SRC

** Inventory
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible_inventory
   :END:

   Here are the hosts and their variables
   #+BEGIN_SRC conf
     [arch]
     kub ansible_python_interpreter=/usr/bin/python2
     ton ansible_python_interpreter=/usr/bin/python2 ansible_connection=local

     [all:vars]
     user=<<username>>
     home=/home/<<username>>
     h=<<storage>>
     conf="{{h}}/config/{{ansible_hostname}}"
     locale=en_US
     prefix=<<prefix>>
   #+END_SRC

** Config
   :PROPERTIES:
   :header-args+: :tangle ~/.ansible.cfg
   :END:

   Keep the inventory here
   #+BEGIN_SRC conf
     [defaults]
     inventory = ~/.ansible_inventory
   #+END_SRC

   For some reason ControlMaster isn't working
   #+BEGIN_SRC conf
     [ssh_connection]
     ssh_args=-o ControlMaster=no
   #+END_SRC

* Firefox
  :PROPERTIES:
  :header-args+: :tangle ~/.pentadactylrc
  :END:
  This file is in vimrc syntax

  #+BEGIN_SRC elisp :tangle ~/.emacs
    (eval-after-load 'use-package
      '(use-package vimrc-mode))
  #+END_SRC

  Use DuckDuckGo:

  #+BEGIN_SRC vimrc
    silent bmark -keyword ddg -t DDG https://duckduckgo.com/?kn=1&kp=-1&kae=c&q=%s
    set defsearch=ddg
  #+END_SRC

  Use backspace to go back:
  #+BEGIN_SRC vimrc
    set! browser.backspace_action=0
  #+END_SRC

  Don't let middle mouse paste:
  #+BEGIN_SRC vimrc
    set! middlemouse.contentLoadURL=false
  #+END_SRC

  Restore C-j for Downloads:
  #+BEGIN_SRC vimrc
    map <C-j> -ex dialog downloads
  #+END_SRC

  Bind stop to an easy binding:
  #+BEGIN_SRC vimrc
    map s <C-c>
  #+END_SRC

  Make scrolling easier:
  #+BEGIN_SRC vimrc
    map <space> <C-d>
    map <S-space> <C-u>
  #+END_SRC

  Pin tab:
  #+BEGIN_SRC vimrc
    map <A-p> -ex pintab!
  #+END_SRC

  Move to first or last:
  #+BEGIN_SRC vimrc
    map <A-!> -ex tabm 1
    map <A-$> -ex tabm $
  #+END_SRC

  Fast switching:
  #+BEGIN_SRC vimrc
    map -m normal,insert <F1> <C-^>
  #+END_SRC

  Don't raise these openings:
  #+BEGIN_SRC vimrc
    set activate-=diverted,links,tabopen,paste
  #+END_SRC

  Open help in a new tab
  #+BEGIN_SRC vimrc
    set newtab=help
  #+END_SRC

  Keep hint keys under left fingers:
  #+BEGIN_SRC vimrc
    set hintkeys=12345
  #+END_SRC

  Make hint text readable
  #+BEGIN_SRC vimrc
    highlight Hint -append font-size: 14px !important
  #+END_SRC

  Unzoom image:
  #+BEGIN_SRC vimrc
    map <A-t> -js content.document.toggleImageSize()
  #+END_SRC

  Show link in commandline:
  #+BEGIN_SRC vimrc
    set guioptions+=c
    set showstatuslinks=command
  #+END_SRC

  Scroll by one line:
  #+BEGIN_SRC vimrc
    set scrollsteps=1
  #+END_SRC

  Show feeds first in pageinfo:
  #+BEGIN_SRC vimrc
    set pageinfo=fgmse
  #+END_SRC

  Use visual bell:
  #+BEGIN_SRC vimrc
    set visualbell
  #+END_SRC

  Bookmarks and preferences:
  #+BEGIN_SRC vimrc
    map <C-S-s> -ex bmark -keyword ac -t config about:config
    \ bmark -keyword bgp -t BGP http://bgp.he.net/search?search[search]=%s
    \ bmark -keyword v -t valsi http://vlasisku.lojban.org/?query=%s
    \ bmark -keyword c -t camxes http://camxes.lojban.org/?text=%s
    \ bmark -keyword yb -t youtube https://youtube.com/watch?v=%s
    \ bmark -keyword cw -t 'CrawlWiki' http://crawl.chaosforge.org/index.php?title=Special%3ASearch&search=%s
    \ bmark -keyword bb -t burnbit http://burnbit.com/burn?file=%s
    \ bmark -keyword b -t btdigg https://btdigg.org/search?q=%s&order=0&p=0
    \ bmark -keyword ba -t btdigg https://btdigg.org/search?q=%s&order=2&p=0
    \ bmark -keyword m -t zing http://mp3.zing.vn/tim-kiem/bai-hat.html?q=%s
    \ bmark -keyword ma -t artist http://musicbrainz.org/search?advanced=1&type=artist&tport=8000&query=%s
    \ bmark -keyword mg -t group http://musicbrainz.org/search?advanced=1&type=release_group&tport=8000&query=%s
    \ bmark -keyword mr -t recording http://musicbrainz.org/search?advanced=1&type=recording&tport=8000&query=%s
    \ bmark -keyword gm -t gmail https://mail.google.com/mail/#spam
    \ set! accessibility.browsewithcaret_shortcut.enabled=false
    \ set! browser.newtabpage.enabled=false
    \ set! browser.privatebrowsing.dont_prompt_on_enter=true
    \ set! browser.sessionstore.restore_pinned_tabs_on_demand=true
    \ set! browser.shell.checkDefaultBrowser=false
    \ set! browser.startup.homepage=about:blank
    \ set! browser.startup.page=3
    \ set! general.warnOnAboutConfig=false
    \ set! security.OCSP.enabled=0
    \ set! security.warn_viewing_mixed=false
    \ set! layout.spellcheckDefault=0
    \ set! middlemouse.paste=true
    \ set! ui.key.menuAccessKey=0
    \ set! browser.anchor_color="#6c71c4"
    \ set! browser.display.background_color="#fdf6e3"
    \ set! browser.display.foreground_color="#657b83"
    \ set! browser.display.use_system_colors=false
    \ set! font.default.x-western="sans-serif"
    \ if /NT 6/.test(window.navigator.oscpu)
    \     set! font.name.monospace.x-western=Consolas
    \ fi
    \ set! extensions.checkCompatibility.nightly=false
    \ set! extensions.https_everywhere._observatory.alt_roots=true
    \ set! extensions.https_everywhere._observatory.enabled=true
    \ set! extensions.https_everywhere._observatory.priv_dns=true
    \ set! plugins.hide_infobar_for_missing_plugin=true
    \ set! browser.download.manager.alertOnEXEOpen=false
    \ set! browser.download.manager.scanWhenDone=false
    \ set! browser.search.context.loadInBackground=true
    \ set! intl.charset.default=UTF-8
    \ set! network.http.pipelining=true
    \ set! network.http.pipelining.aggressive=true
    \ set! network.http.pipelining.ssl=true
    \ set! network.protocol-handler.expose.magnet=false
    \ set! network.proxy.socks=kub.<<domain>>
    \ set! network.proxy.socks_port=9050
    \ set! network.proxy.socks_remote_dns=true
    \ set! toolkit.telemetry.enabled=true
    \ js services.permissions.add(services.io.newURI("http:depositfiles.com",null,null), 'image', services.permissions.DENY_ACTION)
    \ js services.loginManager.setLoginSavingEnabled("accounts.google.com", false)
  #+END_SRC

  Strip tracker from location, thanks to [[https://userscripts.org/scripts/show/93825][Bruno Barão]] and [[https://github.com/5digits/dactyl/commit/7a1ffa5b555399c5d0925ad599e2640070bd128d][Kris Maglione]].
  #+BEGIN_SRC vimrc
    autocmd DOMLoad (utm|wa)_ -js win.history.replaceState("Remove trackers", '', doc.location.href.replace(/&?(utm|wa)_[^&]+/g,'').replace(/\?$/,''))
  #+END_SRC

  Facebook
  #+BEGIN_SRC vimrc
    bmark -keyword fb -t facebook https://fb.me/%s
    map <A-s> -js dactyl.open("https://www.facebook.com/sharer/sharer.php?u=" + content.location)
  #+END_SRC

  Inoreader
  #+BEGIN_SRC vimrc
    map <A-f> -js dactyl.open("https://www.inoreader.com/?add_feed=" + content.location)
    map <A-w> -js dactyl.open("https://www.inoreader.com/bookmarklet/save_web_page/" + encodeURIComponent(content.location))
    js services.permissions.add(services.io.newURI("http:inoreader.com",null,null), 'popup', services.permissions.ALLOW_ACTION)
    set passkeys+=inoreader.com:jkgafswhq
  #+END_SRC
  Get videos from starred items
  #+BEGIN_SRC sh :tangle /kub:.bashrc
    function videos() {
        <<ytdl>> --ignore-errors $(curl 'https://www.inoreader.com/reader/api/0/stream/contents/user%2F-%2Fstate%2Fcom.google%2Fstarred?n=1000' \
                                        -H 'AppId: 1000001238' -H 'AppKey: <<inoreader_key>>' \
                                        -H 'Authorization: GoogleLogin auth=<<inoreader_auth>>' \
                                          | jq -r '.items|.[]|.canonical[0]|.href' \
                                          | grep -vE rapidgator)
    }
  #+END_SRC

  Site keyboard shortcuts:
  #+BEGIN_SRC vimrc
    set passkeys+=tumblr.com:jk
    set passkeys+=mail.google.com/mail/:'#!ms+-/? jknpux'
    set passkeys+=google.com/contacts/:'#jkoux,.'
  #+END_SRC

  Switch to reader mode:
  #+BEGIN_SRC vimrc
    map <A-r> -js dactyl.open("about:reader?url=" + content.location)
  #+END_SRC

* Secrets							      :crypt:
-----BEGIN PGP MESSAGE-----
Version: GnuPG v2

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
h9y9YNpnvQwEFY1TfkKWwH7CAd1xfpSFJBnahU+fV+b3Ac/lECeblCsGG3Ya9ceH
nenmDD+R9Pw3fq9kQjwv3o66fqxXaXxzAR2F+oT2g1dW3/W8aUCSKompuwu2btoT
/CSjp18xscr9STsXXqLeIVxrMryyL7VdtlAMarWQp6RsF9UyzT76Wp7NQ4RGhWtD
Zj840HOo8DJJE2M8zmAOrxH0z9FrPZEvj9U5BgAW7v0F4gkpdg2c+znngX8h9a2c
oOSnaPNfMXbeixuM3y+A/zFtUEWM36yvBM2uFcMnl+nAfJ11TZIUKLe+nq5s+vhl
yvaKzFBwYMSRTLiNRCoEDVDFVujMOHc3z/+Z+ed/ITbpZjrzBjmfL5Tu2bMht5PY
VD6o8o79KUqozLuoxu9UaFMhTFtJK2LlOxRhubV5KvQs9o3j1eT9ZrtHQpn03CRN
e4KBotyAj49ii5Fu5ZCZgizxhq3x9usLOGzLSvru15hbHwpOhnm+dNJK83wM35Wo
l0BtxVq9JdvwAPg0WFYbH9nH91WJvIqyz5FLa15mfaVSpaIXyrR1PNJdOlkgyGyL
Ia1KE8ZcshpipaBdnQhP/ENTP6G2x5zUMbOUzCGG1P8HvpV/f3GUUTxew5riV7Md
4ojJqdZ2FJ9U7oHvUXZ5gj+QwQJNfGc4f5Figw74AYuNBp6EaujnIyFMS2eMpv79
9UDShGIJ+lbbbd+a5MeVG4/XoWJzglb239b7NUrd8EgrD0naiusDesFMcTKlKqPa
LWb1rE6i9MBJwuopnKDRjD3zkv5UyCsGR92ICXek0q6TDJ9emI2Auzs47lkLvx6H
3wmmkSYJSoT/Wsh5xG+j3WpIRr9iUX4Pjbez0AmHZze1p+NkVwj7l89GNZAheDOv
ez8PW1wCpAhqZ9TItguJBQ2jj1wlOvqULWJjcju6gxHPLm0MsgIsWVJv2sro2DgN
gqJ/4wMSt0YLhqREby9EdYIaTCj+CZUHzSNeuQlLIJ+VtH6USCSEQsT/P+RJ2yL4
lQSDzrmMqLk5fQcsqxvLl0DTRLl2U3unRcfunKpwN+kxyWto+qatOb4Dr+9OVQQe
pZhMf6xK+8je4KW30qdJD69LA4QcBaNsR3n/f/xchoUboNa2G9r/L0aFJf1peqmu
l8iCJlWUAKWVEZqQvcbClfURki+IcCZ06TaLEeedbEkBr37jSA4Ksr4UbXF8UD1R
GPf5c/u/4IJNj5Ek3Jt9ciqUFMAcrgSccW8z0nWBBXyhpNDiVnSW+MLDRC/Bbd5z
uDMXOMHNHh9/P7FzylpKAT9i8MOhlkv6khOpoi+/tYJ6fRdQDt23ggzX8VrxeGxj
6qF/+/tsmiswx8f9UwMZk99vItXIBO9d8fhcJ8hQpri+GRoIeV8AFJYES8aDoWNQ
hsrbJi6FZFA9TC2xwphRpg6oWACPbIfKCDUQjZCqFV3WKRwffYVGdCOTN4i0qaAa
ifaPumyIjhdXB7HOhXNyXh8xe8OAqdwjgoCnyUA7Y3WRzue9x/RCbCK+f1WZEZER
pxpviRlI4X/qEWF7lMfEnMsBkVb++aWLuZ2Bl6T4gUiqvLdF/DwYpkFnuu8N66S8
ChaOBvZbUgSIakoEHbS4BlPUz1zA9bceOT30DnLebbmOTxcBVJZ+dMxbef5vWR4P
i/zuki4nNPzIdcyrgqGgYvcvd4huvaCl8PeRh/xIwEv7BYrKzvtzTEeTNXq7CFBc
1dyYfhLsg652Ie1/Q4SOrrh8hSdbARQrNRXoM06NYiIvNxV6WMHB7+RrVPI3u7N2
iCvRNdRqW86/Pc20SNs1La9GsYU3hVjD49gdqzI+Z6dTFHO6cbb6PbX1S9lAdmYZ
BwGVB6tQO+93UrL/nsstyO6p5tpy9cQtxRlyTqSqvlTguriCFHopKTbJdRzJFFUH
mZVgm6aaZ72LA8LOYHdFHXe4/YAHb4P4E9jC2b3E+Y3G+Dy2KSWHMsyS5/WamK2I
UMCyqcPbLPnPLG4if0DSpS7HLUQO2IajGmkFtDJJQ8Kwa3LhndvatqSNoRpkjuEq
HB4GT6fnSWz+0dhZlxC2RHD9b/sLh4PWAL4nJPJmRnBHks//1BITTVllb/YRob7z
s8wPlukW4Ysblf4KN1zYU0O0Q1MOiysPySwgocxyN0z76u1SI2VPajNDFAlLA7u3
ILoWDAwzmam5hKoddyeSLXfQ/8GZpRiFOqFrvDy38lUG+vi1htm2mq3KNclH8v/r
IJRf/G+O8WwwnFrTp5evCoC0rE6hBYOmY+pAulu4LX+7O14jYM+XnWfE/X17lEU9
B+H7z5mE4VkBWLYHKjNEvOUaCbcJK8ntXe1zJmVSRY6barazkXO5MBXLlYkJZXX6
oTD9MoiiYu0nSAux/lLgrjbqUQr07s4uo33XGwDjq/xghPZFVzadbhMtGU+R6jRg
WPMP6pqBmREMIOOt+Buumgwn7QwP8vJhMpgYEXQHKbAvvUvLBudlBqpfl5WqRNLc
hDZ2S9UfFunrMbs1zoO/6/jsdzQusbv/T2hMXPLh2B72QHi//+VueLSohVUOtaxK
XBNCVns4CGkZkC3AtExwUshxcq4IuewePKxdTHghKzFwJgkosL90Y8GzfE4BV7xB
n+F+AGVQ70ImnlmRGwCbXLRl99ka7WFoFcpAvvHBBZ250aN2vTqJoaz5cjf4F1UN
LXfT4LWZ71MSM5/QDIixsXx3Cqc8KwToFaUjdsWn4YxHSlWZ0DM+3SOMC6Zj9isT
QX6TQ8azM5LJGiVqJsSpi6ZcEvwvQs8t9y6Zbh/ZILCc7Q6T7qgYd+7SOHMEYrDn
RFt9o1xF5kT3jzHQwRxGWiA3ml6jq1112/6hn04hrZat+VJxuNLuVq4OohaBrZdT
t7bLyNsYMcQOdwMQFzqWWbFx2BmiqBrzz83nHAt0u5JgKeehjXZn9crp//U8Ioqr
o+wrCBa6QMg1uGjCiEdEZGzEr0qfsf5ZitgND6Uac9Z7XPO+h9fD3n/qQmL2BRED
Hb3sf/WW57EC3snuCeU=
=SWI1
-----END PGP MESSAGE-----
