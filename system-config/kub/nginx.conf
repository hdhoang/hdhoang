# -*- mode: c -*-
events {
}
http {
  include       mime.types;
  default_type  text/plain;
  charset utf-8;

  access_log  off;

  ssl_session_cache "shared:SSL:10m";
  ssl_session_timeout 10m;
  ssl_protocols TLSv1.2;
  ssl_ciphers EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:EECDH+RC4:RSA+RC4:!MD5;
  ssl_prefer_server_ciphers on;

  server {
    listen 443 ssl spdy default_server;
    ssl_certificate /var/secrets/kub.zm.crt;
    ssl_certificate_key /var/secrets/kub.zm.key;
    server_name kub.zahe.me zahe.me;
    root /home/hdhoang/Public/;
    autoindex on;
    location = /p {
      return 301 http://robinbakker.nl/perisonic/;
    }
  }

  server {
    listen 443 ssl spdy;
    ssl_certificate /var/secrets/id.zm.crt;
    ssl_certificate_key /var/secrets/id.zm.key;
    server_name id.zahe.me;
    root /home/hdhoang/Public/hdhoang;
    index hdhoang;
    default_type text/html;
  }

  server {
    listen 443 ssl spdy;
    server_name zgike.zahe.me;
    location / {
      include uwsgi_params;
      uwsgi_pass 127.0.0.1:4000;
    }
  }
  server {
    listen 443 ssl spdy;
    server_name am.zahe.me;
    root /var/Jamstash;
    index index.html;
  }

  server {
    listen 443 ssl spdy;
    server_name flecu.zahe.me;
    root /var/selfoss/;
    location /favicons {
      root /var/selfoss/data;
    }
    location ~ ^/(all|images|favicon.ico) {
      root /var/selfoss/public;
    }
    location ~* ^/(data\/logs|data\/sqlite|config\.ini|\.ht) {
      deny all;
    }
    location / {
      rewrite . /index.php$path last;
    }
    location /index.php {
      include uwsgi_params;
      uwsgi_modifier1 14;
      uwsgi_pass 127.0.0.1:4001;
    }
  }

  server {
    listen 192.168.1.54:9090;
    root /srv/http;
    location /cloudflare-update.php {
      include uwsgi_params;
      uwsgi_modifier1 14;
      uwsgi_pass 127.0.0.1:4001;
    }
  }

  upstream tor2web {
    server 192.168.1.54:8118;
  }
  server {
    listen 443 ssl spdy;
    server_name mjt.zahe.me;

    location / {
      proxy_pass http://tor2web;
	proxy_set_header Host mjt54q6pagohhimn.onion;
      proxy_redirect http://mjt54q6pagohhimn.onion /;
    }
  }
  server {
    listen 443 ssl spdy;
    server_name o.zahe.me;

    location / {
      if ($http_referer ~ (?P<onion>[a-z0-9]+\.onion)) {
	rewrite . /$onion$uri redirect;
      }
    }
    location ~ ^/(?P<onion>[a-z0-9]+\.onion)(?P<path>.*) {
      proxy_pass http://tor2web;
	proxy_set_header Host $onion;
      proxy_redirect http://$onion /;
	rewrite . $path break;
    }
  }
}
