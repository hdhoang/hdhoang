#!/bin/ansible-playbook --ask-become-pass
# -*- mode: yaml -*-
- hosts: all
  become: yes
  tasks:
    - template: src=hosts dest=/etc/
    - group: name={{user}} gid=1000
    - user: name={{user}} uid=1000 createhome=no group={{user}} groups=wheel,systemd-journal,uucp shell=/bin/zsh
    - name: pacman
      lineinfile: dest=/etc/pacman.d/mirrorlist insertbefore=BOF line="Server = http://f.archlinuxvn.org/archlinux/$repo/os/$arch"
      when: ansible_architecture != "armv7l"
    - ini_file: dest=/etc/pacman.conf section=multilib option=Include value=/etc/pacman.d/mirrorlist
      when: ansible_architecture == "x86_64"
    - ini_file: dest=/etc/pacman.conf section=blackarch option=Server value=http://f.archlinuxvn.org/blackarch/$repo/os/$arch
    - lineinfile: dest=/etc/pacman.conf line={{item}} insertafter=options
      with_items:
        - UseSyslog
        - Color
        - VerbosePkgLists
    # - command: pacman-key -r 7533bafe69a25079
    # - command: pacman-key --lsign 7533bafe69a25079
    - lineinfile: dest=/etc/makepkg.conf line='MAKEFLAGS="-j{{ansible_processor_vcpus}}"'
    - pacman: state=absent name={{item}}
      with_items:
        - jfsutils
        - lvm2
        - nano
        - mdadm
        - netctl
        - reiserfsprogs
        - dhcpcd
        - xfsprogs
    - name: utils
      pacman: name={{item}}
      with_items:
        - acpi
        - android-tools
        - dhclient
        - dosfstools
        - ethtool
        - git
        - haveged
        - iotop
        - lm_sensors
        - mlocate
        - net-tools
        - ntfs-3g
        - openssh
        - p7zip
        - parallel
        - pkgfile
        - pv
        - sshpass
        - sysdig
        - tcpdump
        - traceroute
        - tree
        - uucp
        - vim
        - wget
        - wpa_supplicant
        - zsh
    - name: pkgfile update
      command: pkgfile -u creates=/var/cache/pkgfile/core.files
    - name: parallel promise
      file: state=file path={{home}}/.parallel/will-cite
    - service: name=haveged state=started enabled=yes
    - name: SSD scheduler
      copy: dest=/etc/udev/rules.d/60-ssd-scheduler.rules content='ACTION=="add|change", KERNEL=="sd[a-z]", ATTR{queue/rotational}=="0", ATTR{queue/scheduler}="noop"'
    - ini_file: dest=/etc/systemd/journald.conf section=Journal option=Storage value=volatile
      when: ansible_hostname == 'ton'
    - mount: src=LABEL=home name={{home}} fstype=ntfs-3g opts=noatime,nofail state=present
      when: ansible_hostname == 'ton'
    - shell: fallocate -m 2G /swap && mkswap /swap creates=/swap
      when: ansible_hostname == 'ton'
    - file: state=file path=/swap mode=600
      when: ansible_hostname == 'ton'
    - mount: src=/swap name=none fstype=swap state=present
      when: ansible_hostname == 'ton'
    - mount: src=LABEL=ESP name=/boot fstype=vfat state=present
      when: ansible_hostname == 'ton'
    - mount: src=LABEL=var name=/var fstype=auto state=present
      when: ansible_hostname == 'kub'
    - mount: src=LABEL=hdhoang name={{home}} fstype=auto state=present
      when: ansible_hostname == 'kub'
    - name: wheel power
      lineinfile: dest=/etc/sudoers line="%wheel ALL = (ALL) ALL" validate="visudo -c -f %s"
    - name: locale
      file: state=link src=../usr/share/zoneinfo/Asia/Ho_Chi_Minh path=/etc/localtime
    - lineinfile: dest=/etc/locale.gen line="{{locale}}.UTF-8 UTF-8"
    - lineinfile: dest=/etc/locale.conf line="LANG={{locale}}.UTF-8"
    - command: locale-gen creates=/usr/lib/locale/locale-archive
    - copy: src=caps2ctrl.map dest=/usr/share/kbd/keymaps/
    - copy: dest=/etc/vconsole.conf content="KEYMAP=caps2ctrl"
    - name: desktop
      when: ansible_hostname == 'ton'
      pacman: name={{item}}
      with_items:
        - breeze-kde4
        - cantata
        - chromaprint
        - chromium
        - dolphin
        - drkonqi
        - emacs-pkgbuild-mode
        - firefox
        - gwenview
        - ibus-anthy
        - ibus-qt
        - ibus-unikey
        - kdegraphics-ksnapshot
        - kdegraphics-okular
        - kdemultimedia-kmix
        - kwallet-pam
        - lib32-alsa-plugins
        - lib32-libcanberra-pulse
        - lib32-mpg123
        - libva-intel-driver
        - mesa-libgl
        - mpc
        - mpd
        - mpv
        - picard
        - plasma-desktop
        - plasma-nm
        - pulseaudio-alsa
        - qemu
        - qt5-wayland
        - rust
        - sddm
        - skype
        - sni-qt
        - steam
        - syncthing
        - ttf-hannom
        - ttf-inconsolata
        - ttf-linux-libertine
        - virtualbox-guest-iso
        - virtualbox-host-dkms
        - wine
        - wireshark-gtk
        - xf86-input-libinput
        - xf86-input-wacom
        - xf86-video-intel
        - xorg-server
        - xorg-server-xwayland
        - xorg-xinput
        - yakuake
    - user: name=hdhoang append=yes groups=wireshark
      when: ansible_hostname == 'ton'
    - ini_file: dest=/etc/NetworkManager/NetworkManager.conf section=main option=dhcp value=internal
    - copy: src=keyboard.conf dest=/etc/X11/xorg.conf.d/
      when: ansible_hostname == 'ton'
    - copy: src={{ansible_hostname}}/pointer.conf dest=/etc/X11/xorg.conf.d/
      when: ansible_hostname == 'ton'
    - file: state=directory dest={{home}}/.config/gtk-3.0/
    - ini_file: dest={{home}}/.config/gtk-3.0/settings.ini section=Settings option=gtk-theme-name value=Breeze-gtk
      become: no
    - copy: dest={{home}}/.gtkrc-2.0 content='include "/usr/share/themes/Breeze-gtk/gtk-2.0/gtkrc" gtk-theme-name=Breeze-gtk'
      become: no
    - ini_file: dest={{home}}/.config/baloofilerc section="Basic Settings" option=Indexing-Enabled value="false"
    - pacman: name=acpid
      when: ansible_hostname == 'ton'
    - template: src={{ansible_hostname}}/rotation-button dest=/etc/acpi/events/
      when: ansible_hostname == 'ton'
    - service: name=acpid state=started enabled=yes
      when: ansible_hostname == 'ton'
    - command: rustc --out-dir /usr/local/bin {{conf}}/rotate-screen.rs
      when: ansible_hostname == 'ton'

    - name: openvpn
      pacman: name=openvpn
    - template: src={{conf}}/kub.ovpn dest=/etc/openvpn/kub.conf
    - service: name=openvpn@kub state=started enabled=yes
      when: ansible_hostname == 'kub'

    - name: strongswan
      template: src={{conf}}/ipsec.conf dest=/etc/
    - copy: src={{h}}/secrets/1_{{ansible_hostname}}.zahe.me_bundle.crt dest=/etc/ipsec.d/certs/{{ansible_hostname}}.crt
    - copy: src={{h}}/secrets/2_{{ansible_hostname}}.zahe.me.key dest=/etc/ipsec.d/private/{{ansible_hostname}}.key
    - lineinfile: "create=yes dest=/etc/ipsec.secrets line=': RSA {{ansible_hostname}}.key'"
    - copy: src={{h}}/secrets/1_ton.zahe.me_bundle.crt dest=/etc/ipsec.d/certs/ton.zahe.me.crt
      when: ansible_hostname == 'kub'
    - include: kub/eap.task
      when: ansible_hostname == 'kub'
    - service: name=strongswan state=started enabled=yes

    - pacman: name=powertop
    - copy: src={{conf}}/powercfg dest=/usr/local/bin/ mode=0744
      when: ansible_hostname == 'ton'
    - copy: src={{conf}}/powercfg.service dest=/etc/systemd/system/
      when: ansible_hostname == 'ton'
    - service: name=powercfg state=started enabled=yes
      when: ansible_hostname == 'ton'

    - name: links
      file: state=link src=appdata/Mozilla path={{home}}/.mozilla
      become: no
    - copy: src={{conf}}/syncthing/ dest={{home}}/.config/syncthing/
      become: no
    - file: state=link src={{h}}/config/dotconfig/{{item}} path={{home}}/.config/{{item}}
      become: no
      with_items:
        - fontconfig
        - mpv
        - kwinrulesrc
        - youtube-dl.conf
        - MusicBrainz
    - file: state=link src={{h}}/config/dot{{item}} path={{home}}/.{{item}}
      become: no
      with_items:
        - ansible.cfg
        - emacs
        - gitconfig
        - mpdconf
        - pam_environment
        - ssh
    - file: state=link src={{h}}/config/shrc path={{home}}/.zshrc
      become: no
    - file: state=link src={{h}}/config/_pentadactylrc path={{home}}/.pentadactylrc
      become: no

    - name: network
      when: ansible_hostname == 'kub'
      ini_file: dest=/etc/systemd/network/eth0.network section={{item.s}} option={{item.o}} value={{item.v}}
      with_items:
        - {s: Match, o: Name, v: eth0}
        - {s: Network, o: Address, v: "{{address}}/24"}
        - {s: Network, o: Gateway, v: "{{network}}.1"}
        - {s: Network, o: IPForward, v: "yes"}
    - lineinfile: dest=/etc/resolv.conf line="nameserver {{ network }}.1"
      when: ansible_hostname == 'kub'
    - service: name=systemd-networkd state=started enabled=yes
      when: ansible_hostname == 'kub'

    - name: sshd
      lineinfile: dest=/etc/ssh/sshd_config line="ChallengeResponseAuthentication yes"
      when: ansible_hostname == 'kub'

    - name: leds
      copy: src={{conf}}/leds dest=/usr/local/bin/ mode=744
      when: ansible_hostname == 'kub'
    - copy: src={{conf}}/leds.service dest=/etc/systemd/system/
      when: ansible_hostname == 'kub'
    - service: name=leds state=started enabled=yes
      when: ansible_hostname == 'kub'

    - name: minidlna
      pacman: name=minidlna
      when: ansible_hostname == 'kub'
    - template: src={{conf}}/minidlna.conf dest=/etc/
      when: ansible_hostname == 'kub'
    - file: state=directory dest=/etc/systemd/system/minidlna.service.d/
      when: ansible_hostname == 'kub'
    - ini_file: dest=/etc/systemd/system/minidlna.service.d/home.conf section=Service option=ProtectHome value=off
      when: ansible_hostname == 'kub'
    - service: name=minidlna state=started enabled=yes
      when: ansible_hostname == 'kub'

    - name: nginx
      pacman: name=nginx
      when: ansible_hostname == 'kub'
    - template: src={{conf}}/nginx.conf dest=/etc/nginx/
      when: ansible_hostname == 'kub'
    - copy: src={{conf}}/redirects dest=/etc/nginx/
      when: ansible_hostname == 'kub'
    - copy: src={{h}}/secrets/1_zahe.me_bundle.crt dest=/etc/nginx/zahe.me.crt
      when: ansible_hostname == 'kub'
    - copy: src={{h}}/secrets/2_zahe.me.key dest=/etc/nginx/zahe.me.key
      when: ansible_hostname == 'kub'
    - service: name=nginx state=reloaded enabled=yes
      when: ansible_hostname == 'kub'

    - name: owncloud
      pacman: name=uwsgi-plugin-php
      when: ansible_hostname == 'kub'
    - git: repo=https://github.com/owncloud/core dest={{home}}/owncloud
      become: no
      when: ansible_hostname == 'kub'
    - git: repo=https://github.com/owncloud/news dest={{home}}/owncloud/apps/news
      become: no
      when: ansible_hostname == 'kub'
    - template: src={{conf}}/owncloud.ini dest=/etc/uwsgi/
      when: ansible_hostname == 'kub'
    - service: name=uwsgi@owncloud state=started enabled=yes
      when: ansible_hostname == 'kub'

    - name: tor
      pacman: name=tor
      when: ansible_hostname == 'kub'
    - template: src={{conf}}/torrc dest=/etc/tor/torrc
      when: ansible_hostname == 'kub'
    - service: name=tor state=started enabled=yes
      when: ansible_hostname == 'kub'
